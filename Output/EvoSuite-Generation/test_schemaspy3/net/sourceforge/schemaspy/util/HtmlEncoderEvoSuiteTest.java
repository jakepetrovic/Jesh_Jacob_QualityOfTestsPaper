/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.schemaspy.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import net.sourceforge.schemaspy.util.HtmlEncoder;

public class HtmlEncoderEvoSuiteTest {


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 net.sourceforge.schemaspy.util.HtmlEncoder.encodeToken(C)Ljava/lang/String;: root-Branch
   * 2 net.sourceforge.schemaspy.util.HtmlEncoder.encodeToken(Ljava/lang/String;)Ljava/lang/String;: I10 Branch 1 IFNONNULL L62 - true
   * 3 net.sourceforge.schemaspy.util.HtmlEncoder.encodeToken(Ljava/lang/String;)Ljava/lang/String;: I10 Branch 1 IFNONNULL L62 - false
   * 4 net.sourceforge.schemaspy.util.HtmlEncoder.encodeString(Ljava/lang/String;)Ljava/lang/String;: I21 Branch 2 IF_ICMPGE L74 - true
   * 5 net.sourceforge.schemaspy.util.HtmlEncoder.encodeString(Ljava/lang/String;)Ljava/lang/String;: I21 Branch 2 IF_ICMPGE L74 - false
   */
  @Test
  public void test0()  throws Throwable  {
      String string0 = HtmlEncoder.encodeString("=)q1<<bRg:W{fg");
      assertNotNull(string0);
      assertEquals("=)q1&lt;&lt;bRg:W{fg", string0);
  }
}
