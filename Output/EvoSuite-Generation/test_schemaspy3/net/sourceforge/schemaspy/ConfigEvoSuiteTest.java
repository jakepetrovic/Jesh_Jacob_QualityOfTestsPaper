/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.schemaspy;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.InvalidConfigurationException;
import net.sourceforge.schemaspy.view.DefaultSqlFormatter;
import net.sourceforge.schemaspy.view.SqlFormatter;

public class ConfigEvoSuiteTest {


  //Test case number: 0
  /*
   * 89 covered goals:
   * 1 net.sourceforge.schemaspy.Config$MissingRequiredParameterException.<init>(Ljava/lang/String;Z)V: root-Branch
   * 2 net.sourceforge.schemaspy.Config.isDbHelpRequired()Z: root-Branch
   * 3 net.sourceforge.schemaspy.Config.getLoadedFromJar()Ljava/lang/String;: root-Branch
   * 4 net.sourceforge.schemaspy.Config.isOneOfMultipleSchemas()Z: root-Branch
   * 5 net.sourceforge.schemaspy.Config.hasOrphans()Z: root-Branch
   * 6 net.sourceforge.schemaspy.Config.pullParam(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * 7 net.sourceforge.schemaspy.Config.getConnectionPropertiesFile()Ljava/lang/String;: root-Branch
   * 8 net.sourceforge.schemaspy.Config.isHelpRequired()Z: root-Branch
   * 9 net.sourceforge.schemaspy.Config.setMeta(Ljava/lang/String;)V: root-Branch
   * 10 net.sourceforge.schemaspy.Config.setSingleSignOn(Z)V: root-Branch
   * 11 net.sourceforge.schemaspy.Config.pullRequiredParam(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * 12 net.sourceforge.schemaspy.Config.getInstance()Lnet/sourceforge/schemaspy/Config;: I3 Branch 12 IFNONNULL L161 - true
   * 13 net.sourceforge.schemaspy.Config.isHtmlGenerationEnabled()Z: I4 Branch 13 IFNONNULL L183 - false
   * 14 net.sourceforge.schemaspy.Config.isHtmlGenerationEnabled()Z: I12 Branch 14 IFNE L184 - false
   * 15 net.sourceforge.schemaspy.Config.isImpliedConstraintsEnabled()Z: I4 Branch 15 IFNONNULL L194 - false
   * 16 net.sourceforge.schemaspy.Config.isImpliedConstraintsEnabled()Z: I12 Branch 16 IFNE L195 - false
   * 17 net.sourceforge.schemaspy.Config.getOutputDir()Ljava/io/File;: I4 Branch 18 IFNONNULL L212 - false
   * 18 net.sourceforge.schemaspy.Config.getGraphvizDir()Ljava/io/File;: I4 Branch 20 IFNONNULL L250 - false
   * 19 net.sourceforge.schemaspy.Config.getGraphvizDir()Ljava/io/File;: I14 Branch 21 IFNULL L252 - true
   * 20 net.sourceforge.schemaspy.Config.getMeta()Ljava/lang/String;: I4 Branch 22 IFNONNULL L277 - true
   * 21 net.sourceforge.schemaspy.Config.getDbType()Ljava/lang/String;: I4 Branch 23 IFNONNULL L287 - true
   * 22 net.sourceforge.schemaspy.Config.getDb()Ljava/lang/String;: I4 Branch 25 IFNONNULL L301 - false
   * 23 net.sourceforge.schemaspy.Config.getCatalog()Ljava/lang/String;: I4 Branch 26 IFNONNULL L311 - false
   * 24 net.sourceforge.schemaspy.Config.getHost()Ljava/lang/String;: I4 Branch 29 IFNONNULL L345 - false
   * 25 net.sourceforge.schemaspy.Config.isSingleSignOn()Z: I4 Branch 34 IFNONNULL L409 - true
   * 26 net.sourceforge.schemaspy.Config.isPromptForPasswordEnabled()Z: I4 Branch 39 IFNONNULL L457 - false
   * 27 net.sourceforge.schemaspy.Config.getMaxDetailedTables()I: I4 Branch 40 IFNONNULL L469 - false
   * 28 net.sourceforge.schemaspy.Config.getConnectionProperties()Ljava/util/Properties;: I4 Branch 42 IFNONNULL L510 - true
   * 29 net.sourceforge.schemaspy.Config.getDriverPath()Ljava/lang/String;: I4 Branch 47 IFNONNULL L556 - false
   * 30 net.sourceforge.schemaspy.Config.getDriverPath()Ljava/lang/String;: I16 Branch 48 IFNONNULL L560 - false
   * 31 net.sourceforge.schemaspy.Config.getCss()Ljava/lang/String;: I4 Branch 49 IFNONNULL L581 - false
   * 32 net.sourceforge.schemaspy.Config.getCss()Ljava/lang/String;: I16 Branch 50 IFNONNULL L583 - false
   * 33 net.sourceforge.schemaspy.Config.getFont()Ljava/lang/String;: I4 Branch 51 IFNONNULL L602 - false
   * 34 net.sourceforge.schemaspy.Config.getFont()Ljava/lang/String;: I16 Branch 52 IFNONNULL L604 - false
   * 35 net.sourceforge.schemaspy.Config.getFontSize()I: I4 Branch 53 IFNONNULL L629 - true
   * 36 net.sourceforge.schemaspy.Config.getCharset()Ljava/lang/String;: I4 Branch 54 IFNONNULL L654 - true
   * 37 net.sourceforge.schemaspy.Config.getDescription()Ljava/lang/String;: I4 Branch 56 IFNONNULL L675 - false
   * 38 net.sourceforge.schemaspy.Config.getMaxDbThreads()I: I4 Branch 57 IFNONNULL L694 - false
   * 39 net.sourceforge.schemaspy.Config.getMaxDbThreads()I: I56 Branch 58 IFNONNULL L706 - true
   * 40 net.sourceforge.schemaspy.Config.getMaxDbThreads()I: I66 Branch 59 IFNULL L708 - false
   * 41 net.sourceforge.schemaspy.Config.getMaxDbThreads()I: I81 Branch 60 IFNONNULL L711 - false
   * 42 net.sourceforge.schemaspy.Config.getMaxDbThreads()I: I91 Branch 61 IFNULL L713 - true
   * 43 net.sourceforge.schemaspy.Config.getMaxDbThreads()I: I100 Branch 62 IFGE L715 - true
   * 44 net.sourceforge.schemaspy.Config.getMaxDbThreads()I: I109 Branch 63 IFNE L717 - true
   * 45 net.sourceforge.schemaspy.Config.isLogoEnabled()Z: I4 Branch 64 IFNONNULL L727 - false
   * 46 net.sourceforge.schemaspy.Config.isLogoEnabled()Z: I12 Branch 65 IFNE L728 - false
   * 47 net.sourceforge.schemaspy.Config.isEncodeCommentsEnabled()Z: I4 Branch 68 IFNONNULL L790 - true
   * 48 net.sourceforge.schemaspy.Config.isNumRowsEnabled()Z: I4 Branch 70 IFNONNULL L813 - false
   * 49 net.sourceforge.schemaspy.Config.isNumRowsEnabled()Z: I12 Branch 71 IFNE L814 - false
   * 50 net.sourceforge.schemaspy.Config.isMeterEnabled()Z: I4 Branch 74 IFNONNULL L848 - true
   * 51 net.sourceforge.schemaspy.Config.getColumnExclusions()Ljava/util/regex/Pattern;: I4 Branch 75 IFNONNULL L869 - true
   * 52 net.sourceforge.schemaspy.Config.getIndirectColumnExclusions()Ljava/util/regex/Pattern;: I4 Branch 78 IFNONNULL L899 - true
   * 53 net.sourceforge.schemaspy.Config.setSqlFormatter(Lnet/sourceforge/schemaspy/view/SqlFormatter;)V: I8 Branch 93 IFNULL L1016 - false
   * 54 net.sourceforge.schemaspy.Config.setColumnDetails(Ljava/lang/String;)V: I10 Branch 97 IFNULL L1074 - true
   * 55 net.sourceforge.schemaspy.Config.setColumnDetails(Ljava/lang/String;)V: I34 Branch 99 IF_ICMPGE L1079 - true
   * 56 net.sourceforge.schemaspy.Config.setColumnDetails(Ljava/lang/String;)V: I34 Branch 99 IF_ICMPGE L1079 - false
   * 57 net.sourceforge.schemaspy.Config.setColumnDetails(Ljava/lang/String;)V: I43 Branch 100 IFLE L1080 - false
   * 58 net.sourceforge.schemaspy.Config.setColumnDetails(Ljava/lang/String;)V: I62 Branch 101 IFGT L1085 - true
   * 59 net.sourceforge.schemaspy.Config.getColumnDetails()Ljava/util/List;: I4 Branch 103 IFNONNULL L1095 - false
   * 60 net.sourceforge.schemaspy.Config.isEvaluateAllEnabled()Z: I4 Branch 104 IFNONNULL L1107 - false
   * 61 net.sourceforge.schemaspy.Config.isHighQuality()Z: I4 Branch 108 IFNONNULL L1186 - false
   * 62 net.sourceforge.schemaspy.Config.isHighQuality()Z: I19 Branch 109 IFEQ L1188 - true
   * 63 net.sourceforge.schemaspy.Config.isLowQuality()Z: I4 Branch 110 IFNONNULL L1202 - false
   * 64 net.sourceforge.schemaspy.Config.isLowQuality()Z: I19 Branch 111 IFEQ L1204 - true
   * 65 net.sourceforge.schemaspy.Config.isLowQuality()Z: I38 Branch 113 IFNE L1210 - false
   * 66 net.sourceforge.schemaspy.Config.setLogLevel(Ljava/lang/String;)V: I3 Branch 114 IFNONNULL L1230 - false
   * 67 net.sourceforge.schemaspy.Config.getLogLevel()Ljava/util/logging/Level;: I4 Branch 116 IFNONNULL L1258 - false
   * 68 net.sourceforge.schemaspy.Config.getDbProperties()Ljava/util/Properties;: I4 Branch 117 IFNONNULL L1328 - true
   * 69 net.sourceforge.schemaspy.Config.determineDbProperties(Ljava/lang/String;)Ljava/util/Properties;: I198 Branch 118 IFNONNULL L1388 - false
   * 70 net.sourceforge.schemaspy.Config.determineDbProperties(Ljava/lang/String;)Ljava/util/Properties;: I276 Branch 120 IFNULL L1405 - true
   * 71 net.sourceforge.schemaspy.Config.getDbPropertiesLoadedFrom()Ljava/lang/String;: I4 Branch 121 IFNONNULL L1424 - true
   * 72 net.sourceforge.schemaspy.Config.getRemainingParameters()Ljava/util/List;: I35 Branch 122 IFEQ L1438 - true
   * 73 net.sourceforge.schemaspy.Config.getDbSpecificOptions()Ljava/util/Map;: I4 Branch 123 IFNONNULL L1460 - false
   * 74 net.sourceforge.schemaspy.Config.asProperties(Ljava/util/ResourceBundle;)Ljava/util/Properties;: I15 Branch 124 IFEQ L1474 - true
   * 75 net.sourceforge.schemaspy.Config.asProperties(Ljava/util/ResourceBundle;)Ljava/util/Properties;: I15 Branch 124 IFEQ L1474 - false
   * 76 net.sourceforge.schemaspy.Config.pullParam(Ljava/lang/String;ZZ)Ljava/lang/String;: I10 Branch 125 IFGE L1507 - false
   * 77 net.sourceforge.schemaspy.Config.pullParam(Ljava/lang/String;ZZ)Ljava/lang/String;: I14 Branch 126 IFEQ L1508 - true
   * 78 net.sourceforge.schemaspy.Config.pullParam(Ljava/lang/String;ZZ)Ljava/lang/String;: I14 Branch 126 IFEQ L1508 - false
   * 79 net.sourceforge.schemaspy.Config.populate()V: I4 Branch 133 IFNE L1586 - false
   * 80 net.sourceforge.schemaspy.Config.populate()V: I28 Branch 134 IF_ICMPGE L1591 - false
   * 81 net.sourceforge.schemaspy.Config.populate()V: I39 Branch 135 IFNULL L1593 - true
   * 82 net.sourceforge.schemaspy.Config.populate()V: I39 Branch 135 IFNULL L1593 - false
   * 83 net.sourceforge.schemaspy.Config.getIndirectColumnExclusions()Ljava/util/regex/Pattern;: I4 Branch 78 IFNONNULL L899 - false
   * 84 net.sourceforge.schemaspy.Config.getIndirectColumnExclusions()Ljava/util/regex/Pattern;: I14 Branch 79 IFNONNULL L901 - false
   * 85 net.sourceforge.schemaspy.Config.getIndirectColumnExclusions()Ljava/util/regex/Pattern;: I23 Branch 80 IFNONNULL L903 - false
   * 86 net.sourceforge.schemaspy.Config.getFontSize()I: I4 Branch 53 IFNONNULL L629 - false
   * 87 net.sourceforge.schemaspy.Config.getColumnExclusions()Ljava/util/regex/Pattern;: I4 Branch 75 IFNONNULL L869 - false
   * 88 net.sourceforge.schemaspy.Config.getColumnExclusions()Ljava/util/regex/Pattern;: I14 Branch 76 IFNONNULL L871 - false
   * 89 net.sourceforge.schemaspy.Config.getColumnExclusions()Ljava/util/regex/Pattern;: I23 Branch 77 IFNONNULL L873 - false
   */
  @Test
  public void test0()  throws Throwable  {
      Config config0 = Config.getInstance();
      config0.hasOrphans();
      config0.setSingleSignOn(false);
      config0.isPromptForPasswordEnabled();
      config0.setMeta("NUMERIC");
      Config config1 = Config.getInstance();
      config0.isSingleSignOn();
      DefaultSqlFormatter defaultSqlFormatter0 = new DefaultSqlFormatter();
      config1.setSqlFormatter((SqlFormatter) defaultSqlFormatter0);
      Config.getInstance();
      // Undeclared exception!
      try {
        config1.getRemainingParameters();
        fail("Expecting exception: InvalidConfigurationException");
      } catch(InvalidConfigurationException e) {
        /*
         * net.sourceforge.schemaspy.Config$MissingRequiredParameterException: Required parameter '-o' was not specified.
         */
      }
  }

  //Test case number: 1
  /*
   * 19 covered goals:
   * 1 net.sourceforge.schemaspy.Config.setCharset(Ljava/lang/String;)V: root-Branch
   * 2 net.sourceforge.schemaspy.Config.setCss(Ljava/lang/String;)V: root-Branch
   * 3 net.sourceforge.schemaspy.Config.setHasOrphans(Z)V: root-Branch
   * 4 net.sourceforge.schemaspy.Config.setEncodeCommentsEnabled(Z)V: root-Branch
   * 5 net.sourceforge.schemaspy.Config.getMeta()Ljava/lang/String;: I4 Branch 22 IFNONNULL L277 - false
   * 6 net.sourceforge.schemaspy.Config.getUser()Ljava/lang/String;: I4 Branch 32 IFNONNULL L385 - false
   * 7 net.sourceforge.schemaspy.Config.getUser()Ljava/lang/String;: I9 Branch 33 IFNE L386 - true
   * 8 net.sourceforge.schemaspy.Config.getConnectionProperties()Ljava/util/Properties;: I4 Branch 42 IFNONNULL L510 - false
   * 9 net.sourceforge.schemaspy.Config.getConnectionProperties()Ljava/util/Properties;: I14 Branch 43 IFNULL L512 - true
   * 10 net.sourceforge.schemaspy.Config.isMeterEnabled()Z: I4 Branch 74 IFNONNULL L848 - false
   * 11 net.sourceforge.schemaspy.Config.getParam(Ljava/lang/String;)Ljava/lang/String;: I18 Branch 146 IF_ICMPGE L1685 - false
   * 12 net.sourceforge.schemaspy.Config.setCatalog(Ljava/lang/String;)V: root-Branch
   * 13 net.sourceforge.schemaspy.Config.hasOrphans()Z: root-Branch
   * 14 net.sourceforge.schemaspy.Config.isMeterEnabled()Z: I4 Branch 74 IFNONNULL L848 - true
   * 15 net.sourceforge.schemaspy.Config.isSingleSignOn()Z: I4 Branch 34 IFNONNULL L409 - false
   * 16 net.sourceforge.schemaspy.Config.getDbPropertiesLoadedFrom()Ljava/lang/String;: I4 Branch 121 IFNONNULL L1424 - false
   * 17 net.sourceforge.schemaspy.Config.getUser()Ljava/lang/String;: I9 Branch 33 IFNE L386 - false
   * 18 net.sourceforge.schemaspy.Config.getDbType()Ljava/lang/String;: I4 Branch 23 IFNONNULL L287 - false
   * 19 net.sourceforge.schemaspy.Config.getDbType()Ljava/lang/String;: I16 Branch 24 IFNONNULL L289 - false
   */
  @Test
  public void test1()  throws Throwable  {
      Config config0 = Config.getInstance();
      config0.setCatalog((String) null);
      config0.getDescription();
      config0.hasOrphans();
      config0.getDbPropertiesLoadedFrom();
      config0.setEncodeCommentsEnabled(true);
      config0.isMeterEnabled();
      config0.getConnectionProperties();
      config0.setCss((String) null);
      config0.isMeterEnabled();
      config0.setCharset("[SF110/lib/evosuite.jar]/net/sourceforge/schemaspy/dbTypes/ora.properties");
      config0.getParam((String) null);
      config0.getCatalog();
      config0.getDescription();
      config0.getMeta();
      // Undeclared exception!
      try {
        config0.getUser();
        fail("Expecting exception: Config.MissingRequiredParameterException");
      } catch(Config.MissingRequiredParameterException e) {
        /*
         * Required parameter '-u' was not specified.
         */
      }
  }

  //Test case number: 2
  /*
   * 14 covered goals:
   * 1 net.sourceforge.schemaspy.Config.setSqlFormatter(Ljava/lang/String;)V: root-Branch
   * 2 net.sourceforge.schemaspy.Config.setInstance(Lnet/sourceforge/schemaspy/Config;)V: root-Branch
   * 3 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I38 Branch 4 IFNE L151 - false
   * 4 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I43 Branch 5 IFNE L151 - false
   * 5 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I48 Branch 6 IFNE L151 - false
   * 6 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I53 Branch 7 IFNE L151 - true
   * 7 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I78 Branch 10 IFNE L157 - false
   * 8 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I83 Branch 11 IFEQ L157 - true
   * 9 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I14 Branch 127 IFEQ L1553 - true
   * 10 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I14 Branch 127 IFEQ L1553 - false
   * 11 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I29 Branch 128 IF_ICMPEQ L1555 - true
   * 12 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I80 Branch 130 IFEQ L1568 - true
   * 13 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I80 Branch 130 IFEQ L1568 - false
   * 14 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I91 Branch 131 IFLE L1569 - true
   */
  @Test
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[0] = "";
      stringArray0[1] = "_z";
      stringArray0[2] = "f`A8W9TI-B<+";
      stringArray0[3] = "1#Y)4keZ*r^O)q2S";
      stringArray0[4] = "2|0Xq7<%";
      stringArray0[5] = "Q%IQ*{.?f#Uvew";
      stringArray0[6] = "";
      stringArray0[7] = "column";
      stringArray0[8] = "-h";
      stringArray0[9] = "Failed to retrieve table/view comments: ";
      Config config0 = new Config(stringArray0);
      assertNotNull(config0);
      
      config0.setSqlFormatter((String) null);
      assertEquals(false, config0.isDbHelpRequired());
      assertEquals(false, config0.hasRoutines());
      assertEquals(true, config0.isHelpRequired());
      assertEquals(false, config0.hasOrphans());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 net.sourceforge.schemaspy.Config.setDescription(Ljava/lang/String;)V: root-Branch
   * 2 net.sourceforge.schemaspy.Config.<init>()V: I22 Branch 3 IFNONNULL L135 - true
   */
  @Test
  public void test3()  throws Throwable  {
      Config config0 = new Config();
      config0.setDescription((String) null);
      assertEquals(false, config0.hasOrphans());
      assertEquals(false, config0.hasRoutines());
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 net.sourceforge.schemaspy.Config.hasRoutines()Z: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[0] = "";
      stringArray0[1] = "_z";
      stringArray0[2] = "f`A8W9TI-B<+";
      stringArray0[3] = "1#Y)4keZ*r^O)q2S";
      stringArray0[4] = "2|0Xq7<%";
      stringArray0[5] = "Q%IQ*{.?f#Uvew";
      stringArray0[6] = "";
      stringArray0[7] = "column";
      stringArray0[8] = "-h";
      stringArray0[9] = "Failed to retrieve table/view comments: ";
      Config config0 = new Config(stringArray0);
      assertNotNull(config0);
      
      boolean boolean0 = config0.hasRoutines();
      assertEquals(false, config0.isDbHelpRequired());
      assertEquals(false, config0.hasOrphans());
      assertEquals(true, config0.isHelpRequired());
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 net.sourceforge.schemaspy.Config.setPassword(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test5()  throws Throwable  {
      Config config0 = new Config();
      config0.setPassword((String) null);
      assertEquals(false, config0.hasOrphans());
      assertEquals(false, config0.hasRoutines());
  }

  //Test case number: 6
  /*
   * 7 covered goals:
   * 1 net.sourceforge.schemaspy.Config.isEvaluateAllEnabled()Z: I4 Branch 104 IFNONNULL L1107 - true
   * 2 net.sourceforge.schemaspy.Config.setEvaluateAllEnabled(Z)V: root-Branch
   * 3 net.sourceforge.schemaspy.Config.isEncodeCommentsEnabled()Z: I4 Branch 68 IFNONNULL L790 - false
   * 4 net.sourceforge.schemaspy.Config.isEncodeCommentsEnabled()Z: I12 Branch 69 IFNE L791 - false
   * 5 net.sourceforge.schemaspy.Config.getDbProperties()Ljava/util/Properties;: I4 Branch 117 IFNONNULL L1328 - false
   * 6 net.sourceforge.schemaspy.Config.getCharset()Ljava/lang/String;: I4 Branch 54 IFNONNULL L654 - false
   * 7 net.sourceforge.schemaspy.Config.getCharset()Ljava/lang/String;: I16 Branch 55 IFNONNULL L656 - false
   */
  @Test
  public void test6()  throws Throwable  {
      Config config0 = new Config();
      config0.setEvaluateAllEnabled(false);
      // Undeclared exception!
      try {
        config0.getRemainingParameters();
        fail("Expecting exception: InvalidConfigurationException");
      } catch(InvalidConfigurationException e) {
        /*
         * net.sourceforge.schemaspy.Config$MissingRequiredParameterException: Required parameter '-o' was not specified.
         */
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 net.sourceforge.schemaspy.Config.setDriverPath(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test7()  throws Throwable  {
      Config config0 = new Config();
      config0.setDriverPath((String) null);
      assertEquals(false, config0.hasRoutines());
      assertEquals(false, config0.hasOrphans());
  }

  //Test case number: 8
  /*
   * 8 covered goals:
   * 1 net.sourceforge.schemaspy.Config.setNumRowsEnabled(Z)V: root-Branch
   * 2 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I53 Branch 7 IFNE L151 - false
   * 3 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I58 Branch 8 IFNE L151 - false
   * 4 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I63 Branch 9 IFEQ L151 - true
   * 5 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I29 Branch 128 IF_ICMPEQ L1555 - false
   * 6 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I36 Branch 129 IF_ICMPEQ L1555 - false
   * 7 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I91 Branch 131 IFLE L1569 - false
   * 8 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I95 Branch 132 IFLE L1569 - true
   */
  @Test
  public void test8()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "JCf4.twQq";
      stringArray0[1] = "1";
      stringArray0[2] = "yAGHXc,nmbs=#";
      stringArray0[3] = "{im8\"n/.)n&+;D|";
      stringArray0[4] = "remoteCatalog";
      stringArray0[5] = "%'~!wjGb<x1$$";
      stringArray0[6] = "cM[.A*M.z?@B";
      stringArray0[7] = "L#Z nw(VM7'dN~r+";
      stringArray0[8] = "\"UNeee_ B?My/";
      Config config0 = new Config(stringArray0);
      assertNotNull(config0);
      
      config0.setNumRowsEnabled(false);
      assertEquals(false, config0.isNumRowsEnabled());
      assertEquals(false, config0.hasRoutines());
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 net.sourceforge.schemaspy.Config.setSchemaSpec(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test9()  throws Throwable  {
      Config config0 = new Config();
      config0.setSchemaSpec("SwVS@]");
      assertEquals(false, config0.hasOrphans());
      assertEquals(false, config0.hasRoutines());
      assertEquals("SwVS@]", config0.getSchemaSpec());
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * 1 net.sourceforge.schemaspy.Config.setColumnExclusions(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[0] = "";
      stringArray0[1] = "_z";
      stringArray0[2] = "f`A8W9TI-B<+";
      stringArray0[3] = "1#Y)4keZ*r^O)q2S";
      stringArray0[4] = "2|0Xq7<%";
      stringArray0[5] = "Q%IQ*{.?f#Uvew";
      stringArray0[6] = "";
      stringArray0[7] = "column";
      stringArray0[8] = "-h";
      stringArray0[9] = "Failed to retrieve table/view comments: ";
      Config config0 = new Config(stringArray0);
      assertNotNull(config0);
      
      config0.setColumnExclusions("NULLIF");
      assertEquals(false, config0.hasRoutines());
      assertEquals(true, config0.isHelpRequired());
      assertEquals(false, config0.hasOrphans());
      assertEquals(false, config0.isDbHelpRequired());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 net.sourceforge.schemaspy.Config.setUser(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "JCf4.twQq";
      stringArray0[1] = "1";
      stringArray0[2] = "yAGHXc,nmbs=#";
      stringArray0[3] = "{im8\"n/.)n&+;D|";
      stringArray0[4] = "remoteCatalog";
      stringArray0[5] = "%'~!wjGb<x1$$";
      stringArray0[6] = "cM[.A*M.z?@B";
      stringArray0[7] = "L#Z nw(VM7'dN~r+";
      stringArray0[8] = "\"UNeee_ B?My/";
      Config config0 = new Config(stringArray0);
      assertNotNull(config0);
      
      config0.setUser("G&9O");
      assertEquals(false, config0.hasRoutines());
      assertEquals("G&9O", config0.getUser());
      assertEquals(false, config0.isHelpRequired());
      assertEquals(false, config0.hasOrphans());
      assertEquals(false, config0.isDbHelpRequired());
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * 1 net.sourceforge.schemaspy.Config.setGraphvizDir(Ljava/io/File;)V: root-Branch
   * 2 net.sourceforge.schemaspy.Config.setGraphvizDir(Ljava/lang/String;)V: I5 Branch 19 IFLE L225 - true
   */
  @Test
  public void test12()  throws Throwable  {
      Config config0 = Config.getInstance();
      config0.setGraphvizDir("d");
      assertEquals(false, config0.hasRoutines());
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * 1 net.sourceforge.schemaspy.Config.setIndirectColumnExclusions(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[0] = "";
      stringArray0[1] = "_z";
      stringArray0[2] = "f`A8W9TI-B<+";
      stringArray0[3] = "1#Y)4keZ*r^O)q2S";
      stringArray0[4] = "2|0Xq7<%";
      stringArray0[5] = "Q%IQ*{.?f#Uvew";
      stringArray0[6] = "";
      stringArray0[7] = "column";
      stringArray0[8] = "-h";
      stringArray0[9] = "Failed to retrieve table/view comments: ";
      Config config0 = new Config(stringArray0);
      assertNotNull(config0);
      
      config0.setIndirectColumnExclusions("[s,'\"]");
      assertEquals(true, config0.isHelpRequired());
      assertEquals(false, config0.hasOrphans());
      assertEquals(false, config0.hasRoutines());
      assertEquals(false, config0.isDbHelpRequired());
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * 1 net.sourceforge.schemaspy.Config.setTableExclusions(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test14()  throws Throwable  {
      Config config0 = new Config();
      config0.setTableExclusions("");
      assertEquals(false, config0.hasOrphans());
      assertEquals(false, config0.hasRoutines());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * 1 net.sourceforge.schemaspy.Config.setTableInclusions(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[0] = "";
      stringArray0[1] = "_z";
      stringArray0[2] = "f`A8W9TI-B<+";
      stringArray0[3] = "1#Y)4keZ*r^O)q2S";
      stringArray0[4] = "2|0Xq7<%";
      stringArray0[5] = "Q%IQ*{.?f#Uvew";
      stringArray0[6] = "";
      stringArray0[7] = "column";
      stringArray0[8] = "-h";
      stringArray0[9] = "Failed to retrieve table/view comments: ";
      Config config0 = new Config(stringArray0);
      assertNotNull(config0);
      
      config0.setTableInclusions("");
      assertEquals(false, config0.hasRoutines());
      assertEquals(false, config0.isDbHelpRequired());
      assertEquals(true, config0.isHelpRequired());
      assertEquals(false, config0.hasOrphans());
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * 1 net.sourceforge.schemaspy.Config.setServer(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test16()  throws Throwable  {
      Config config0 = new Config();
      config0.setServer("(Fe2h#@4&X");
      assertEquals("(Fe2h#@4&X", config0.getServer());
      assertEquals(false, config0.hasRoutines());
      assertEquals(false, config0.hasOrphans());
  }

  //Test case number: 17
  /*
   * 2 covered goals:
   * 1 net.sourceforge.schemaspy.Config.setFontSize(I)V: root-Branch
   * 2 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I53 Branch 7 IFNE L151 - true
   */
  @Test
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[0] = "";
      stringArray0[1] = "_z";
      stringArray0[2] = "f`A8W9TI-B<+";
      stringArray0[3] = "1#Y)4keZ*r^O)q2S";
      stringArray0[4] = "2|0Xq7<%";
      stringArray0[5] = "Q%IQ*{.?f#Uvew";
      stringArray0[6] = "";
      stringArray0[7] = "column";
      stringArray0[8] = "-h";
      stringArray0[9] = "Failed to retrieve table/view comments: ";
      Config config0 = new Config(stringArray0);
      assertNotNull(config0);
      
      config0.setFontSize(0);
      assertEquals(0, config0.getFontSize());
      assertEquals(true, config0.isHelpRequired());
  }

  //Test case number: 18
  /*
   * 57 covered goals:
   * 1 net.sourceforge.schemaspy.Config.getOutputDir()Ljava/io/File;: I4 Branch 18 IFNONNULL L212 - true
   * 2 net.sourceforge.schemaspy.Config.getDbType()Ljava/lang/String;: I4 Branch 23 IFNONNULL L287 - false
   * 3 net.sourceforge.schemaspy.Config.getDbType()Ljava/lang/String;: I16 Branch 24 IFNONNULL L289 - false
   * 4 net.sourceforge.schemaspy.Config.getSchema()Ljava/lang/String;: I4 Branch 27 IFNONNULL L321 - false
   * 5 net.sourceforge.schemaspy.Config.isSchemaDisabled()Z: I4 Branch 28 IFNONNULL L334 - false
   * 6 net.sourceforge.schemaspy.Config.getPort()Ljava/lang/Integer;: I4 Branch 30 IFNONNULL L355 - false
   * 7 net.sourceforge.schemaspy.Config.getServer()Ljava/lang/String;: I4 Branch 31 IFNONNULL L367 - false
   * 8 net.sourceforge.schemaspy.Config.getUser()Ljava/lang/String;: I9 Branch 33 IFNE L386 - false
   * 9 net.sourceforge.schemaspy.Config.isSingleSignOn()Z: I4 Branch 34 IFNONNULL L409 - false
   * 10 net.sourceforge.schemaspy.Config.getPassword()Ljava/lang/String;: I4 Branch 35 IFNONNULL L428 - false
   * 11 net.sourceforge.schemaspy.Config.getPassword()Ljava/lang/String;: I16 Branch 36 IFNONNULL L431 - false
   * 12 net.sourceforge.schemaspy.Config.getPassword()Ljava/lang/String;: I19 Branch 37 IFEQ L431 - true
   * 13 net.sourceforge.schemaspy.Config.getPassword()Ljava/lang/String;: I36 Branch 38 IFNONNULL L434 - false
   * 14 net.sourceforge.schemaspy.Config.isPromptForPasswordEnabled()Z: I4 Branch 39 IFNONNULL L457 - true
   * 15 net.sourceforge.schemaspy.Config.getFontSize()I: I4 Branch 53 IFNONNULL L629 - false
   * 16 net.sourceforge.schemaspy.Config.getCharset()Ljava/lang/String;: I4 Branch 54 IFNONNULL L654 - false
   * 17 net.sourceforge.schemaspy.Config.getCharset()Ljava/lang/String;: I16 Branch 55 IFNONNULL L656 - false
   * 18 net.sourceforge.schemaspy.Config.isRankDirBugEnabled()Z: I4 Branch 66 IFNONNULL L746 - false
   * 19 net.sourceforge.schemaspy.Config.isRailsEnabled()Z: I4 Branch 67 IFNONNULL L773 - false
   * 20 net.sourceforge.schemaspy.Config.isEncodeCommentsEnabled()Z: I4 Branch 68 IFNONNULL L790 - false
   * 21 net.sourceforge.schemaspy.Config.isEncodeCommentsEnabled()Z: I12 Branch 69 IFNE L791 - false
   * 22 net.sourceforge.schemaspy.Config.getColumnExclusions()Ljava/util/regex/Pattern;: I4 Branch 75 IFNONNULL L869 - false
   * 23 net.sourceforge.schemaspy.Config.getColumnExclusions()Ljava/util/regex/Pattern;: I14 Branch 76 IFNONNULL L871 - false
   * 24 net.sourceforge.schemaspy.Config.getColumnExclusions()Ljava/util/regex/Pattern;: I23 Branch 77 IFNONNULL L873 - false
   * 25 net.sourceforge.schemaspy.Config.getIndirectColumnExclusions()Ljava/util/regex/Pattern;: I4 Branch 78 IFNONNULL L899 - false
   * 26 net.sourceforge.schemaspy.Config.getIndirectColumnExclusions()Ljava/util/regex/Pattern;: I14 Branch 79 IFNONNULL L901 - false
   * 27 net.sourceforge.schemaspy.Config.getIndirectColumnExclusions()Ljava/util/regex/Pattern;: I23 Branch 80 IFNONNULL L903 - false
   * 28 net.sourceforge.schemaspy.Config.getTableInclusions()Ljava/util/regex/Pattern;: I4 Branch 81 IFNONNULL L926 - false
   * 29 net.sourceforge.schemaspy.Config.getTableInclusions()Ljava/util/regex/Pattern;: I14 Branch 82 IFNONNULL L928 - false
   * 30 net.sourceforge.schemaspy.Config.getTableInclusions()Ljava/util/regex/Pattern;: I23 Branch 83 IFNONNULL L930 - false
   * 31 net.sourceforge.schemaspy.Config.getTableExclusions()Ljava/util/regex/Pattern;: I4 Branch 84 IFNONNULL L957 - false
   * 32 net.sourceforge.schemaspy.Config.getTableExclusions()Ljava/util/regex/Pattern;: I14 Branch 85 IFNONNULL L959 - false
   * 33 net.sourceforge.schemaspy.Config.getTableExclusions()Ljava/util/regex/Pattern;: I23 Branch 86 IFNONNULL L961 - false
   * 34 net.sourceforge.schemaspy.Config.getSchemas()Ljava/util/List;: I4 Branch 87 IFNONNULL L978 - false
   * 35 net.sourceforge.schemaspy.Config.getSchemas()Ljava/util/List;: I14 Branch 88 IFNONNULL L980 - false
   * 36 net.sourceforge.schemaspy.Config.getSchemas()Ljava/util/List;: I24 Branch 89 IFNULL L982 - true
   * 37 net.sourceforge.schemaspy.Config.getSqlFormatter()Lnet/sourceforge/schemaspy/view/SqlFormatter;: I4 Branch 94 IFNONNULL L1029 - false
   * 38 net.sourceforge.schemaspy.Config.getSqlFormatter()Lnet/sourceforge/schemaspy/view/SqlFormatter;: I9 Branch 95 IFNONNULL L1030 - false
   * 39 net.sourceforge.schemaspy.Config.getSqlFormatter()Lnet/sourceforge/schemaspy/view/SqlFormatter;: I21 Branch 96 IFNONNULL L1033 - false
   * 40 net.sourceforge.schemaspy.Config.getSchemaSpec()Ljava/lang/String;: I4 Branch 105 IFNONNULL L1134 - false
   * 41 net.sourceforge.schemaspy.Config.getRenderer()Ljava/lang/String;: I9 Branch 106 IFNULL L1159 - true
   * 42 net.sourceforge.schemaspy.Config.getDbProperties()Ljava/util/Properties;: I4 Branch 117 IFNONNULL L1328 - false
   * 43 net.sourceforge.schemaspy.Config.populate()V: I4 Branch 133 IFNE L1586 - true
   * 44 net.sourceforge.schemaspy.Config.isDbHelpRequired()Z: root-Branch
   * 45 net.sourceforge.schemaspy.Config.isOneOfMultipleSchemas()Z: root-Branch
   * 46 net.sourceforge.schemaspy.Config.setOutputDir(Ljava/io/File;)V: root-Branch
   * 47 net.sourceforge.schemaspy.Config.isHelpRequired()Z: root-Branch
   * 48 net.sourceforge.schemaspy.Config.populate()V: I4 Branch 133 IFNE L1586 - false
   * 49 net.sourceforge.schemaspy.Config.populate()V: I28 Branch 134 IF_ICMPGE L1591 - false
   * 50 net.sourceforge.schemaspy.Config.populate()V: I39 Branch 135 IFNULL L1593 - true
   * 51 net.sourceforge.schemaspy.Config.populate()V: I39 Branch 135 IFNULL L1593 - false
   * 52 net.sourceforge.schemaspy.Config.getDbSpecificOptions()Ljava/util/Map;: I4 Branch 123 IFNONNULL L1460 - false
   * 53 net.sourceforge.schemaspy.Config.getDbPropertiesLoadedFrom()Ljava/lang/String;: I4 Branch 121 IFNONNULL L1424 - true
   * 54 net.sourceforge.schemaspy.Config.setOutputDir(Ljava/lang/String;)V: I5 Branch 17 IFLE L201 - true
   * 55 net.sourceforge.schemaspy.Config.setColumnDetails(Ljava/lang/String;)V: I10 Branch 97 IFNULL L1074 - true
   * 56 net.sourceforge.schemaspy.Config.getRemainingParameters()Ljava/util/List;: I35 Branch 122 IFEQ L1438 - true
   * 57 net.sourceforge.schemaspy.Config.getColumnDetails()Ljava/util/List;: I4 Branch 103 IFNONNULL L1095 - false
   */
  @Test
  public void test18()  throws Throwable  {
      Config config0 = new Config();
      config0.setOutputDir("Failed to initialize instance of SQL formatter: ");
      // Undeclared exception!
      try {
        config0.getRemainingParameters();
        fail("Expecting exception: InvalidConfigurationException");
      } catch(InvalidConfigurationException e) {
        /*
         * net.sourceforge.schemaspy.Config$MissingRequiredParameterException: Required parameter '-u' was not specified.
         */
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * 1 net.sourceforge.schemaspy.Config.setConnectionPropertiesFile(Ljava/lang/String;)V: I4 Branch 41 IFNONNULL L495 - false
   */
  @Test
  public void test19()  throws Throwable  {
      Config config0 = new Config();
      try {
        config0.setConnectionPropertiesFile("host");
        fail("Expecting exception: FileNotFoundException");
      } catch(FileNotFoundException e) {
        /*
         * host (No such file or directory)
         */
      }
  }

  //Test case number: 20
  /*
   * 3 covered goals:
   * 1 net.sourceforge.schemaspy.Config.setConnectionProperties(Ljava/lang/String;)V: I19 Branch 45 IFEQ L540 - true
   * 2 net.sourceforge.schemaspy.Config.setConnectionProperties(Ljava/lang/String;)V: I19 Branch 45 IFEQ L540 - false
   * 3 net.sourceforge.schemaspy.Config.setConnectionProperties(Ljava/lang/String;)V: I35 Branch 46 IF_ICMPEQ L543 - true
   */
  @Test
  public void test20()  throws Throwable  {
      Config config0 = new Config();
      config0.setConnectionProperties("Failed to initialize instance of SQL formatter: ");
      assertEquals(false, config0.hasRoutines());
      assertEquals(false, config0.hasOrphans());
  }

  //Test case number: 21
  /*
   * 23 covered goals:
   * 1 net.sourceforge.schemaspy.Config.getMaxDbThreads()I: I4 Branch 57 IFNONNULL L694 - true
   * 2 net.sourceforge.schemaspy.Config.isViewsEnabled()Z: I4 Branch 72 IFNONNULL L835 - false
   * 3 net.sourceforge.schemaspy.Config.isViewsEnabled()Z: I12 Branch 73 IFNE L836 - false
   * 4 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I10 Branch 149 IFNULL L1709 - true
   * 5 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I71 Branch 152 IFEQ L1719 - false
   * 6 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I82 Branch 153 IFEQ L1721 - true
   * 7 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I93 Branch 154 IFNE L1723 - true
   * 8 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I104 Branch 155 IFNE L1725 - true
   * 9 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I115 Branch 156 IFNE L1727 - true
   * 10 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I126 Branch 157 IFEQ L1729 - true
   * 11 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I137 Branch 158 IFNE L1731 - true
   * 12 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I148 Branch 159 IFNE L1733 - true
   * 13 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I159 Branch 160 IFEQ L1735 - true
   * 14 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I170 Branch 161 IFEQ L1737 - true
   * 15 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I181 Branch 162 IFEQ L1739 - true
   * 16 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I192 Branch 163 IFEQ L1741 - true
   * 17 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I207 Branch 164 IFNULL L1745 - true
   * 18 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I317 Branch 165 IFNULL L1764 - true
   * 19 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I338 Branch 166 IFNULL L1769 - true
   * 20 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I362 Branch 168 IFNULL L1776 - true
   * 21 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I383 Branch 169 IFNULL L1781 - true
   * 22 net.sourceforge.schemaspy.Config.isSingleSignOn()Z: I4 Branch 34 IFNONNULL L409 - false
   * 23 net.sourceforge.schemaspy.Config.getUser()Ljava/lang/String;: I9 Branch 33 IFNE L386 - false
   */
  @Test
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      Config config0 = Config.getInstance();
      config0.getMaxDbThreads();
      Config config1 = new Config(stringArray0);
      Config config2 = new Config();
      // Undeclared exception!
      try {
        config2.asList();
        fail("Expecting exception: Config.MissingRequiredParameterException");
      } catch(Config.MissingRequiredParameterException e) {
        /*
         * Required parameter '-u' was not specified.
         */
      }
  }

  //Test case number: 22
  /*
   * 7 covered goals:
   * 1 net.sourceforge.schemaspy.Config.setColumnDetails(Ljava/lang/String;)V: I10 Branch 97 IFNULL L1074 - false
   * 2 net.sourceforge.schemaspy.Config.setColumnDetails(Ljava/lang/String;)V: I13 Branch 98 IFNE L1074 - false
   * 3 net.sourceforge.schemaspy.Config.setColumnDetails(Ljava/util/List;)V: I3 Branch 102 IFNONNULL L1090 - false
   * 4 net.sourceforge.schemaspy.Config.setColumnDetails(Ljava/lang/String;)V: I34 Branch 99 IF_ICMPGE L1079 - true
   * 5 net.sourceforge.schemaspy.Config.setColumnDetails(Ljava/lang/String;)V: I34 Branch 99 IF_ICMPGE L1079 - false
   * 6 net.sourceforge.schemaspy.Config.setColumnDetails(Ljava/lang/String;)V: I43 Branch 100 IFLE L1080 - false
   * 7 net.sourceforge.schemaspy.Config.setColumnDetails(Ljava/lang/String;)V: I62 Branch 101 IFGT L1085 - true
   */
  @Test
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "l";
      stringArray0[1] = "dr3Cj6";
      stringArray0[2] = "   -";
      Config config0 = new Config(stringArray0);
      assertNotNull(config0);
      
      config0.setColumnDetails((List<String>) null);
      assertEquals(false, config0.isDbHelpRequired());
      assertEquals(false, config0.isHelpRequired());
  }

  //Test case number: 23
  /*
   * 2 covered goals:
   * 1 net.sourceforge.schemaspy.Config.isLowQuality()Z: I4 Branch 110 IFNONNULL L1202 - true
   * 2 net.sourceforge.schemaspy.Config.setHighQuality(Z)V: I10 Branch 107 IFNE L1178 - false
   */
  @Test
  public void test23()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "JCf4.twQq";
      stringArray0[1] = "1";
      stringArray0[2] = "yAGHXc,nmbs=#";
      stringArray0[3] = "{im8\"n/.)n&+;D|";
      stringArray0[4] = "remoteCatalog";
      stringArray0[5] = "%'~!wjGb<x1$$";
      stringArray0[6] = "cM[.A*M.z?@B";
      stringArray0[7] = "L#Z nw(VM7'dN~r+";
      stringArray0[8] = "\"UNeee_ B?My/";
      Config config0 = new Config(stringArray0);
      assertNotNull(config0);
      
      config0.setHighQuality(false);
      boolean boolean0 = config0.isLowQuality();
      assertEquals(false, config0.isDbHelpRequired());
      assertEquals(false, config0.isHelpRequired());
      assertEquals(false, config0.hasOrphans());
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * 1 net.sourceforge.schemaspy.Config.getDbPropertiesLoadedFrom()Ljava/lang/String;: I4 Branch 121 IFNONNULL L1424 - false
   */
  @Test
  public void test24()  throws Throwable  {
      Config config0 = new Config();
      String string0 = config0.getDbPropertiesLoadedFrom();
      assertEquals("[SF110/lib/evosuite.jar]/net/sourceforge/schemaspy/dbTypes/ora.properties", string0);
      assertEquals(false, config0.hasOrphans());
      assertEquals(false, config0.hasRoutines());
      assertNotNull(string0);
  }

  //Test case number: 25
  /*
   * 11 covered goals:
   * 1 net.sourceforge.schemaspy.Config.getBuiltInDatabaseTypes(Ljava/lang/String;)Ljava/util/Set;: I27 Branch 136 IFNULL L1609 - true
   * 2 net.sourceforge.schemaspy.Config.getBuiltInDatabaseTypes(Ljava/lang/String;)Ljava/util/Set;: I27 Branch 136 IFNULL L1609 - false
   * 3 net.sourceforge.schemaspy.Config.getBuiltInDatabaseTypes(Ljava/lang/String;)Ljava/util/Set;: I43 Branch 137 IF_ICMPEQ L1612 - true
   * 4 net.sourceforge.schemaspy.Config.getBuiltInDatabaseTypes(Ljava/lang/String;)Ljava/util/Set;: I43 Branch 137 IF_ICMPEQ L1612 - false
   * 5 net.sourceforge.schemaspy.Config.getBuiltInDatabaseTypes(Ljava/lang/String;)Ljava/util/Set;: I59 Branch 138 IFNULL L1617 - false
   * 6 net.sourceforge.schemaspy.Config.dumpUsage(Ljava/lang/String;Z)V: I3 Branch 141 IFNULL L1628 - false
   * 7 net.sourceforge.schemaspy.Config.dumpUsage(Ljava/lang/String;Z)V: I39 Branch 142 IFNE L1638 - true
   * 8 net.sourceforge.schemaspy.Config.dumpUsage(Ljava/lang/String;Z)V: I116 Branch 143 IFEQ L1654 - false
   * 9 net.sourceforge.schemaspy.Config.dumpUsage(Ljava/lang/String;Z)V: I131 Branch 144 IFEQ L1656 - false
   * 10 net.sourceforge.schemaspy.Config.getInstance()Lnet/sourceforge/schemaspy/Config;: I3 Branch 12 IFNONNULL L161 - true
   * 11 net.sourceforge.schemaspy.Config.<init>()V: I22 Branch 3 IFNONNULL L135 - true
   */
  @Test
  public void test25()  throws Throwable  {
      Config config0 = Config.getInstance();
      assertNotNull(config0);
      
      // Undeclared exception!
      try {
        config0.dumpUsage("E3hf", true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 26
  /*
   * 4 covered goals:
   * 1 net.sourceforge.schemaspy.Config.dumpUsage(Ljava/lang/String;Z)V: I39 Branch 142 IFNE L1638 - false
   * 2 net.sourceforge.schemaspy.Config.dumpUsage(Ljava/lang/String;Z)V: I116 Branch 143 IFEQ L1654 - true
   * 3 net.sourceforge.schemaspy.Config.dumpUsage(Ljava/lang/String;Z)V: I153 Branch 145 IFEQ L1662 - true
   * 4 net.sourceforge.schemaspy.Config.dumpUsage(Ljava/lang/String;Z)V: I3 Branch 141 IFNULL L1628 - false
   */
  @Test
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "JCf4.twQq";
      stringArray0[1] = "1";
      stringArray0[2] = "yAGHXc,nmbs=#";
      stringArray0[3] = "{im8\"n/.)n&+;D|";
      stringArray0[4] = "remoteCatalog";
      stringArray0[5] = "%'~!wjGb<x1$$";
      stringArray0[6] = "cM[.A*M.z?@B";
      stringArray0[7] = "L#Z nw(VM7'dN~r+";
      stringArray0[8] = "\"UNeee_ B?My/";
      Config config0 = new Config(stringArray0);
      assertNotNull(config0);
      
      config0.dumpUsage("G&9O", false);
      assertEquals(false, config0.isDbHelpRequired());
      assertEquals(false, config0.hasOrphans());
      assertEquals(false, config0.hasRoutines());
      assertEquals(false, config0.isHelpRequired());
      assertEquals("[SF110/lib/evosuite.jar]/net/sourceforge/schemaspy/dbTypes/ora.properties", config0.getDbPropertiesLoadedFrom());
  }

  //Test case number: 27
  /*
   * 7 covered goals:
   * 1 net.sourceforge.schemaspy.Config.getParam(Ljava/lang/String;)Ljava/lang/String;: I18 Branch 146 IF_ICMPGE L1685 - true
   * 2 net.sourceforge.schemaspy.Config.getParam(Ljava/lang/String;)Ljava/lang/String;: I31 Branch 147 IFLE L1687 - true
   * 3 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I29 Branch 128 IF_ICMPEQ L1555 - false
   * 4 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I36 Branch 129 IF_ICMPEQ L1555 - false
   * 5 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I91 Branch 131 IFLE L1569 - false
   * 6 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I95 Branch 132 IFLE L1569 - true
   * 7 net.sourceforge.schemaspy.Config.getParam(Ljava/lang/String;)Ljava/lang/String;: I18 Branch 146 IF_ICMPGE L1685 - false
   */
  @Test
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "JCf4.twQq";
      stringArray0[1] = "1";
      stringArray0[2] = "yAGHXc,nmbs=#";
      stringArray0[3] = "{im8\"n/.)n&+;D|";
      stringArray0[4] = "remoteCatalog";
      stringArray0[5] = "%'~!wjGb<x1$$";
      stringArray0[6] = "cM[.A*M.z?@B";
      stringArray0[7] = "L#Z nw(VM7'dN~r+";
      stringArray0[8] = "\"UNeee_ B?My/";
      Config config0 = new Config(stringArray0);
      assertNotNull(config0);
      
      config0.getParam("JCf4.twQq");
      assertEquals(false, config0.hasRoutines());
      assertEquals(false, config0.isDbHelpRequired());
      assertEquals(false, config0.isHelpRequired());
  }

  //Test case number: 28
  /*
   * 136 covered goals:
   * 1 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I181 Branch 162 IFEQ L1739 - false
   * 2 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I404 Branch 170 IFNULL L1786 - true
   * 3 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I425 Branch 171 IFNULL L1791 - true
   * 4 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I448 Branch 172 IFNE L1796 - true
   * 5 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I519 Branch 174 IFNULL L1809 - true
   * 6 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I540 Branch 175 IFNULL L1814 - true
   * 7 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I557 Branch 176 IFNULL L1818 - true
   * 8 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I580 Branch 177 IFNULL L1823 - true
   * 9 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I601 Branch 178 IFNULL L1828 - true
   * 10 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I618 Branch 179 IFNULL L1832 - true
   * 11 net.sourceforge.schemaspy.Config$MissingRequiredParameterException.<init>(Ljava/lang/String;Z)V: root-Branch
   * 12 net.sourceforge.schemaspy.Config.getLoadedFromJar()Ljava/lang/String;: root-Branch
   * 13 net.sourceforge.schemaspy.Config.setInstance(Lnet/sourceforge/schemaspy/Config;)V: root-Branch
   * 14 net.sourceforge.schemaspy.Config.pullParam(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * 15 net.sourceforge.schemaspy.Config.getConnectionPropertiesFile()Ljava/lang/String;: root-Branch
   * 16 net.sourceforge.schemaspy.Config.setSingleSignOn(Z)V: root-Branch
   * 17 net.sourceforge.schemaspy.Config.pullRequiredParam(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * 18 net.sourceforge.schemaspy.Config.getIndirectColumnExclusions()Ljava/util/regex/Pattern;: I4 Branch 78 IFNONNULL L899 - false
   * 19 net.sourceforge.schemaspy.Config.getIndirectColumnExclusions()Ljava/util/regex/Pattern;: I14 Branch 79 IFNONNULL L901 - false
   * 20 net.sourceforge.schemaspy.Config.getIndirectColumnExclusions()Ljava/util/regex/Pattern;: I23 Branch 80 IFNONNULL L903 - false
   * 21 net.sourceforge.schemaspy.Config.getCss()Ljava/lang/String;: I4 Branch 49 IFNONNULL L581 - false
   * 22 net.sourceforge.schemaspy.Config.getCss()Ljava/lang/String;: I16 Branch 50 IFNONNULL L583 - false
   * 23 net.sourceforge.schemaspy.Config.isEncodeCommentsEnabled()Z: I4 Branch 68 IFNONNULL L790 - false
   * 24 net.sourceforge.schemaspy.Config.isEncodeCommentsEnabled()Z: I12 Branch 69 IFNE L791 - false
   * 25 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I38 Branch 4 IFNE L151 - false
   * 26 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I43 Branch 5 IFNE L151 - false
   * 27 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I48 Branch 6 IFNE L151 - false
   * 28 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I53 Branch 7 IFNE L151 - false
   * 29 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I58 Branch 8 IFNE L151 - false
   * 30 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I63 Branch 9 IFEQ L151 - true
   * 31 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I78 Branch 10 IFNE L157 - false
   * 32 net.sourceforge.schemaspy.Config.<init>([Ljava/lang/String;)V: I83 Branch 11 IFEQ L157 - true
   * 33 net.sourceforge.schemaspy.Config.getConnectionProperties()Ljava/util/Properties;: I4 Branch 42 IFNONNULL L510 - false
   * 34 net.sourceforge.schemaspy.Config.getConnectionProperties()Ljava/util/Properties;: I14 Branch 43 IFNULL L512 - true
   * 35 net.sourceforge.schemaspy.Config.determineDbProperties(Ljava/lang/String;)Ljava/util/Properties;: I198 Branch 118 IFNONNULL L1388 - false
   * 36 net.sourceforge.schemaspy.Config.determineDbProperties(Ljava/lang/String;)Ljava/util/Properties;: I276 Branch 120 IFNULL L1405 - true
   * 37 net.sourceforge.schemaspy.Config.setLogLevel(Ljava/lang/String;)V: I3 Branch 114 IFNONNULL L1230 - false
   * 38 net.sourceforge.schemaspy.Config.isSingleSignOn()Z: I4 Branch 34 IFNONNULL L409 - true
   * 39 net.sourceforge.schemaspy.Config.getOutputDir()Ljava/io/File;: I4 Branch 18 IFNONNULL L212 - false
   * 40 net.sourceforge.schemaspy.Config.getGraphvizDir()Ljava/io/File;: I4 Branch 20 IFNONNULL L250 - false
   * 41 net.sourceforge.schemaspy.Config.getGraphvizDir()Ljava/io/File;: I14 Branch 21 IFNULL L252 - true
   * 42 net.sourceforge.schemaspy.Config.getSqlFormatter()Lnet/sourceforge/schemaspy/view/SqlFormatter;: I4 Branch 94 IFNONNULL L1029 - false
   * 43 net.sourceforge.schemaspy.Config.getSqlFormatter()Lnet/sourceforge/schemaspy/view/SqlFormatter;: I9 Branch 95 IFNONNULL L1030 - false
   * 44 net.sourceforge.schemaspy.Config.getSqlFormatter()Lnet/sourceforge/schemaspy/view/SqlFormatter;: I21 Branch 96 IFNONNULL L1033 - false
   * 45 net.sourceforge.schemaspy.Config.getTableExclusions()Ljava/util/regex/Pattern;: I4 Branch 84 IFNONNULL L957 - false
   * 46 net.sourceforge.schemaspy.Config.getTableExclusions()Ljava/util/regex/Pattern;: I14 Branch 85 IFNONNULL L959 - false
   * 47 net.sourceforge.schemaspy.Config.getTableExclusions()Ljava/util/regex/Pattern;: I23 Branch 86 IFNONNULL L961 - false
   * 48 net.sourceforge.schemaspy.Config.getMeta()Ljava/lang/String;: I4 Branch 22 IFNONNULL L277 - false
   * 49 net.sourceforge.schemaspy.Config.isEvaluateAllEnabled()Z: I4 Branch 104 IFNONNULL L1107 - false
   * 50 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I10 Branch 149 IFNULL L1709 - true
   * 51 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I71 Branch 152 IFEQ L1719 - false
   * 52 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I82 Branch 153 IFEQ L1721 - true
   * 53 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I93 Branch 154 IFNE L1723 - true
   * 54 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I104 Branch 155 IFNE L1725 - true
   * 55 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I115 Branch 156 IFNE L1727 - true
   * 56 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I126 Branch 157 IFEQ L1729 - true
   * 57 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I137 Branch 158 IFNE L1731 - true
   * 58 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I148 Branch 159 IFNE L1733 - true
   * 59 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I159 Branch 160 IFEQ L1735 - true
   * 60 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I170 Branch 161 IFEQ L1737 - true
   * 61 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I192 Branch 163 IFEQ L1741 - true
   * 62 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I207 Branch 164 IFNULL L1745 - true
   * 63 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I317 Branch 165 IFNULL L1764 - true
   * 64 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I338 Branch 166 IFNULL L1769 - true
   * 65 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I362 Branch 168 IFNULL L1776 - true
   * 66 net.sourceforge.schemaspy.Config.asList()Ljava/util/List;: I383 Branch 169 IFNULL L1781 - true
   * 67 net.sourceforge.schemaspy.Config.pullParam(Ljava/lang/String;ZZ)Ljava/lang/String;: I10 Branch 125 IFGE L1507 - false
   * 68 net.sourceforge.schemaspy.Config.pullParam(Ljava/lang/String;ZZ)Ljava/lang/String;: I14 Branch 126 IFEQ L1508 - true
   * 69 net.sourceforge.schemaspy.Config.pullParam(Ljava/lang/String;ZZ)Ljava/lang/String;: I14 Branch 126 IFEQ L1508 - false
   * 70 net.sourceforge.schemaspy.Config.getDescription()Ljava/lang/String;: I4 Branch 56 IFNONNULL L675 - false
   * 71 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I14 Branch 127 IFEQ L1553 - true
   * 72 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I14 Branch 127 IFEQ L1553 - false
   * 73 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I29 Branch 128 IF_ICMPEQ L1555 - true
   * 74 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I80 Branch 130 IFEQ L1568 - true
   * 75 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I80 Branch 130 IFEQ L1568 - false
   * 76 net.sourceforge.schemaspy.Config.fixupArgs(Ljava/util/List;)Ljava/util/List;: I91 Branch 131 IFLE L1569 - true
   * 77 net.sourceforge.schemaspy.Config.getFontSize()I: I4 Branch 53 IFNONNULL L629 - false
   * 78 net.sourceforge.schemaspy.Config.getPassword()Ljava/lang/String;: I4 Branch 35 IFNONNULL L428 - false
   * 79 net.sourceforge.schemaspy.Config.getPassword()Ljava/lang/String;: I16 Branch 36 IFNONNULL L431 - false
   * 80 net.sourceforge.schemaspy.Config.getPassword()Ljava/lang/String;: I19 Branch 37 IFEQ L431 - true
   * 81 net.sourceforge.schemaspy.Config.getPassword()Ljava/lang/String;: I36 Branch 38 IFNONNULL L434 - false
   * 82 net.sourceforge.schemaspy.Config.isMeterEnabled()Z: I4 Branch 74 IFNONNULL L848 - false
   * 83 net.sourceforge.schemaspy.Config.isViewsEnabled()Z: I4 Branch 72 IFNONNULL L835 - false
   * 84 net.sourceforge.schemaspy.Config.isViewsEnabled()Z: I12 Branch 73 IFNE L836 - false
   * 85 net.sourceforge.schemaspy.Config.isImpliedConstraintsEnabled()Z: I4 Branch 15 IFNONNULL L194 - false
   * 86 net.sourceforge.schemaspy.Config.isImpliedConstraintsEnabled()Z: I12 Branch 16 IFNE L195 - false
   * 87 net.sourceforge.schemaspy.Config.getColumnExclusions()Ljava/util/regex/Pattern;: I4 Branch 75 IFNONNULL L869 - false
   * 88 net.sourceforge.schemaspy.Config.getColumnExclusions()Ljava/util/regex/Pattern;: I14 Branch 76 IFNONNULL L871 - false
   * 89 net.sourceforge.schemaspy.Config.getColumnExclusions()Ljava/util/regex/Pattern;: I23 Branch 77 IFNONNULL L873 - false
   * 90 net.sourceforge.schemaspy.Config.getServer()Ljava/lang/String;: I4 Branch 31 IFNONNULL L367 - false
   * 91 net.sourceforge.schemaspy.Config.asProperties(Ljava/util/ResourceBundle;)Ljava/util/Properties;: I15 Branch 124 IFEQ L1474 - true
   * 92 net.sourceforge.schemaspy.Config.asProperties(Ljava/util/ResourceBundle;)Ljava/util/Properties;: I15 Branch 124 IFEQ L1474 - false
   * 93 net.sourceforge.schemaspy.Config.getHost()Ljava/lang/String;: I4 Branch 29 IFNONNULL L345 - false
   * 94 net.sourceforge.schemaspy.Config.isHtmlGenerationEnabled()Z: I4 Branch 13 IFNONNULL L183 - false
   * 95 net.sourceforge.schemaspy.Config.isHtmlGenerationEnabled()Z: I12 Branch 14 IFNE L184 - false
   * 96 net.sourceforge.schemaspy.Config.getLogLevel()Ljava/util/logging/Level;: I4 Branch 116 IFNONNULL L1258 - false
   * 97 net.sourceforge.schemaspy.Config.getRenderer()Ljava/lang/String;: I9 Branch 106 IFNULL L1159 - true
   * 98 net.sourceforge.schemaspy.Config.getPort()Ljava/lang/Integer;: I4 Branch 30 IFNONNULL L355 - false
   * 99 net.sourceforge.schemaspy.Config.isLogoEnabled()Z: I4 Branch 64 IFNONNULL L727 - false
   * 100 net.sourceforge.schemaspy.Config.isLogoEnabled()Z: I12 Branch 65 IFNE L728 - false
   * 101 net.sourceforge.schemaspy.Config.isRankDirBugEnabled()Z: I4 Branch 66 IFNONNULL L746 - false
   * 102 net.sourceforge.schemaspy.Config.getDb()Ljava/lang/String;: I4 Branch 25 IFNONNULL L301 - false
   * 103 net.sourceforge.schemaspy.Config.isPromptForPasswordEnabled()Z: I4 Branch 39 IFNONNULL L457 - false
   * 104 net.sourceforge.schemaspy.Config.getFont()Ljava/lang/String;: I4 Branch 51 IFNONNULL L602 - false
   * 105 net.sourceforge.schemaspy.Config.getFont()Ljava/lang/String;: I16 Branch 52 IFNONNULL L604 - false
   * 106 net.sourceforge.schemaspy.Config.getDriverPath()Ljava/lang/String;: I4 Branch 47 IFNONNULL L556 - false
   * 107 net.sourceforge.schemaspy.Config.getDriverPath()Ljava/lang/String;: I16 Branch 48 IFNONNULL L560 - false
   * 108 net.sourceforge.schemaspy.Config.getMaxDetailedTables()I: I4 Branch 40 IFNONNULL L469 - false
   * 109 net.sourceforge.schemaspy.Config.getTableInclusions()Ljava/util/regex/Pattern;: I4 Branch 81 IFNONNULL L926 - false
   * 110 net.sourceforge.schemaspy.Config.getTableInclusions()Ljava/util/regex/Pattern;: I14 Branch 82 IFNONNULL L928 - false
   * 111 net.sourceforge.schemaspy.Config.getTableInclusions()Ljava/util/regex/Pattern;: I23 Branch 83 IFNONNULL L930 - false
   * 112 net.sourceforge.schemaspy.Config.getUser()Ljava/lang/String;: I4 Branch 32 IFNONNULL L385 - false
   * 113 net.sourceforge.schemaspy.Config.getUser()Ljava/lang/String;: I9 Branch 33 IFNE L386 - true
   * 114 net.sourceforge.schemaspy.Config.isLowQuality()Z: I4 Branch 110 IFNONNULL L1202 - false
   * 115 net.sourceforge.schemaspy.Config.isLowQuality()Z: I19 Branch 111 IFEQ L1204 - true
   * 116 net.sourceforge.schemaspy.Config.isLowQuality()Z: I38 Branch 113 IFNE L1210 - false
   * 117 net.sourceforge.schemaspy.Config.isSchemaDisabled()Z: I4 Branch 28 IFNONNULL L334 - false
   * 118 net.sourceforge.schemaspy.Config.getCatalog()Ljava/lang/String;: I4 Branch 26 IFNONNULL L311 - false
   * 119 net.sourceforge.schemaspy.Config.isHighQuality()Z: I4 Branch 108 IFNONNULL L1186 - false
   * 120 net.sourceforge.schemaspy.Config.isHighQuality()Z: I19 Branch 109 IFEQ L1188 - true
   * 121 net.sourceforge.schemaspy.Config.getSchema()Ljava/lang/String;: I4 Branch 27 IFNONNULL L321 - false
   * 122 net.sourceforge.schemaspy.Config.getMaxDbThreads()I: I4 Branch 57 IFNONNULL L694 - false
   * 123 net.sourceforge.schemaspy.Config.getMaxDbThreads()I: I56 Branch 58 IFNONNULL L706 - true
   * 124 net.sourceforge.schemaspy.Config.getMaxDbThreads()I: I66 Branch 59 IFNULL L708 - false
   * 125 net.sourceforge.schemaspy.Config.getMaxDbThreads()I: I81 Branch 60 IFNONNULL L711 - false
   * 126 net.sourceforge.schemaspy.Config.getMaxDbThreads()I: I91 Branch 61 IFNULL L713 - true
   * 127 net.sourceforge.schemaspy.Config.getMaxDbThreads()I: I100 Branch 62 IFGE L715 - true
   * 128 net.sourceforge.schemaspy.Config.getMaxDbThreads()I: I109 Branch 63 IFNE L717 - true
   * 129 net.sourceforge.schemaspy.Config.isNumRowsEnabled()Z: I4 Branch 70 IFNONNULL L813 - false
   * 130 net.sourceforge.schemaspy.Config.isNumRowsEnabled()Z: I12 Branch 71 IFNE L814 - false
   * 131 net.sourceforge.schemaspy.Config.getDbType()Ljava/lang/String;: I4 Branch 23 IFNONNULL L287 - true
   * 132 net.sourceforge.schemaspy.Config.getDbType()Ljava/lang/String;: I4 Branch 23 IFNONNULL L287 - false
   * 133 net.sourceforge.schemaspy.Config.getDbType()Ljava/lang/String;: I16 Branch 24 IFNONNULL L289 - false
   * 134 net.sourceforge.schemaspy.Config.isRailsEnabled()Z: I4 Branch 67 IFNONNULL L773 - false
   * 135 net.sourceforge.schemaspy.Config.getCharset()Ljava/lang/String;: I4 Branch 54 IFNONNULL L654 - false
   * 136 net.sourceforge.schemaspy.Config.getCharset()Ljava/lang/String;: I16 Branch 55 IFNONNULL L656 - false
   */
  @Test
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "l";
      stringArray0[1] = "dr3Cj6";
      stringArray0[2] = "   -";
      Config config0 = new Config(stringArray0);
      assertNotNull(config0);
      
      config0.setSingleSignOn(true);
      // Undeclared exception!
      try {
        config0.asList();
        fail("Expecting exception: Config.MissingRequiredParameterException");
      } catch(Config.MissingRequiredParameterException e) {
        /*
         * Required parameter '-o' was not specified.
         */
      }
  }
}
