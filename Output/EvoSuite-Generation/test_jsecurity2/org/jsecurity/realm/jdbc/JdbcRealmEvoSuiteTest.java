/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.realm.jdbc;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.net.Inet4Address;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.NoSuchElementException;
import javax.sql.DataSource;
import org.jsecurity.authc.AccountException;
import org.jsecurity.authc.AuthenticationException;
import org.jsecurity.authc.AuthenticationToken;
import org.jsecurity.authc.UsernamePasswordToken;
import org.jsecurity.authz.AuthorizationException;
import org.jsecurity.realm.jdbc.JdbcRealm;
import org.jsecurity.subject.PrincipalCollection;
import org.jsecurity.subject.SimplePrincipalCollection;

public class JdbcRealmEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 org.jsecurity.realm.jdbc.JdbcRealm.setUserRolesQuery(Ljava/lang/String;)V: root-Branch
   * 2 org.jsecurity.realm.jdbc.JdbcRealm.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      jdbcRealm0.setUserRolesQuery("m,@NY6 }:d;:2");
      assertEquals("org.jsecurity.realm.jdbc.JdbcRealm_0", jdbcRealm0.getName());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.jsecurity.realm.jdbc.JdbcRealm.setPermissionsLookupEnabled(Z)V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      jdbcRealm0.setPermissionsLookupEnabled(false);
      assertEquals("org.jsecurity.realm.jdbc.JdbcRealm_5", jdbcRealm0.getName());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.jsecurity.realm.jdbc.JdbcRealm.setPermissionsQuery(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      jdbcRealm0.setPermissionsQuery("m,@NY6 }:d;:2");
      assertEquals("org.jsecurity.realm.jdbc.JdbcRealm_13", jdbcRealm0.getName());
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 org.jsecurity.realm.jdbc.JdbcRealm.buildAuthenticationInfo(Ljava/lang/String;[C)Lorg/jsecurity/authc/AuthenticationInfo;: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      char[] charArray0 = new char[4];
      jdbcRealm0.buildAuthenticationInfo("", charArray0);
      assertEquals("org.jsecurity.realm.jdbc.JdbcRealm_18", jdbcRealm0.getName());
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 org.jsecurity.realm.jdbc.JdbcRealm.setDataSource(Ljavax/sql/DataSource;)V: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      jdbcRealm0.setDataSource((DataSource) null);
      assertEquals("org.jsecurity.realm.jdbc.JdbcRealm_24", jdbcRealm0.getName());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 org.jsecurity.realm.jdbc.JdbcRealm.setAuthenticationQuery(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test5()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      jdbcRealm0.setAuthenticationQuery("");
      assertEquals("org.jsecurity.realm.jdbc.JdbcRealm_29", jdbcRealm0.getName());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 org.jsecurity.realm.jdbc.JdbcRealm.doGetAuthenticationInfo(Lorg/jsecurity/authc/AuthenticationToken;)Lorg/jsecurity/authc/AuthenticationInfo;: I13 Branch 1 IFNONNULL L184 - true
   */
  @Test
  public void test6()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      char[] charArray0 = new char[1];
      Inet4Address inet4Address0 = (Inet4Address)InetAddress.getLoopbackAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("UTF-8", charArray0, false, (InetAddress) inet4Address0);
      // Undeclared exception!
      try {
        jdbcRealm0.getAuthenticationInfo((AuthenticationToken) usernamePasswordToken0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 org.jsecurity.realm.jdbc.JdbcRealm.doGetAuthenticationInfo(Lorg/jsecurity/authc/AuthenticationToken;)Lorg/jsecurity/authc/AuthenticationInfo;: I13 Branch 1 IFNONNULL L184 - false
   */
  @Test
  public void test7()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, "m,@NY6 }:d;:2", true);
      try {
        jdbcRealm0.getAuthenticationInfo((AuthenticationToken) usernamePasswordToken0);
        fail("Expecting exception: AccountException");
      } catch(AccountException e) {
        /*
         * Null usernames are not allowed by this realm.
         */
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 org.jsecurity.realm.jdbc.JdbcRealm.doGetAuthorizationInfo(Lorg/jsecurity/subject/PrincipalCollection;)Lorg/jsecurity/authz/AuthorizationInfo;: I3 Branch 6 IFNONNULL L263 - true
   */
  @Test
  public void test8()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection((Object) usernamePasswordToken0, "SHA-512");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      // Undeclared exception!
      try {
        jdbcRealm0.checkRoles((PrincipalCollection) simplePrincipalCollection0, (Collection<String>) linkedHashSet0);
        fail("Expecting exception: NoSuchElementException");
      } catch(NoSuchElementException e) {
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 org.jsecurity.realm.jdbc.JdbcRealm.doGetAuthorizationInfo(Lorg/jsecurity/subject/PrincipalCollection;)Lorg/jsecurity/authz/AuthorizationInfo;: I3 Branch 6 IFNONNULL L263 - false
   */
  @Test
  public void test9()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      // Undeclared exception!
      try {
        jdbcRealm0.doGetAuthorizationInfo((PrincipalCollection) null);
        fail("Expecting exception: AuthorizationException");
      } catch(AuthorizationException e) {
        /*
         * PrincipalCollection method argument cannot be null.
         */
      }
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * 1 org.jsecurity.realm.jdbc.JdbcRealm.getPermissions(Ljava/sql/Connection;Ljava/lang/String;Ljava/util/Collection;)Ljava/util/Set;: I22 Branch 11 IFEQ L334 - true
   * 2 org.jsecurity.realm.jdbc.JdbcRealm.<init>()V: root-Branch
   */
  @Test
  public void test10()  throws Throwable  {
      JdbcRealm jdbcRealm0 = new JdbcRealm();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      jdbcRealm0.getPermissions((Connection) null, "I5X", (Collection<String>) linkedHashSet0);
      assertEquals("org.jsecurity.realm.jdbc.JdbcRealm_68", jdbcRealm0.getName());
  }
}
