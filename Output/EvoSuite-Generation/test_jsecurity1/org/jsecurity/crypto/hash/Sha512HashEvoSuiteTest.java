/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.crypto.hash;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import org.jsecurity.crypto.hash.Sha512Hash;

public class Sha512HashEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 org.jsecurity.crypto.hash.Sha512Hash.<init>(Ljava/lang/Object;)V: root-Branch
   * 2 org.jsecurity.crypto.hash.Sha512Hash.getAlgorithmName()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      Sha512Hash sha512Hash0 = new Sha512Hash((Object) "SHA-512");
      assertEquals("M/Y7w3T0KPWX1/e6fMHiGgtLRPqnJ/fAUsWtCxqlMDiE6lkZpTwNMrVZH03tOB2ha2f2ohcNgQWNfpuyrUohWw==", sha512Hash0.toBase64());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 org.jsecurity.crypto.hash.Sha512Hash.fromHexString(Ljava/lang/String;)Lorg/jsecurity/crypto/hash/Sha512Hash;: root-Branch
   * 2 org.jsecurity.crypto.hash.Sha512Hash.<init>()V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      Sha512Hash sha512Hash0 = Sha512Hash.fromHexString("");
      assertEquals("", sha512Hash0.toBase64());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 org.jsecurity.crypto.hash.Sha512Hash.<init>(Ljava/lang/Object;Ljava/lang/Object;)V: root-Branch
   * 2 org.jsecurity.crypto.hash.Sha512Hash.getAlgorithmName()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      Sha512Hash sha512Hash0 = new Sha512Hash((Object) "SHA-512", (Object) "SHA-512");
      assertEquals("SHA-512", sha512Hash0.getAlgorithmName());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 org.jsecurity.crypto.hash.Sha512Hash.fromBase64String(Ljava/lang/String;)Lorg/jsecurity/crypto/hash/Sha512Hash;: root-Branch
   * 2 org.jsecurity.crypto.hash.Sha512Hash.<init>()V: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      Sha512Hash sha512Hash0 = Sha512Hash.fromBase64String("");
      assertEquals("", sha512Hash0.toBase64());
  }
}
