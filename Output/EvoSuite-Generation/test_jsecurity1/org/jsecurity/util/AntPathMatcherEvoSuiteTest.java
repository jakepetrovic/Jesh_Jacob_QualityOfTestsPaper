/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import org.jsecurity.util.AntPathMatcher;

public class AntPathMatcherEvoSuiteTest {


  //Test case number: 0
  /*
   * 12 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.matches(Ljava/lang/String;Ljava/lang/String;)Z: root-Branch
   * 2 org.jsecurity.util.AntPathMatcher.<init>()V: root-Branch
   * 3 org.jsecurity.util.AntPathMatcher.match(Ljava/lang/String;Ljava/lang/String;)Z: root-Branch
   * 4 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I12 Branch 4 IF_ICMPEQ L112 - true
   * 5 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I57 Branch 5 IF_ICMPGT L125 - false
   * 6 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I60 Branch 6 IF_ICMPGT L125 - true
   * 7 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I102 Branch 9 IF_ICMPLE L137 - false
   * 8 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I107 Branch 10 IF_ICMPLE L139 - true
   * 9 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I135 Branch 13 IFNE L143 - true
   * 10 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I144 Branch 14 IF_ICMPNE L146 - true
   * 11 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I167 Branch 17 IF_ICMPGT L150 - false
   * 12 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I175 Branch 18 IFGT L151 - false
   */
  @Test
  public void test0()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.matches("].  T/ere iB no {pae from ", "");
      assertEquals(false, boolean0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.jsecurity.util.AntPathMatcher.setPathSeparator(Ljava/lang/String;)V: I4 Branch 1 IFNULL L80 - true
   */
  @Test
  public void test1()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      antPathMatcher0.setPathSeparator((String) null);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.jsecurity.util.AntPathMatcher.isPattern(Ljava/lang/String;)Z: I6 Branch 2 IF_ICMPNE L85 - true
   */
  @Test
  public void test2()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.isPattern("\u0004rO0bq*XWoHIs");
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.isPattern(Ljava/lang/String;)Z: I6 Branch 2 IF_ICMPNE L85 - false
   * 2 org.jsecurity.util.AntPathMatcher.isPattern(Ljava/lang/String;)Z: I11 Branch 3 IF_ICMPEQ L85 - true
   */
  @Test
  public void test3()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.isPattern("00^X9[Pfs");
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.isPattern(Ljava/lang/String;)Z: I11 Branch 3 IF_ICMPEQ L85 - false
   * 2 org.jsecurity.util.AntPathMatcher.isPattern(Ljava/lang/String;)Z: I6 Branch 2 IF_ICMPNE L85 - false
   */
  @Test
  public void test4()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.isPattern("cD?.");
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I12 Branch 4 IF_ICMPEQ L112 - false
   */
  @Test
  public void test5()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.match("/h$&i", "");
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 13 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I72 Branch 7 IFLE L127 - false
   * 2 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I102 Branch 9 IF_ICMPLE L137 - true
   * 3 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I192 Branch 19 IF_ICMPLE L156 - true
   * 4 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I200 Branch 20 IFNE L159 - true
   * 5 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I215 Branch 22 IF_ICMPGT L165 - false
   * 6 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I218 Branch 23 IF_ICMPGT L165 - false
   * 7 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I230 Branch 24 IFLE L167 - false
   * 8 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I260 Branch 26 IF_ICMPLE L176 - true
   * 9 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I293 Branch 29 IF_ICMPEQ L186 - true
   * 10 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I457 Branch 38 IF_ICMPGT L226 - true
   * 11 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I457 Branch 38 IF_ICMPGT L226 - false
   * 12 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I465 Branch 39 IFGT L227 - true
   * 13 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I60 Branch 6 IF_ICMPGT L125 - false
   */
  @Test
  public void test6()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.doMatch("**", "**", true);
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 7 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I84 Branch 8 IFNE L130 - false
   * 2 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I79 Branch 43 IF_ICMPEQ L267 - false
   * 3 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I72 Branch 7 IFLE L127 - true
   * 4 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I50 Branch 40 IF_ICMPGE L258 - true
   * 5 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I50 Branch 40 IF_ICMPGE L258 - false
   * 6 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I59 Branch 41 IF_ICMPNE L259 - true
   * 7 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I74 Branch 42 IFNE L265 - false
   */
  @Test
  public void test7()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.doMatch("00^X9[Pfs", "].  T/ere iB no {pae from ", true);
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I135 Branch 13 IFNE L143 - false
   * 2 org.jsecurity.util.AntPathMatcher.matchStart(Ljava/lang/String;Ljava/lang/String;)Z: root-Branch
   * 3 org.jsecurity.util.AntPathMatcher.setPathSeparator(Ljava/lang/String;)V: I4 Branch 1 IFNULL L80 - false
   */
  @Test
  public void test8()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      antPathMatcher0.setPathSeparator("");
      boolean boolean0 = antPathMatcher0.matchStart("/", "");
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 3 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I144 Branch 14 IF_ICMPNE L146 - false
   * 2 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I150 Branch 15 IFLE L146 - false
   * 3 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I155 Branch 16 IFLE L146 - true
   */
  @Test
  public void test9()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.matches("*", "");
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I150 Branch 15 IFLE L146 - true
   * 2 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I175 Branch 18 IFGT L151 - false
   */
  @Test
  public void test10()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      antPathMatcher0.setPathSeparator("");
      boolean boolean0 = antPathMatcher0.match("/", "");
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I155 Branch 16 IFLE L146 - false
   * 2 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I150 Branch 15 IFLE L146 - false
   */
  @Test
  public void test11()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      antPathMatcher0.setPathSeparator("");
      boolean boolean0 = antPathMatcher0.matches("*", "");
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 8 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I167 Branch 17 IF_ICMPGT L150 - true
   * 2 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I175 Branch 18 IFGT L151 - true
   * 3 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I60 Branch 6 IF_ICMPGT L125 - true
   * 4 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I107 Branch 10 IF_ICMPLE L139 - true
   * 5 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I135 Branch 13 IFNE L143 - true
   * 6 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I144 Branch 14 IF_ICMPNE L146 - false
   * 7 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I150 Branch 15 IFLE L146 - true
   * 8 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I167 Branch 17 IF_ICMPGT L150 - false
   */
  @Test
  public void test12()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.matches("**", "");
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I192 Branch 19 IF_ICMPLE L156 - false
   * 2 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I57 Branch 5 IF_ICMPGT L125 - true
   */
  @Test
  public void test13()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.matchStart("", "lP<xCLV");
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 5 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I200 Branch 20 IFNE L159 - false
   * 2 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I206 Branch 21 IFLE L159 - false
   * 3 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I72 Branch 7 IFLE L127 - false
   * 4 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I102 Branch 9 IF_ICMPLE L137 - true
   * 5 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I192 Branch 19 IF_ICMPLE L156 - true
   */
  @Test
  public void test14()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.matchStart("**", "**");
      assertEquals(true, boolean0);
  }

  //Test case number: 15
  /*
   * 7 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I59 Branch 41 IF_ICMPNE L259 - false
   * 2 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I74 Branch 42 IFNE L265 - true
   * 3 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I125 Branch 47 IFNE L282 - true
   * 4 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I139 Branch 48 IF_ICMPEQ L287 - false
   * 5 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I142 Branch 49 IF_ICMPGT L287 - false
   * 6 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I147 Branch 50 IF_ICMPEQ L288 - false
   * 7 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I154 Branch 51 IF_ICMPEQ L289 - false
   */
  @Test
  public void test15()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.matches("}'zdX@iiMP*_Qu,)}'zdX@iiMP*_Qu,)", "Hr0zH67s7\",[TR-de");
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 9 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I102 Branch 45 IF_ICMPEQ L272 - true
   * 2 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I114 Branch 11 IFLE L140 - false
   * 3 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I91 Branch 44 IF_ICMPGT L270 - true
   * 4 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I109 Branch 46 IF_ICMPEQ L273 - true
   * 5 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I84 Branch 8 IFNE L130 - true
   * 6 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I107 Branch 10 IF_ICMPLE L139 - false
   * 7 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I79 Branch 43 IF_ICMPEQ L267 - true
   * 8 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I91 Branch 44 IF_ICMPGT L270 - false
   * 9 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I102 Branch 45 IF_ICMPEQ L272 - false
   */
  @Test
  public void test16()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.match("//pZiPFztk?{8'xJI/", "//pZiPFztk?{8'xJI/");
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 6 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I109 Branch 46 IF_ICMPEQ L273 - false
   * 2 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I50 Branch 40 IF_ICMPGE L258 - true
   * 3 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I74 Branch 42 IFNE L265 - false
   * 4 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I79 Branch 43 IF_ICMPEQ L267 - true
   * 5 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I91 Branch 44 IF_ICMPGT L270 - false
   * 6 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I102 Branch 45 IF_ICMPEQ L272 - false
   */
  @Test
  public void test17()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      antPathMatcher0.setPathSeparator("wXB|)jh'>9-p_tbG");
      boolean boolean0 = antPathMatcher0.doMatch("vPx!lwa=", "pZiPFztk?{8'xJI", true);
      assertEquals(false, boolean0);
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I125 Branch 47 IFNE L282 - false
   * 2 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I114 Branch 11 IFLE L140 - true
   * 3 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I125 Branch 12 IFGT L140 - false
   */
  @Test
  public void test18()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.matches("*", "*");
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 17 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I139 Branch 48 IF_ICMPEQ L287 - true
   * 2 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I170 Branch 52 IF_ICMPLE L296 - true
   * 3 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I206 Branch 55 IF_ICMPEQ L308 - true
   * 4 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I206 Branch 55 IF_ICMPEQ L308 - false
   * 5 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I209 Branch 56 IF_ICMPGT L308 - false
   * 6 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I214 Branch 57 IF_ICMPEQ L309 - false
   * 7 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I221 Branch 58 IF_ICMPEQ L310 - true
   * 8 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I237 Branch 59 IF_ICMPLE L317 - true
   * 9 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I269 Branch 62 IF_ICMPEQ L330 - true
   * 10 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I269 Branch 62 IF_ICMPEQ L330 - false
   * 11 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I272 Branch 63 IF_ICMPGT L330 - false
   * 12 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I286 Branch 64 IF_ICMPGT L332 - false
   * 13 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I293 Branch 65 IF_ICMPNE L333 - false
   * 14 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I311 Branch 66 IF_ICMPNE L338 - false
   * 15 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I431 Branch 72 IF_ICMPGT L373 - true
   * 16 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I431 Branch 72 IF_ICMPGT L373 - false
   * 17 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I438 Branch 73 IF_ICMPEQ L374 - true
   */
  @Test
  public void test19()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.doMatch("**V[}~g4", "**V[}~g4", true);
      assertEquals(true, boolean0);
  }

  //Test case number: 20
  /*
   * 2 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I147 Branch 50 IF_ICMPEQ L288 - true
   * 2 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I154 Branch 51 IF_ICMPEQ L289 - true
   */
  @Test
  public void test20()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.matches(":PnJk[oD%1l~?_*B", ":PnJk[oD%1l~?_*B");
      assertEquals(true, boolean0);
  }

  //Test case number: 21
  /*
   * 7 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I209 Branch 56 IF_ICMPGT L308 - true
   * 2 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I237 Branch 59 IF_ICMPLE L317 - false
   * 3 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I245 Branch 60 IF_ICMPGT L320 - false
   * 4 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I252 Branch 61 IF_ICMPEQ L321 - true
   * 5 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I252 Branch 61 IF_ICMPEQ L321 - false
   * 6 org.jsecurity.util.AntPathMatcher.matches(Ljava/lang/String;Ljava/lang/String;)Z: root-Branch
   * 7 org.jsecurity.util.AntPathMatcher.match(Ljava/lang/String;Ljava/lang/String;)Z: root-Branch
   */
  @Test
  public void test21()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.matches("*ln22qZ+9?#Ij;h", "h");
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 22 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I214 Branch 57 IF_ICMPEQ L309 - true
   * 2 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I293 Branch 65 IF_ICMPNE L333 - true
   * 3 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I311 Branch 66 IF_ICMPNE L338 - true
   * 4 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I347 Branch 67 IF_ICMPGT L349 - false
   * 5 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I355 Branch 68 IF_ICMPGE L350 - true
   * 6 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I355 Branch 68 IF_ICMPGE L350 - false
   * 7 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I370 Branch 69 IF_ICMPEQ L352 - true
   * 8 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I370 Branch 69 IF_ICMPEQ L352 - false
   * 9 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I381 Branch 70 IF_ICMPEQ L353 - true
   * 10 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I381 Branch 70 IF_ICMPEQ L353 - false
   * 11 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I406 Branch 71 IF_ICMPNE L363 - true
   * 12 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I57 Branch 5 IF_ICMPGT L125 - true
   * 13 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I84 Branch 8 IFNE L130 - true
   * 14 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I102 Branch 9 IF_ICMPLE L137 - false
   * 15 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I107 Branch 10 IF_ICMPLE L139 - false
   * 16 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I114 Branch 11 IFLE L140 - true
   * 17 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I125 Branch 12 IFGT L140 - false
   * 18 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I221 Branch 58 IF_ICMPEQ L310 - true
   * 19 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I269 Branch 62 IF_ICMPEQ L330 - true
   * 20 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I431 Branch 72 IF_ICMPGT L373 - true
   * 21 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I431 Branch 72 IF_ICMPGT L373 - false
   * 22 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I438 Branch 73 IF_ICMPEQ L374 - true
   */
  @Test
  public void test22()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.doMatch("*ln22qZ+9?#Ij;h*ln22qZ+9?#Ij;h", "*ln22qZ+9?#Ij;h*ln22qZ+9?#Ij;h", true);
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 4 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I221 Branch 58 IF_ICMPEQ L310 - false
   * 2 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I206 Branch 55 IF_ICMPEQ L308 - false
   * 3 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I209 Branch 56 IF_ICMPGT L308 - false
   * 4 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I214 Branch 57 IF_ICMPEQ L309 - false
   */
  @Test
  public void test23()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.doMatch("**V[}~g4", "a>k#%72ncn9Ncu", false);
      assertEquals(false, boolean0);
  }

  //Test case number: 24
  /*
   * 32 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I347 Branch 67 IF_ICMPGT L349 - true
   * 2 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I406 Branch 71 IF_ICMPNE L363 - false
   * 3 org.jsecurity.util.AntPathMatcher.matchStart(Ljava/lang/String;Ljava/lang/String;)Z: root-Branch
   * 4 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I12 Branch 4 IF_ICMPEQ L112 - true
   * 5 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I57 Branch 5 IF_ICMPGT L125 - false
   * 6 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I60 Branch 6 IF_ICMPGT L125 - false
   * 7 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I72 Branch 7 IFLE L127 - true
   * 8 org.jsecurity.util.AntPathMatcher.doMatch(Ljava/lang/String;Ljava/lang/String;Z)Z: I84 Branch 8 IFNE L130 - false
   * 9 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I50 Branch 40 IF_ICMPGE L258 - false
   * 10 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I59 Branch 41 IF_ICMPNE L259 - true
   * 11 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I59 Branch 41 IF_ICMPNE L259 - false
   * 12 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I74 Branch 42 IFNE L265 - true
   * 13 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I125 Branch 47 IFNE L282 - true
   * 14 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I139 Branch 48 IF_ICMPEQ L287 - true
   * 15 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I139 Branch 48 IF_ICMPEQ L287 - false
   * 16 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I142 Branch 49 IF_ICMPGT L287 - false
   * 17 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I147 Branch 50 IF_ICMPEQ L288 - false
   * 18 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I154 Branch 51 IF_ICMPEQ L289 - true
   * 19 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I170 Branch 52 IF_ICMPLE L296 - true
   * 20 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I206 Branch 55 IF_ICMPEQ L308 - true
   * 21 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I237 Branch 59 IF_ICMPLE L317 - true
   * 22 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I269 Branch 62 IF_ICMPEQ L330 - false
   * 23 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I272 Branch 63 IF_ICMPGT L330 - false
   * 24 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I286 Branch 64 IF_ICMPGT L332 - false
   * 25 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I293 Branch 65 IF_ICMPNE L333 - true
   * 26 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I293 Branch 65 IF_ICMPNE L333 - false
   * 27 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I311 Branch 66 IF_ICMPNE L338 - true
   * 28 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I347 Branch 67 IF_ICMPGT L349 - false
   * 29 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I355 Branch 68 IF_ICMPGE L350 - false
   * 30 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I370 Branch 69 IF_ICMPEQ L352 - false
   * 31 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I381 Branch 70 IF_ICMPEQ L353 - true
   * 32 org.jsecurity.util.AntPathMatcher.matchStrings(Ljava/lang/String;Ljava/lang/String;)Z: I381 Branch 70 IF_ICMPEQ L353 - false
   */
  @Test
  public void test24()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      boolean boolean0 = antPathMatcher0.matchStart("1iu*k_'YFW>d!Xaoi5[K ~*%L`*", "1iu*k_'YFW>d!Xa,s[Iu#w%<-Jz^");
      assertEquals(false, boolean0);
  }

  //Test case number: 25
  /*
   * 8 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I45 Branch 75 IF_ICMPGT L408 - true
   * 2 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I57 Branch 77 IF_ICMPLT L408 - false
   * 3 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I61 Branch 78 IFGT L409 - false
   * 4 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I63 Branch 79 IFNE L409 - false
   * 5 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I69 Branch 80 IFGT L409 - false
   * 6 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I32 Branch 74 IF_ICMPGE L406 - true
   * 7 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I32 Branch 74 IF_ICMPGE L406 - false
   * 8 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I101 Branch 81 IF_ICMPGE L418 - true
   */
  @Test
  public void test25()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      String string0 = antPathMatcher0.extractPathWithinPattern("eQf11p!<s25]RdNM*Gx", "eQf11p!<s25]RdNM*Gx");
      assertEquals("/eQf11p!<s25]RdNM*Gx", string0);
      assertNotNull(string0);
  }

  //Test case number: 26
  /*
   * 4 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I50 Branch 76 IF_ICMPLE L408 - false
   * 2 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I69 Branch 80 IFGT L409 - true
   * 3 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I63 Branch 79 IFNE L409 - false
   * 4 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I45 Branch 75 IF_ICMPGT L408 - false
   */
  @Test
  public void test26()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      String string0 = antPathMatcher0.extractPathWithinPattern("//pZiPFztk?{8'xJI/", "//pZiPFztk?{8'xJI/");
      assertNotNull(string0);
      assertEquals("pZiPFztk?{8'xJI", string0);
  }

  //Test case number: 27
  /*
   * 2 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I57 Branch 77 IF_ICMPLT L408 - true
   * 2 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I50 Branch 76 IF_ICMPLE L408 - true
   */
  @Test
  public void test27()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      antPathMatcher0.setPathSeparator("NuC;Blr}");
      String string0 = antPathMatcher0.extractPathWithinPattern("eQf11p!<s25]RdNM*Gx", "(Q[8=gE");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  //Test case number: 28
  /*
   * 9 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I105 Branch 82 IFGT L419 - true
   * 2 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I32 Branch 74 IF_ICMPGE L406 - false
   * 3 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I45 Branch 75 IF_ICMPGT L408 - true
   * 4 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I45 Branch 75 IF_ICMPGT L408 - false
   * 5 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I50 Branch 76 IF_ICMPLE L408 - true
   * 6 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I57 Branch 77 IF_ICMPLT L408 - false
   * 7 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I61 Branch 78 IFGT L409 - false
   * 8 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I63 Branch 79 IFNE L409 - true
   * 9 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I101 Branch 81 IF_ICMPGE L418 - false
   */
  @Test
  public void test28()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      antPathMatcher0.setPathSeparator("No corresponding value could be found in line [");
      String string0 = antPathMatcher0.extractPathWithinPattern("eQf11p!<s25]RdNM*Gx", "/eQf11p!<s25]RdNM*Gx");
      assertNotNull(string0);
      assertEquals("25]RNo corresponding value could be found in line [M*Gx", string0);
  }

  //Test case number: 29
  /*
   * 8 covered goals:
   * 1 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I107 Branch 83 IFLE L419 - false
   * 2 org.jsecurity.util.AntPathMatcher.<init>()V: root-Branch
   * 3 org.jsecurity.util.AntPathMatcher.setPathSeparator(Ljava/lang/String;)V: I4 Branch 1 IFNULL L80 - false
   * 4 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I32 Branch 74 IF_ICMPGE L406 - true
   * 5 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I101 Branch 81 IF_ICMPGE L418 - true
   * 6 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I101 Branch 81 IF_ICMPGE L418 - false
   * 7 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I105 Branch 82 IFGT L419 - false
   * 8 org.jsecurity.util.AntPathMatcher.extractPathWithinPattern(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I107 Branch 83 IFLE L419 - true
   */
  @Test
  public void test29()  throws Throwable  {
      AntPathMatcher antPathMatcher0 = new AntPathMatcher();
      antPathMatcher0.setPathSeparator("uUJ+fS_#/q~KF!");
      String string0 = antPathMatcher0.extractPathWithinPattern("uUJ+fS_#/q~KF!", "n$</:3'kls_7~w1-");
      assertEquals("n$<uUJ+fS_#/q~KF!:3'klsuUJ+fS_#/q~KF!7uUJ+fS_#/q~KF!w1-", string0);
      assertNotNull(string0);
  }
}
