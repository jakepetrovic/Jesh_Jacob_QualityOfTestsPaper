/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.jniinchi;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import net.sf.jniinchi.INCHI_RET;
import net.sf.jniinchi.JniInchiOutput;

public class JniInchiOutputEvoSuiteTest {


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 net.sf.jniinchi.JniInchiOutput.getMessage()Ljava/lang/String;: root-Branch
   * 2 net.sf.jniinchi.JniInchiOutput.<init>(Lnet/sf/jniinchi/INCHI_RET;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * 3 net.sf.jniinchi.JniInchiOutput.<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(0, ",QF$o^x", ",QF$o^x", ",QF$o^x", ",QF$o^x");
      String string0 = jniInchiOutput0.getMessage();
      assertEquals(",QF$o^x", string0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.JniInchiOutput.getAuxInfo()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput((-755), "qNo", "qNo", "ERROR", "qNo");
      String string0 = jniInchiOutput0.getAuxInfo();
      assertNotNull(string0);
      assertEquals("InChI_Output: null/qNo/qNo/ERROR/qNo", jniInchiOutput0.toString());
      assertEquals("qNo", string0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.JniInchiOutput.toString()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(0, ",QF$o^x", ",QF$o^x", ",QF$o^x", ",QF$o^x");
      String string0 = jniInchiOutput0.toString();
      assertEquals("InChI_Output: OKAY/,QF$o^x/,QF$o^x/,QF$o^x/,QF$o^x", string0);
      assertNotNull(string0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.JniInchiOutput.getLog()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      INCHI_RET iNCHI_RET0 = INCHI_RET.OKAY;
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(iNCHI_RET0, "", "", "", "");
      String string0 = jniInchiOutput0.getLog();
      assertEquals("", string0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.JniInchiOutput.getReturnStatus()Lnet/sf/jniinchi/INCHI_RET;: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(0, ",QF$o^x", ",QF$o^x", ",QF$o^x", ",QF$o^x");
      INCHI_RET iNCHI_RET0 = jniInchiOutput0.getReturnStatus();
      assertEquals("OKAY", iNCHI_RET0.toString());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.JniInchiOutput.setInchi(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test5()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(0, ",QF$o^x", ",QF$o^x", ",QF$o^x", ",QF$o^x");
      jniInchiOutput0.setInchi("!E25K$/9!\"M?Q.+0@");
      assertEquals(",QF$o^x", jniInchiOutput0.getLog());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.JniInchiOutput.setLog(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test6()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(0, ",QF$o^x", ",QF$o^x", ",QF$o^x", ",QF$o^x");
      jniInchiOutput0.setLog("!E25K$/9!\"M?Q.+0@");
      assertEquals("!E25K$/9!\"M?Q.+0@", jniInchiOutput0.getLog());
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.JniInchiOutput.setAuxInfo(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test7()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(0, ",QF$o^x", ",QF$o^x", ",QF$o^x", ",QF$o^x");
      jniInchiOutput0.setAuxInfo("]ak7epYcQ(*$c2]841");
      assertEquals("InChI_Output: OKAY/,QF$o^x/]ak7epYcQ(*$c2]841/,QF$o^x/,QF$o^x", jniInchiOutput0.toString());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.JniInchiOutput.setRetStatus(Lnet/sf/jniinchi/INCHI_RET;)V: root-Branch
   */
  @Test
  public void test8()  throws Throwable  {
      INCHI_RET iNCHI_RET0 = INCHI_RET.OKAY;
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(0, ",QF$o^x", ",QF$o^x", ",QF$o^x", ",QF$o^x");
      jniInchiOutput0.setRetStatus(iNCHI_RET0);
      assertEquals("InChI_Output: OKAY/,QF$o^x/,QF$o^x/,QF$o^x/,QF$o^x", jniInchiOutput0.toString());
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.JniInchiOutput.getInchi()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test9()  throws Throwable  {
      INCHI_RET iNCHI_RET0 = INCHI_RET.SKIP;
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(iNCHI_RET0, "", "kz{Q(rSZs%b", "", "kz{Q(rSZs%b");
      String string0 = jniInchiOutput0.getInchi();
      assertEquals("InChI_Output: SKIP//kz{Q(rSZs%b//kz{Q(rSZs%b", jniInchiOutput0.toString());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 net.sf.jniinchi.JniInchiOutput.setMessage(Ljava/lang/String;)V: root-Branch
   * 2 net.sf.jniinchi.JniInchiOutput.<init>(Lnet/sf/jniinchi/INCHI_RET;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * 3 net.sf.jniinchi.JniInchiOutput.<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test10()  throws Throwable  {
      JniInchiOutput jniInchiOutput0 = new JniInchiOutput(0, ",QF$o^x", ",QF$o^x", ",QF$o^x", ",QF$o^x");
      jniInchiOutput0.setMessage("InChI_Output: OKAY////]ak7epYcQ(*$c2]841");
      assertEquals("InChI_Output: OKAY/,QF$o^x/,QF$o^x/InChI_Output: OKAY////]ak7epYcQ(*$c2]841/,QF$o^x", jniInchiOutput0.toString());
  }
}
