/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.schemaspy;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.SchemaAnalyzer;
import net.sourceforge.schemaspy.model.ConnectionFailure;

public class SchemaAnalyzerEvoSuiteTest {


  //Test case number: 0
  /*
   * 9 covered goals:
   * 1 net.sourceforge.schemaspy.SchemaAnalyzer.analyze(Lnet/sourceforge/schemaspy/Config;)Lnet/sourceforge/schemaspy/model/Database;: I4 Branch 1 IFEQ L85 - false
   * 2 net.sourceforge.schemaspy.SchemaAnalyzer.yankParam(Ljava/util/List;Ljava/lang/String;)V: I9 Branch 87 IFLT L786 - true
   * 3 net.sourceforge.schemaspy.SchemaAnalyzer.yankParam(Ljava/util/List;Ljava/lang/String;)V: I9 Branch 87 IFLT L786 - false
   * 4 net.sourceforge.schemaspy.SchemaAnalyzer.analyze(Lnet/sourceforge/schemaspy/Config;)Lnet/sourceforge/schemaspy/model/Database;: I4 Branch 1 IFEQ L85 - true
   * 5 net.sourceforge.schemaspy.SchemaAnalyzer.analyze(Lnet/sourceforge/schemaspy/Config;)Lnet/sourceforge/schemaspy/model/Database;: I20 Branch 2 IFEQ L90 - true
   * 6 net.sourceforge.schemaspy.SchemaAnalyzer.analyze(Lnet/sourceforge/schemaspy/Config;)Lnet/sourceforge/schemaspy/model/Database;: I55 Branch 3 IF_ICMPGE L99 - true
   * 7 net.sourceforge.schemaspy.SchemaAnalyzer.analyze(Lnet/sourceforge/schemaspy/Config;)Lnet/sourceforge/schemaspy/model/Database;: I55 Branch 3 IF_ICMPGE L99 - false
   * 8 net.sourceforge.schemaspy.SchemaAnalyzer.analyze(Lnet/sourceforge/schemaspy/Config;)Lnet/sourceforge/schemaspy/model/Database;: I64 Branch 4 IFEQ L100 - false
   * 9 net.sourceforge.schemaspy.SchemaAnalyzer.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      SchemaAnalyzer schemaAnalyzer0 = new SchemaAnalyzer();
      String string0 = "4WbbR.G^<rWUug=apI";
      LinkedList<String> linkedList0 = new LinkedList<String>();
      SchemaAnalyzer.yankParam((List<String>) linkedList0, "4WbbR.G^<rWUug=apI");
      Config config0 = Config.getInstance();
      linkedList0.add("4WbbR.G^<rWUug=apI");
      schemaAnalyzer0.analyze(config0);
      String[] stringArray0 = new String[14];
      // Undeclared exception!
      try {
        SchemaAnalyzer.yankParam((List<String>) linkedList0, string0);
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * Index: 0, Size: 0
         */
      }
  }

  //Test case number: 1
  /*
   * 11 covered goals:
   * 1 net.sourceforge.schemaspy.SchemaAnalyzer.getConnection(Lnet/sourceforge/schemaspy/Config;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;: I6 Branch 75 IFEQ L558 - true
   * 2 net.sourceforge.schemaspy.SchemaAnalyzer.getDriver(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Driver;: I58 Branch 79 IFLE L633 - false
   * 3 net.sourceforge.schemaspy.SchemaAnalyzer.getDriver(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Driver;: I86 Branch 80 IFGT L639 - false
   * 4 net.sourceforge.schemaspy.SchemaAnalyzer.getDriver(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Driver;: I92 Branch 81 IF_ICMPNE L640 - true
   * 5 net.sourceforge.schemaspy.SchemaAnalyzer.getDriverClassLoader(Ljava/util/List;)Ljava/lang/ClassLoader;: I8 Branch 82 IFLE L669 - true
   * 6 net.sourceforge.schemaspy.SchemaAnalyzer.getExistingUrls(Ljava/lang/String;)Ljava/util/List;: I26 Branch 83 IF_ICMPGE L690 - true
   * 7 net.sourceforge.schemaspy.SchemaAnalyzer.getExistingUrls(Ljava/lang/String;)Ljava/util/List;: I26 Branch 83 IF_ICMPGE L690 - false
   * 8 net.sourceforge.schemaspy.SchemaAnalyzer.getExistingUrls(Ljava/lang/String;)Ljava/util/List;: I42 Branch 84 IFEQ L692 - true
   * 9 net.sourceforge.schemaspy.SchemaAnalyzer.getMissingFiles(Ljava/lang/String;)Ljava/util/List;: I26 Branch 85 IF_ICMPGE L710 - true
   * 10 net.sourceforge.schemaspy.SchemaAnalyzer.getMissingFiles(Ljava/lang/String;)Ljava/util/List;: I26 Branch 85 IF_ICMPGE L710 - false
   * 11 net.sourceforge.schemaspy.SchemaAnalyzer.getMissingFiles(Ljava/lang/String;)Ljava/util/List;: I42 Branch 86 IFNE L712 - false
   */
  @Test
  public void test1()  throws Throwable  {
      SchemaAnalyzer schemaAnalyzer0 = new SchemaAnalyzer();
      Config config0 = new Config();
      // Undeclared exception!
      try {
        schemaAnalyzer0.getConnection(config0, ":I I76o", ":I I76o", ":I I76o");
        fail("Expecting exception: ConnectionFailure");
      } catch(ConnectionFailure e) {
        /*
         * java.lang.ClassNotFoundException: Class ':I I76o.class' should be in target project, but could not be found!
         */
      }
  }

  //Test case number: 2
  /*
   * 12 covered goals:
   * 1 net.sourceforge.schemaspy.SchemaAnalyzer.getDriver(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Driver;: I92 Branch 81 IF_ICMPNE L640 - false
   * 2 net.sourceforge.schemaspy.SchemaAnalyzer.<init>()V: root-Branch
   * 3 net.sourceforge.schemaspy.SchemaAnalyzer.getDriver(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Driver;: I58 Branch 79 IFLE L633 - false
   * 4 net.sourceforge.schemaspy.SchemaAnalyzer.getDriver(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Driver;: I86 Branch 80 IFGT L639 - false
   * 5 net.sourceforge.schemaspy.SchemaAnalyzer.getExistingUrls(Ljava/lang/String;)Ljava/util/List;: I26 Branch 83 IF_ICMPGE L690 - true
   * 6 net.sourceforge.schemaspy.SchemaAnalyzer.getExistingUrls(Ljava/lang/String;)Ljava/util/List;: I26 Branch 83 IF_ICMPGE L690 - false
   * 7 net.sourceforge.schemaspy.SchemaAnalyzer.getExistingUrls(Ljava/lang/String;)Ljava/util/List;: I42 Branch 84 IFEQ L692 - true
   * 8 net.sourceforge.schemaspy.SchemaAnalyzer.getConnection(Lnet/sourceforge/schemaspy/Config;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;: I6 Branch 75 IFEQ L558 - true
   * 9 net.sourceforge.schemaspy.SchemaAnalyzer.getDriverClassLoader(Ljava/util/List;)Ljava/lang/ClassLoader;: I8 Branch 82 IFLE L669 - true
   * 10 net.sourceforge.schemaspy.SchemaAnalyzer.getMissingFiles(Ljava/lang/String;)Ljava/util/List;: I26 Branch 85 IF_ICMPGE L710 - true
   * 11 net.sourceforge.schemaspy.SchemaAnalyzer.getMissingFiles(Ljava/lang/String;)Ljava/util/List;: I26 Branch 85 IF_ICMPGE L710 - false
   * 12 net.sourceforge.schemaspy.SchemaAnalyzer.getMissingFiles(Ljava/lang/String;)Ljava/util/List;: I42 Branch 86 IFNE L712 - false
   */
  @Test
  public void test2()  throws Throwable  {
      SchemaAnalyzer schemaAnalyzer0 = new SchemaAnalyzer();
      String[] stringArray0 = new String[10];
      stringArray0[0] = "digits";
      stringArray0[1] = "digits";
      stringArray0[2] = ")$oG'!ddFki38:z";
      stringArray0[3] = "F0;.4xGXf";
      stringArray0[4] = "VLM\"bX&XsM*aI";
      stringArray0[5] = "F0;.4xGXf";
      stringArray0[6] = "TEMPORACRY";
      stringArray0[7] = "TEMPORACRY";
      stringArray0[8] = "LUCN^F#,{l=oJcAu";
      stringArray0[9] = "";
      Config config0 = new Config(stringArray0);
      // Undeclared exception!
      try {
        schemaAnalyzer0.getConnection(config0, "digits", "digits", "digits");
        fail("Expecting exception: ConnectionFailure");
      } catch(ConnectionFailure e) {
        /*
         * java.lang.ClassNotFoundException: Class 'digits.class' should be in target project, but could not be found!
         */
      }
  }
}
