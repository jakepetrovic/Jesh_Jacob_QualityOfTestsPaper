/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.crypto.hash;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import org.jsecurity.crypto.hash.Sha1Hash;
import org.jsecurity.crypto.hash.Sha256Hash;
import org.jsecurity.crypto.hash.Sha384Hash;
import org.jsecurity.crypto.hash.Sha512Hash;

public class AbstractHashEvoSuiteTest {


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 org.jsecurity.crypto.hash.AbstractHash.hashCode()I: root-Branch
   * 2 org.jsecurity.crypto.hash.AbstractHash.<init>()V: root-Branch
   * 3 org.jsecurity.crypto.hash.AbstractHash.getBytes()[B: root-Branch
   * 4 org.jsecurity.crypto.hash.AbstractHash.setBytes([B)V: root-Branch
   * 5 org.jsecurity.crypto.hash.AbstractHash.toHex()Ljava/lang/String;: I4 Branch 4 IFNONNULL L224 - false
   */
  @Test
  public void test0()  throws Throwable  {
      Sha384Hash sha384Hash0 = Sha384Hash.fromBase64String("");
      int int0 = sha384Hash0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 org.jsecurity.crypto.hash.AbstractHash.<init>(Ljava/lang/Object;Ljava/lang/Object;)V: root-Branch
   * 2 org.jsecurity.crypto.hash.AbstractHash.getDigest(Ljava/lang/String;)Ljava/security/MessageDigest;: root-Branch
   * 3 org.jsecurity.crypto.hash.AbstractHash.<init>(Ljava/lang/Object;Ljava/lang/Object;I)V: I32 Branch 1 IFNULL L121 - false
   * 4 org.jsecurity.crypto.hash.AbstractHash.hash([B[BI)[B: I10 Branch 2 IFNULL L200 - false
   * 5 org.jsecurity.crypto.hash.AbstractHash.hash([B[BI)[B: I39 Branch 3 IF_ICMPGE L207 - true
   */
  @Test
  public void test1()  throws Throwable  {
      Sha512Hash sha512Hash0 = new Sha512Hash((Object) "\u0000\u0001\uFFFD\uFFFD\u0000\u0000\uFFFD\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", (Object) "");
      assertNotNull(sha512Hash0);
      assertEquals("rzpCkVSGK+B0WuFg+mMUjm0Rjmai868qqVyDPn+ulsJMEqCU9FRtb5dg7T/QcM95BcX1kHxqjPrw0y5kaemu6w==", sha512Hash0.toBase64());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.jsecurity.crypto.hash.AbstractHash.hash([B[B)[B: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      Sha512Hash sha512Hash0 = Sha512Hash.fromBase64String("");
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = sha512Hash0.hash(byteArray0, byteArray0);
      assertNotSame(byteArray1, byteArray0);
      assertNotNull(byteArray1);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 org.jsecurity.crypto.hash.AbstractHash.hash([B)[B: root-Branch
   * 2 org.jsecurity.crypto.hash.AbstractHash.hash([B[BI)[B: I10 Branch 2 IFNULL L200 - true
   */
  @Test
  public void test3()  throws Throwable  {
      Sha512Hash sha512Hash0 = Sha512Hash.fromBase64String("");
      byte[] byteArray0 = new byte[5];
      byte[] byteArray1 = sha512Hash0.hash(byteArray0);
      assertNotSame(byteArray0, byteArray1);
      assertNotNull(byteArray1);
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 org.jsecurity.crypto.hash.AbstractHash.<init>(Ljava/lang/Object;)V: root-Branch
   * 2 org.jsecurity.crypto.hash.AbstractHash.<init>(Ljava/lang/Object;Ljava/lang/Object;I)V: I32 Branch 1 IFNULL L121 - true
   * 3 org.jsecurity.crypto.hash.AbstractHash.hash([B[BI)[B: I10 Branch 2 IFNULL L200 - true
   */
  @Test
  public void test4()  throws Throwable  {
      Sha256Hash sha256Hash0 = new Sha256Hash((Object) "UTF-8");
      assertEquals("OtMDH1UDpEBK+CUmLugjLMBNTqZoPULF3QovKiesmCQ=", sha256Hash0.toBase64());
      assertNotNull(sha256Hash0);
  }

  //Test case number: 5
  /*
   * 4 covered goals:
   * 1 org.jsecurity.crypto.hash.AbstractHash.hash([B[BI)[B: I39 Branch 3 IF_ICMPGE L207 - false
   * 2 org.jsecurity.crypto.hash.AbstractHash.getDigest(Ljava/lang/String;)Ljava/security/MessageDigest;: root-Branch
   * 3 org.jsecurity.crypto.hash.AbstractHash.hash([B[BI)[B: I10 Branch 2 IFNULL L200 - false
   * 4 org.jsecurity.crypto.hash.AbstractHash.hash([B[BI)[B: I39 Branch 3 IF_ICMPGE L207 - true
   */
  @Test
  public void test5()  throws Throwable  {
      Sha512Hash sha512Hash0 = Sha512Hash.fromBase64String("");
      byte[] byteArray0 = new byte[5];
      byte[] byteArray1 = sha512Hash0.hash(byteArray0, byteArray0, 168);
      assertNotNull(byteArray1);
      assertNotSame(byteArray0, byteArray1);
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 org.jsecurity.crypto.hash.AbstractHash.toHex()Ljava/lang/String;: I4 Branch 4 IFNONNULL L224 - true
   * 2 org.jsecurity.crypto.hash.AbstractHash.toString()Ljava/lang/String;: root-Branch
   * 3 org.jsecurity.crypto.hash.AbstractHash.toHex()Ljava/lang/String;: I4 Branch 4 IFNONNULL L224 - false
   */
  @Test
  public void test6()  throws Throwable  {
      Sha256Hash sha256Hash0 = Sha256Hash.fromHexString("");
      String string0 = sha256Hash0.toHex();
      String string1 = sha256Hash0.toString();
      assertEquals("", string1);
      assertNotNull(string1);
      assertSame(string1, string0);
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * 1 org.jsecurity.crypto.hash.AbstractHash.toBase64()Ljava/lang/String;: I4 Branch 5 IFNONNULL L240 - true
   * 2 org.jsecurity.crypto.hash.AbstractHash.toBase64()Ljava/lang/String;: I4 Branch 5 IFNONNULL L240 - false
   */
  @Test
  public void test7()  throws Throwable  {
      Sha512Hash sha512Hash0 = Sha512Hash.fromBase64String("");
      String string0 = sha512Hash0.toBase64();
      String string1 = sha512Hash0.toBase64();
      assertSame(string1, string0);
      assertEquals("", string1);
      assertNotNull(string1);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 org.jsecurity.crypto.hash.AbstractHash.equals(Ljava/lang/Object;)Z: I4 Branch 6 IFEQ L265 - true
   */
  @Test
  public void test8()  throws Throwable  {
      Sha512Hash sha512Hash0 = Sha512Hash.fromBase64String("");
      boolean boolean0 = sha512Hash0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 9
  /*
   * 4 covered goals:
   * 1 org.jsecurity.crypto.hash.AbstractHash.equals(Ljava/lang/Object;)Z: I4 Branch 6 IFEQ L265 - false
   * 2 org.jsecurity.crypto.hash.AbstractHash.<init>()V: root-Branch
   * 3 org.jsecurity.crypto.hash.AbstractHash.getBytes()[B: root-Branch
   * 4 org.jsecurity.crypto.hash.AbstractHash.setBytes([B)V: root-Branch
   */
  @Test
  public void test9()  throws Throwable  {
      Sha512Hash sha512Hash0 = new Sha512Hash();
      Sha1Hash sha1Hash0 = Sha1Hash.fromBase64String("g !");
      boolean boolean0 = sha512Hash0.equals((Object) sha1Hash0);
      assertEquals(false, boolean0);
  }
}
