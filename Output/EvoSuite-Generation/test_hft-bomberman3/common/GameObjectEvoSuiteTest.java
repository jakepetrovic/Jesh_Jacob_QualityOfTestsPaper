/*
 * This file was automatically generated by EvoSuite
 */

package common;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import common.PowerUp;
import common.Tile;
import java.awt.Point;
import javax.swing.JRadioButtonMenuItem;

@RunWith(EvoSuiteRunner.class)
public class GameObjectEvoSuiteTest {


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 common.GameObject.setPosition(Ljava/awt/Point;)V: root-Branch
   * 2 common.GameObject.setActive()V: root-Branch
   * 3 common.GameObject.setInvisible()V: root-Branch
   * 4 common.GameObject.<init>(Ljava/awt/Point;)V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem();
      Point point0 = jRadioButtonMenuItem0.getLocation();
      PowerUp powerUp0 = new PowerUp(point0);
      powerUp0.setPosition(point0);
      assertEquals(false, powerUp0.isVisible());
      assertEquals(true, powerUp0.isActive());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 common.GameObject.setVisible()V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      Tile tile0 = new Tile((Point) null);
      tile0.setVisible();
      assertEquals(true, tile0.isActive());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 common.GameObject.getPosition()Ljava/awt/Point;: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem();
      Point point0 = jRadioButtonMenuItem0.getLocation();
      PowerUp powerUp0 = new PowerUp(point0);
      Point point1 = powerUp0.getPosition();
      assertEquals(false, powerUp0.isVisible());
      assertNotNull(point1);
      assertEquals(true, powerUp0.isActive());
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 common.GameObject.setInactive()V: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem();
      Point point0 = jRadioButtonMenuItem0.getLocation();
      PowerUp powerUp0 = new PowerUp(point0);
      assertEquals(true, powerUp0.isActive());
      
      powerUp0.setInactive();
      assertEquals(false, powerUp0.isActive());
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 common.GameObject.isActive()Z: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      Tile tile0 = new Tile((Point) null);
      boolean boolean0 = tile0.isActive();
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 4 covered goals:
   * 1 common.GameObject.setId(I)V: root-Branch
   * 2 common.GameObject.setActive()V: root-Branch
   * 3 common.GameObject.setInvisible()V: root-Branch
   * 4 common.GameObject.<init>(Ljava/awt/Point;)V: root-Branch
   */
  @Test
  public void test5()  throws Throwable  {
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem();
      Point point0 = jRadioButtonMenuItem0.getLocation();
      PowerUp powerUp0 = new PowerUp(point0);
      powerUp0.setId((-1347));
      assertEquals(-1347, powerUp0.getId());
  }
}
