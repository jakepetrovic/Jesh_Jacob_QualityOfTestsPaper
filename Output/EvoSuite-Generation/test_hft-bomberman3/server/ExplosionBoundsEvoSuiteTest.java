/*
 * This file was automatically generated by EvoSuite
 */

package server;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.awt.Point;
import server.ExplosionBounds;

@RunWith(EvoSuiteRunner.class)
public class ExplosionBoundsEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 server.ExplosionBounds.getLeft()I: root-Branch
   * 2 server.ExplosionBounds.<init>(IIII)V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      ExplosionBounds explosionBounds0 = new ExplosionBounds((-1), 0, (-1), 0);
      int int0 = explosionBounds0.getLeft();
      assertEquals(0, explosionBounds0.getDown());
      assertEquals(-1, explosionBounds0.getRight());
      assertEquals(0, int0);
      assertEquals(-1, explosionBounds0.getUp());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 server.ExplosionBounds.getDown()I: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      ExplosionBounds explosionBounds0 = new ExplosionBounds(0, 0, (-455), (-1007));
      int int0 = explosionBounds0.getDown();
      assertEquals(-1007, explosionBounds0.getLeft());
      assertEquals(0, int0);
      assertEquals(0, explosionBounds0.getUp());
      assertEquals(-455, explosionBounds0.getRight());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 server.ExplosionBounds.getUp()I: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      ExplosionBounds explosionBounds0 = new ExplosionBounds(0, 0, (-455), (-1007));
      int int0 = explosionBounds0.getUp();
      assertEquals(0, explosionBounds0.getDown());
      assertEquals(0, int0);
      assertEquals(-455, explosionBounds0.getRight());
      assertEquals(-1007, explosionBounds0.getLeft());
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 server.ExplosionBounds.getRight()I: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      ExplosionBounds explosionBounds0 = new ExplosionBounds(0, 0, (-455), (-1007));
      int int0 = explosionBounds0.getRight();
      assertEquals(0, explosionBounds0.getUp());
      assertEquals(0, explosionBounds0.getDown());
      assertEquals((-455), int0);
      assertEquals(-1007, explosionBounds0.getLeft());
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 server.ExplosionBounds.contain(Ljava/awt/Point;)Z: I6 Branch 1 IF_ICMPGT L60 - true
   */
  @Test
  public void test4()  throws Throwable  {
      ExplosionBounds explosionBounds0 = new ExplosionBounds(1278, 0, 1278, 1278);
      Point point0 = new Point();
      boolean boolean0 = explosionBounds0.contain(point0);
      assertEquals(0, explosionBounds0.getDown());
      assertEquals(1278, explosionBounds0.getUp());
      assertEquals(1278, explosionBounds0.getLeft());
      assertEquals(1278, explosionBounds0.getRight());
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 server.ExplosionBounds.contain(Ljava/awt/Point;)Z: I6 Branch 1 IF_ICMPGT L60 - false
   * 2 server.ExplosionBounds.contain(Ljava/awt/Point;)Z: I11 Branch 2 IF_ICMPLT L60 - false
   * 3 server.ExplosionBounds.contain(Ljava/awt/Point;)Z: I16 Branch 3 IF_ICMPLT L60 - true
   */
  @Test
  public void test5()  throws Throwable  {
      ExplosionBounds explosionBounds0 = new ExplosionBounds((-1), 0, (-1), 0);
      Point point0 = new Point();
      boolean boolean0 = explosionBounds0.contain(point0);
      assertEquals(-1, explosionBounds0.getRight());
      assertEquals(0, explosionBounds0.getLeft());
      assertEquals(-1, explosionBounds0.getUp());
      assertEquals(false, boolean0);
      assertEquals(0, explosionBounds0.getDown());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 server.ExplosionBounds.contain(Ljava/awt/Point;)Z: I11 Branch 2 IF_ICMPLT L60 - true
   */
  @Test
  public void test6()  throws Throwable  {
      ExplosionBounds explosionBounds0 = new ExplosionBounds(0, 0, (-455), (-1007));
      Point point0 = new Point(0, 1480);
      boolean boolean0 = explosionBounds0.contain(point0);
      assertEquals(-1007, explosionBounds0.getLeft());
      assertEquals(-455, explosionBounds0.getRight());
      assertEquals(0, explosionBounds0.getDown());
      assertEquals(false, boolean0);
      assertEquals(0, explosionBounds0.getUp());
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * 1 server.ExplosionBounds.contain(Ljava/awt/Point;)Z: I16 Branch 3 IF_ICMPLT L60 - false
   * 2 server.ExplosionBounds.contain(Ljava/awt/Point;)Z: I21 Branch 4 IF_ICMPGT L60 - false
   */
  @Test
  public void test7()  throws Throwable  {
      ExplosionBounds explosionBounds0 = new ExplosionBounds(1343, 1343, 1343, 1343);
      Point point0 = new Point(1343, 1343);
      boolean boolean0 = explosionBounds0.contain(point0);
      assertEquals(1343, explosionBounds0.getLeft());
      assertEquals(1343, explosionBounds0.getDown());
      assertEquals(1343, explosionBounds0.getRight());
      assertEquals(true, boolean0);
      assertEquals(1343, explosionBounds0.getUp());
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * 1 server.ExplosionBounds.contain(Ljava/awt/Point;)Z: I21 Branch 4 IF_ICMPGT L60 - true
   * 2 server.ExplosionBounds.<init>(IIII)V: root-Branch
   * 3 server.ExplosionBounds.contain(Ljava/awt/Point;)Z: I6 Branch 1 IF_ICMPGT L60 - false
   * 4 server.ExplosionBounds.contain(Ljava/awt/Point;)Z: I11 Branch 2 IF_ICMPLT L60 - false
   * 5 server.ExplosionBounds.contain(Ljava/awt/Point;)Z: I16 Branch 3 IF_ICMPLT L60 - false
   */
  @Test
  public void test8()  throws Throwable  {
      ExplosionBounds explosionBounds0 = new ExplosionBounds(0, 1144, 1144, 1144);
      Point point0 = new Point((-1572), 791);
      boolean boolean0 = explosionBounds0.contain(point0);
      assertEquals(1144, explosionBounds0.getLeft());
      assertEquals(false, boolean0);
      assertEquals(1144, explosionBounds0.getRight());
      assertEquals(0, explosionBounds0.getUp());
      assertEquals(1144, explosionBounds0.getDown());
  }
}
