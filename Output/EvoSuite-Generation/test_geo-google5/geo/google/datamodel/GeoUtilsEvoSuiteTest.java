/*
 * This file was automatically generated by EvoSuite
 */

package geo.google.datamodel;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import geo.google.datamodel.GeoCoordinate;
import geo.google.datamodel.GeoUtils;

public class GeoUtilsEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 geo.google.datamodel.GeoUtils.distanceBetweenInKm(Lgeo/google/datamodel/GeoCoordinate;Lgeo/google/datamodel/GeoCoordinate;)D: root-Branch
   * 2 geo.google.datamodel.GeoUtils.distanceInMiles(DDDD)D: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      GeoCoordinate geoCoordinate0 = new GeoCoordinate();
      double double0 = GeoUtils.distanceBetweenInKm(geoCoordinate0, geoCoordinate0);
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(Lgeo/google/datamodel/GeoCoordinate;Lgeo/google/datamodel/GeoCoordinate;)D: root-Branch
   * 2 geo.google.datamodel.GeoUtils.distanceHaversineForumla(DDDD)D: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      GeoCoordinate geoCoordinate0 = new GeoCoordinate();
      double double0 = GeoUtils.haversineDistanceBetweenInKm(geoCoordinate0, geoCoordinate0);
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 geo.google.datamodel.GeoUtils.distanceBetweenInMiles(Lgeo/google/datamodel/GeoCoordinate;Lgeo/google/datamodel/GeoCoordinate;)D: root-Branch
   * 2 geo.google.datamodel.GeoUtils.distanceInMiles(DDDD)D: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      GeoCoordinate geoCoordinate0 = new GeoCoordinate();
      double double0 = geoCoordinate0.distanceTo(geoCoordinate0);
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(Lgeo/google/datamodel/GeoCoordinate;Lgeo/google/datamodel/GeoCoordinate;)D: root-Branch
   * 2 geo.google.datamodel.GeoUtils.distanceHaversineForumla(DDDD)D: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      GeoCoordinate geoCoordinate0 = new GeoCoordinate();
      double double0 = GeoUtils.haversineDistanceBetweenInMiles(geoCoordinate0, geoCoordinate0);
      assertEquals(0.0, double0, 0.01D);
  }
}
