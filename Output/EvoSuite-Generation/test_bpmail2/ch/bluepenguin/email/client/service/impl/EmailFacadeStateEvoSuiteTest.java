/*
 * This file was automatically generated by EvoSuite
 */

package ch.bluepenguin.email.client.service.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import ch.bluepenguin.email.client.service.impl.EmailFacadeState;

public class EmailFacadeStateEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 ch.bluepenguin.email.client.service.impl.EmailFacadeState.clear()V: root-Branch
   * 2 ch.bluepenguin.email.client.service.impl.EmailFacadeState.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      EmailFacadeState emailFacadeState0 = new EmailFacadeState();
      emailFacadeState0.clear();
      assertEquals(false, emailFacadeState0.isAllClean());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 ch.bluepenguin.email.client.service.impl.EmailFacadeState.isDirty(Ljava/lang/Integer;)Z: I11 Branch 1 IFNONNULL L42 - false
   */
  @Test
  public void test1()  throws Throwable  {
      EmailFacadeState emailFacadeState0 = new EmailFacadeState();
      boolean boolean0 = emailFacadeState0.isDirty((Integer) null);
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 ch.bluepenguin.email.client.service.impl.EmailFacadeState.setAll(Z)V: I11 Branch 2 IFEQ L48 - false
   * 2 ch.bluepenguin.email.client.service.impl.EmailFacadeState.setAll(Z)V: I11 Branch 2 IFEQ L48 - true
   * 3 ch.bluepenguin.email.client.service.impl.EmailFacadeState.setState(Ljava/lang/Integer;Z)V: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      EmailFacadeState emailFacadeState0 = new EmailFacadeState();
      Integer integer0 = new Integer(1585);
      emailFacadeState0.setState(integer0, true);
      emailFacadeState0.setAll(true);
      assertEquals(false, emailFacadeState0.isAllClean());
  }

  //Test case number: 3
  /*
   * 4 covered goals:
   * 1 ch.bluepenguin.email.client.service.impl.EmailFacadeState.isAllClean()Z: I5 Branch 3 IFNE L56 - true
   * 2 ch.bluepenguin.email.client.service.impl.EmailFacadeState.isAllClean()Z: I19 Branch 4 IFEQ L58 - false
   * 3 ch.bluepenguin.email.client.service.impl.EmailFacadeState.isAllClean()Z: I31 Branch 5 IFEQ L60 - false
   * 4 ch.bluepenguin.email.client.service.impl.EmailFacadeState.isDirty(Ljava/lang/Integer;)Z: I11 Branch 1 IFNONNULL L42 - true
   */
  @Test
  public void test3()  throws Throwable  {
      EmailFacadeState emailFacadeState0 = new EmailFacadeState();
      Integer integer0 = new Integer(1585);
      emailFacadeState0.setState(integer0, true);
      boolean boolean0 = emailFacadeState0.isAllClean();
      assertEquals(false, emailFacadeState0.isAllClean());
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 ch.bluepenguin.email.client.service.impl.EmailFacadeState.isAllClean()Z: I5 Branch 3 IFNE L56 - false
   */
  @Test
  public void test4()  throws Throwable  {
      EmailFacadeState emailFacadeState0 = new EmailFacadeState();
      boolean boolean0 = emailFacadeState0.isAllClean();
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 7 covered goals:
   * 1 ch.bluepenguin.email.client.service.impl.EmailFacadeState.isAllClean()Z: I19 Branch 4 IFEQ L58 - true
   * 2 ch.bluepenguin.email.client.service.impl.EmailFacadeState.isAllClean()Z: I31 Branch 5 IFEQ L60 - true
   * 3 ch.bluepenguin.email.client.service.impl.EmailFacadeState.setState(Ljava/lang/Integer;Z)V: root-Branch
   * 4 ch.bluepenguin.email.client.service.impl.EmailFacadeState.<init>()V: root-Branch
   * 5 ch.bluepenguin.email.client.service.impl.EmailFacadeState.isAllClean()Z: I5 Branch 3 IFNE L56 - true
   * 6 ch.bluepenguin.email.client.service.impl.EmailFacadeState.isAllClean()Z: I19 Branch 4 IFEQ L58 - false
   * 7 ch.bluepenguin.email.client.service.impl.EmailFacadeState.isDirty(Ljava/lang/Integer;)Z: I11 Branch 1 IFNONNULL L42 - true
   */
  @Test
  public void test5()  throws Throwable  {
      EmailFacadeState emailFacadeState0 = new EmailFacadeState();
      assertEquals(false, emailFacadeState0.isAllClean());
      
      emailFacadeState0.setState((Integer) null, false);
      boolean boolean0 = emailFacadeState0.isAllClean();
      assertEquals(true, emailFacadeState0.isAllClean());
      assertEquals(true, boolean0);
  }
}
