/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.lavalamp.device;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.TimeZone;
import net.sf.lavalamp.device.Period;
import net.sf.lavalamp.device.TimeOfDay;

public class PeriodEvoSuiteTest {


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 net.sf.lavalamp.device.Period.isInPeriod(Ljava/util/Calendar;)Z: I19 Branch 1 IFGE L28 - true
   * 2 net.sf.lavalamp.device.Period.isInPeriod(Ljava/util/Calendar;)Z: I33 Branch 2 IFNE L30 - true
   * 3 net.sf.lavalamp.device.Period.<init>(Lnet/sf/lavalamp/device/TimeOfDay;Lnet/sf/lavalamp/device/TimeOfDay;)V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(0, 877);
      Integer integer0 = timeOfDay0.getHours();
      Period period0 = new Period(timeOfDay0, timeOfDay0);
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar(877, (int) integer0, (-1));
      boolean boolean0 = period0.isInPeriod((Calendar) gregorianCalendar0);
      assertEquals(false, boolean0);
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 net.sf.lavalamp.device.Period.isInPeriod(Ljava/util/Calendar;)Z: I19 Branch 1 IFGE L28 - false
   * 2 net.sf.lavalamp.device.Period.isInPeriodWhenStartAndEndOnSameDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I3 Branch 7 IFNE L47 - false
   * 3 net.sf.lavalamp.device.Period.isInPeriodWhenStartAndEndOnSameDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I9 Branch 8 IFLT L47 - true
   * 4 net.sf.lavalamp.device.Period.isInPeriodWhenStartAndEndOnSameDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I20 Branch 9 IFLE L48 - false
   * 5 net.sf.lavalamp.device.Period.isInPeriodWhenStartAndEndOnSameDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I25 Branch 10 IFGE L48 - false
   */
  @Test
  public void test1()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(0, 877);
      TimeOfDay timeOfDay1 = new TimeOfDay((-1), 0);
      Period period0 = new Period(timeOfDay1, timeOfDay0);
      Integer integer0 = timeOfDay1.getHours();
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar(877, (int) integer0, (-1));
      boolean boolean0 = period0.isInPeriod((Calendar) gregorianCalendar0);
      assertEquals(true, boolean0);
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 net.sf.lavalamp.device.Period.isInPeriod(Ljava/util/Calendar;)Z: I33 Branch 2 IFNE L30 - false
   * 2 net.sf.lavalamp.device.Period.isInPeriodWhenEndIsNextDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I3 Branch 3 IFNE L38 - false
   * 3 net.sf.lavalamp.device.Period.isInPeriodWhenEndIsNextDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I9 Branch 4 IFGT L38 - true
   * 4 net.sf.lavalamp.device.Period.isInPeriodWhenEndIsNextDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I20 Branch 5 IFGT L39 - false
   * 5 net.sf.lavalamp.device.Period.isInPeriodWhenEndIsNextDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I25 Branch 6 IFGE L39 - false
   */
  @Test
  public void test2()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(1, 1);
      TimeOfDay timeOfDay1 = new TimeOfDay(1, (-1623));
      Period period0 = new Period(timeOfDay0, timeOfDay1);
      TimeZone timeZone0 = TimeZone.getTimeZone("+-O");
      Locale locale0 = Locale.PRC;
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar(timeZone0, locale0);
      boolean boolean0 = period0.isInPeriod((Calendar) gregorianCalendar0);
      assertEquals("java.util.GregorianCalendar[time=1433724756130,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2015,MONTH=5,WEEK_OF_YEAR=24,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=159,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=52,SECOND=36,MILLISECOND=130,ZONE_OFFSET=0,DST_OFFSET=0]", gregorianCalendar0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 net.sf.lavalamp.device.Period.isInPeriodWhenEndIsNextDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I20 Branch 5 IFGT L39 - true
   */
  @Test
  public void test3()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(1, 1);
      TimeOfDay timeOfDay1 = new TimeOfDay(1, (-1623));
      Period period0 = new Period(timeOfDay0, timeOfDay1);
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar((-1623), (-1623), 1, (-1623), 1);
      boolean boolean0 = period0.isInPeriod((Calendar) gregorianCalendar0);
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 6 covered goals:
   * 1 net.sf.lavalamp.device.Period.isInPeriodWhenEndIsNextDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I25 Branch 6 IFGE L39 - true
   * 2 net.sf.lavalamp.device.Period.isInPeriod(Ljava/util/Calendar;)Z: I19 Branch 1 IFGE L28 - true
   * 3 net.sf.lavalamp.device.Period.isInPeriod(Ljava/util/Calendar;)Z: I33 Branch 2 IFNE L30 - false
   * 4 net.sf.lavalamp.device.Period.isInPeriodWhenEndIsNextDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I3 Branch 3 IFNE L38 - false
   * 5 net.sf.lavalamp.device.Period.isInPeriodWhenEndIsNextDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I9 Branch 4 IFGT L38 - true
   * 6 net.sf.lavalamp.device.Period.isInPeriodWhenEndIsNextDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I20 Branch 5 IFGT L39 - false
   */
  @Test
  public void test4()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(1, 1);
      TimeZone timeZone0 = TimeZone.getTimeZone("+-O");
      Locale locale0 = Locale.PRC;
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar(timeZone0, locale0);
      TimeOfDay timeOfDay1 = new TimeOfDay((-1623), (-1623));
      Period period0 = new Period(timeOfDay0, timeOfDay1);
      boolean boolean0 = period0.isInPeriod((Calendar) gregorianCalendar0);
      assertEquals("java.util.GregorianCalendar[time=1433724760046,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2015,MONTH=5,WEEK_OF_YEAR=24,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=159,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=52,SECOND=40,MILLISECOND=46,ZONE_OFFSET=0,DST_OFFSET=0]", gregorianCalendar0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 net.sf.lavalamp.device.Period.isInPeriodWhenStartAndEndOnSameDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I20 Branch 9 IFLE L48 - true
   */
  @Test
  public void test5()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(1, 1);
      TimeOfDay timeOfDay1 = new TimeOfDay(1, (-1634));
      Period period0 = new Period(timeOfDay1, timeOfDay0);
      GregorianCalendar gregorianCalendar0 = (GregorianCalendar)Calendar.getInstance();
      boolean boolean0 = period0.isInPeriod((Calendar) gregorianCalendar0);
      assertEquals("java.util.GregorianCalendar[time=1433724761676,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2015,MONTH=5,WEEK_OF_YEAR=24,WEEK_OF_MONTH=2,DAY_OF_MONTH=8,DAY_OF_YEAR=159,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=52,SECOND=41,MILLISECOND=676,ZONE_OFFSET=0,DST_OFFSET=0]", gregorianCalendar0.toString());
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 6 covered goals:
   * 1 net.sf.lavalamp.device.Period.isInPeriodWhenStartAndEndOnSameDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I25 Branch 10 IFGE L48 - true
   * 2 net.sf.lavalamp.device.Period.<init>(Lnet/sf/lavalamp/device/TimeOfDay;Lnet/sf/lavalamp/device/TimeOfDay;)V: root-Branch
   * 3 net.sf.lavalamp.device.Period.isInPeriodWhenStartAndEndOnSameDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I3 Branch 7 IFNE L47 - false
   * 4 net.sf.lavalamp.device.Period.isInPeriodWhenStartAndEndOnSameDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I9 Branch 8 IFLT L47 - true
   * 5 net.sf.lavalamp.device.Period.isInPeriodWhenStartAndEndOnSameDay(Lnet/sf/lavalamp/device/TimeOfDay;)Z: I20 Branch 9 IFLE L48 - false
   * 6 net.sf.lavalamp.device.Period.isInPeriod(Ljava/util/Calendar;)Z: I19 Branch 1 IFGE L28 - false
   */
  @Test
  public void test6()  throws Throwable  {
      TimeOfDay timeOfDay0 = new TimeOfDay(0, 877);
      TimeOfDay timeOfDay1 = new TimeOfDay((-1), 0);
      Period period0 = new Period(timeOfDay1, timeOfDay0);
      Integer integer0 = timeOfDay1.getHours();
      GregorianCalendar gregorianCalendar0 = new GregorianCalendar(877, (-1), (int) integer0, (-1), (int) integer0);
      boolean boolean0 = period0.isInPeriod((Calendar) gregorianCalendar0);
      assertEquals(false, boolean0);
  }
}
