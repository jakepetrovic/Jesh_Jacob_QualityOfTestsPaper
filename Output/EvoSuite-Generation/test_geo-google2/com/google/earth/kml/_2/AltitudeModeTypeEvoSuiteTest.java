/*
 * This file was automatically generated by EvoSuite
 */

package com.google.earth.kml._2;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import com.google.earth.kml._2.AltitudeModeType;

public class AltitudeModeTypeEvoSuiteTest {


  //Test case number: 0
  /*
   * 1 covered goal:
   * 1 com.google.earth.kml._2.AltitudeModeType.value()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      AltitudeModeType altitudeModeType0 = AltitudeModeType.ABSOLUTE;
      String string0 = altitudeModeType0.value();
      assertEquals("absolute", string0);
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 com.google.earth.kml._2.AltitudeModeType.fromValue(Ljava/lang/String;)Lcom/google/earth/kml/_2/AltitudeModeType;: I14 Branch 1 IF_ICMPGE L53 - true
   * 2 com.google.earth.kml._2.AltitudeModeType.fromValue(Ljava/lang/String;)Lcom/google/earth/kml/_2/AltitudeModeType;: I14 Branch 1 IF_ICMPGE L53 - false
   * 3 com.google.earth.kml._2.AltitudeModeType.fromValue(Ljava/lang/String;)Lcom/google/earth/kml/_2/AltitudeModeType;: I25 Branch 2 IFLE L54 - true
   */
  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        AltitudeModeType.fromValue("RELATIVE_TO_GROUND");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * RELATIVE_TO_GROUND
         */
      }
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 com.google.earth.kml._2.AltitudeModeType.fromValue(Ljava/lang/String;)Lcom/google/earth/kml/_2/AltitudeModeType;: I25 Branch 2 IFLE L54 - false
   * 2 com.google.earth.kml._2.AltitudeModeType.fromValue(Ljava/lang/String;)Lcom/google/earth/kml/_2/AltitudeModeType;: I14 Branch 1 IF_ICMPGE L53 - false
   */
  @Test
  public void test2()  throws Throwable  {
      AltitudeModeType altitudeModeType0 = AltitudeModeType.fromValue("clampToGround");
      assertEquals(AltitudeModeType.CLAMP_TO_GROUND, altitudeModeType0);
  }
}
