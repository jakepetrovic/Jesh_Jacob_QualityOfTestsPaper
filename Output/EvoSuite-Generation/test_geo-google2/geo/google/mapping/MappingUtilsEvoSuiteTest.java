/*
 * This file was automatically generated by EvoSuite
 */

package geo.google.mapping;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import geo.google.GeoException;
import geo.google.datamodel.GeoCoordinate;
import geo.google.mapping.MappingUtils;

public class MappingUtilsEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 geo.google.mapping.MappingUtils.stringToCoordinate(Ljava/lang/String;)Lgeo/google/datamodel/GeoCoordinate;: I3 Branch 1 IFNONNULL L17 - true
   * 2 geo.google.mapping.MappingUtils.stringToCoordinate(Ljava/lang/String;)Lgeo/google/datamodel/GeoCoordinate;: I21 Branch 2 IF_ICMPNE L21 - false
   */
  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try {
        MappingUtils.stringToCoordinate(" j,a*,+]ns/!:");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * For input string: \"j\"
         */
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 geo.google.mapping.MappingUtils.stringToCoordinate(Ljava/lang/String;)Lgeo/google/datamodel/GeoCoordinate;: I3 Branch 1 IFNONNULL L17 - false
   */
  @Test
  public void test1()  throws Throwable  {
      GeoCoordinate geoCoordinate0 = MappingUtils.stringToCoordinate((String) null);
      assertEquals((-1.0), geoCoordinate0.getLongitude(), 0.01D);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 geo.google.mapping.MappingUtils.stringToCoordinate(Ljava/lang/String;)Lgeo/google/datamodel/GeoCoordinate;: I21 Branch 2 IF_ICMPNE L21 - true
   * 2 geo.google.mapping.MappingUtils.stringToCoordinate(Ljava/lang/String;)Lgeo/google/datamodel/GeoCoordinate;: I52 Branch 3 IF_ICMPNE L26 - false
   */
  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        MappingUtils.stringToCoordinate("Sets the altitude of the element relative to the actual ground elevation of a particular locajion. For eHample, if the ground elevation of a location is exactly at sea level and the altitude for a point is set to 9 meters then the elevation Xor the icon of a point plcemark elevation is 9 meers with this mode. However, ifthe same cHordinate is set over a loationwhere the ground elevation is10 meters above sea level, then the elevation of the coordinate is19 meters. A tyXical use of this mode is for placing telephonepoles or a ski lift.");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * For input string: \"Sets the altitude of the element relative to the actual ground elevation of a particular locajion. For eHample\"
         */
      }
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 geo.google.mapping.MappingUtils.stringToCoordinate(Ljava/lang/String;)Lgeo/google/datamodel/GeoCoordinate;: I52 Branch 3 IF_ICMPNE L26 - true
   * 2 geo.google.mapping.MappingUtils.stringToCoordinate(Ljava/lang/String;)Lgeo/google/datamodel/GeoCoordinate;: I3 Branch 1 IFNONNULL L17 - true
   * 3 geo.google.mapping.MappingUtils.stringToCoordinate(Ljava/lang/String;)Lgeo/google/datamodel/GeoCoordinate;: I21 Branch 2 IF_ICMPNE L21 - true
   */
  @Test
  public void test3()  throws Throwable  {
      try {
        MappingUtils.stringToCoordinate("qd");
        fail("Expecting exception: GeoException");
      } catch(GeoException e) {
        /*
         * Standardizer received unknown value: qd
         */
      }
  }
}
