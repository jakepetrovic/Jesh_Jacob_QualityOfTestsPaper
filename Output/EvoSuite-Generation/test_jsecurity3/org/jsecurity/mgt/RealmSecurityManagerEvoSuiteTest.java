/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.mgt;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.util.Collection;
import org.jsecurity.mgt.DefaultSecurityManager;
import org.jsecurity.realm.Realm;
import org.jsecurity.subject.PrincipalCollection;
import org.jsecurity.web.DefaultWebSecurityManager;

public class RealmSecurityManagerEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 org.jsecurity.mgt.RealmSecurityManager.<init>()V: root-Branch
   * 2 org.jsecurity.mgt.RealmSecurityManager.setRealm(Lorg/jsecurity/realm/Realm;)V: I3 Branch 1 IFNONNULL L66 - false
   */
  @Test
  public void test0()  throws Throwable  {
      DefaultSecurityManager defaultSecurityManager0 = null;
      try {
        defaultSecurityManager0 = new DefaultSecurityManager((Realm) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Realm argument cannot be null
         */
      }
  }

  //Test case number: 1
  /*
   * 10 covered goals:
   * 1 org.jsecurity.mgt.RealmSecurityManager.ensureRealms()V: I8 Branch 4 IFNULL L99 - false
   * 2 org.jsecurity.mgt.RealmSecurityManager.ensureRealms()V: I11 Branch 5 IFLE L99 - true
   * 3 org.jsecurity.mgt.RealmSecurityManager.getRealms()Ljava/util/Collection;: root-Branch
   * 4 org.jsecurity.mgt.RealmSecurityManager.ensureRealms()V: I8 Branch 4 IFNULL L99 - true
   * 5 org.jsecurity.mgt.RealmSecurityManager.ensureRealms()V: I16 Branch 6 IFEQ L100 - false
   * 6 org.jsecurity.mgt.RealmSecurityManager.setRealms(Ljava/util/Collection;)V: I3 Branch 2 IFNONNULL L80 - true
   * 7 org.jsecurity.mgt.RealmSecurityManager.setRealms(Ljava/util/Collection;)V: I15 Branch 3 IFLE L83 - true
   * 8 org.jsecurity.mgt.RealmSecurityManager.createDefaultRealm()Lorg/jsecurity/realm/Realm;: I8 Branch 7 IFNULL L118 - true
   * 9 org.jsecurity.mgt.RealmSecurityManager.setRealm(Lorg/jsecurity/realm/Realm;)V: I3 Branch 1 IFNONNULL L66 - true
   * 10 org.jsecurity.mgt.RealmSecurityManager.applyCacheManagerToRealms()V: I13 Branch 8 IFNULL L150 - true
   */
  @Test
  public void test1()  throws Throwable  {
      DefaultSecurityManager defaultSecurityManager0 = new DefaultSecurityManager();
      defaultSecurityManager0.ensureRealms();
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try {
        defaultSecurityManager0.isPermittedAll((PrincipalCollection) null, stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Wildcard string cannot be null or empty. Make sure permission strings are properly formatted.
         */
      }
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 org.jsecurity.mgt.RealmSecurityManager.setRealms(Ljava/util/Collection;)V: I3 Branch 2 IFNONNULL L80 - false
   * 2 org.jsecurity.mgt.RealmSecurityManager.<init>()V: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = null;
      try {
        defaultWebSecurityManager0 = new DefaultWebSecurityManager((Collection<Realm>) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Realms collection argument cannot be null.
         */
      }
  }
}
