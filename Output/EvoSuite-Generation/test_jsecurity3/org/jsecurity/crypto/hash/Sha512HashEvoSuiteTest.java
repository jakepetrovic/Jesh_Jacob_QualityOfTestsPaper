/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.crypto.hash;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import org.jsecurity.crypto.hash.Sha512Hash;

public class Sha512HashEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 org.jsecurity.crypto.hash.Sha512Hash.getAlgorithmName()Ljava/lang/String;: root-Branch
   * 2 org.jsecurity.crypto.hash.Sha512Hash.<init>(Ljava/lang/Object;Ljava/lang/Object;)V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      Sha512Hash sha512Hash0 = new Sha512Hash((Object) "Q\uFFFDi\uFFFD", (Object) "0cRbAAA=");
      assertEquals("beecde30ef3b702ca5eeec5d44edaa025c0cfb06c84ebefa69c06b3c53bddc74757e2261cfd25e47459658c435a42f484275cdb73fcf92372a47e191edc895be", sha512Hash0.toHex());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.jsecurity.crypto.hash.Sha512Hash.<init>(Ljava/lang/Object;)V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      Sha512Hash sha512Hash0 = new Sha512Hash((Object) "cf1a8d1a9a11e0d94f83ea8347e668dcb4cf4669c850e58a7ba7bf0752680f0f776bc3634ed133da5b2a1d53c41b6afe84f8ca686010f2f8cf700b48040b54ac");
      assertEquals("SHA-512", sha512Hash0.getAlgorithmName());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 org.jsecurity.crypto.hash.Sha512Hash.<init>(Ljava/lang/Object;Ljava/lang/Object;I)V: root-Branch
   * 2 org.jsecurity.crypto.hash.Sha512Hash.getAlgorithmName()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      Sha512Hash sha512Hash0 = new Sha512Hash((Object) "beecde30ef3b702ca5eeec5d44edaa025c0cfb06c84ebefa69c06b3c53bddc74757e2261cfd25e47459658c435a42f484275cdb73fcf92372a47e191edc895be", (Object) "SHA-512", (int) (byte) (-3));
      assertEquals("SHA-512", sha512Hash0.getAlgorithmName());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 org.jsecurity.crypto.hash.Sha512Hash.fromHexString(Ljava/lang/String;)Lorg/jsecurity/crypto/hash/Sha512Hash;: root-Branch
   * 2 org.jsecurity.crypto.hash.Sha512Hash.<init>()V: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try {
        Sha512Hash.fromHexString("_CMTzFj:85brszJ:");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Odd number of characters.
         */
      }
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 org.jsecurity.crypto.hash.Sha512Hash.fromBase64String(Ljava/lang/String;)Lorg/jsecurity/crypto/hash/Sha512Hash;: root-Branch
   * 2 org.jsecurity.crypto.hash.Sha512Hash.<init>()V: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      Sha512Hash sha512Hash0 = Sha512Hash.fromBase64String("@0c@Rb`7@g");
      assertEquals("d1c45b0000", sha512Hash0.toString());
  }
}
