/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.crypto.hash;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import org.jsecurity.crypto.hash.Sha384Hash;

public class Sha384HashEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 org.jsecurity.crypto.hash.Sha384Hash.<init>(Ljava/lang/Object;Ljava/lang/Object;I)V: root-Branch
   * 2 org.jsecurity.crypto.hash.Sha384Hash.getAlgorithmName()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      Sha384Hash sha384Hash0 = new Sha384Hash((Object) "SHA-384", (Object) "SHA-384", 1288);
      assertEquals("f6f2b3cf77e078ba56f6f14281e82fb0293805b99bb4670a629824c0c3694644b08b7dbd2e4363036642aeffe8dd51f0", sha384Hash0.toHex());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 org.jsecurity.crypto.hash.Sha384Hash.fromBase64String(Ljava/lang/String;)Lorg/jsecurity/crypto/hash/Sha384Hash;: root-Branch
   * 2 org.jsecurity.crypto.hash.Sha384Hash.<init>()V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      Sha384Hash sha384Hash0 = Sha384Hash.fromBase64String("' MessageDigest instance available on the current JVM.");
      assertEquals("31eb2c6a07838a07acb629ecb5a9dc79abda8a569b95ea27b6179cbabade9ed25500", sha384Hash0.toString());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.jsecurity.crypto.hash.Sha384Hash.<init>(Ljava/lang/Object;)V: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      Sha384Hash sha384Hash0 = new Sha384Hash((Object) "\uFFFD\t");
      assertEquals("d374b1ea405dec6c732aeba552916a11897fd1a316aef327304602d78172c5578c67785477f78d2fa9b6a90f973d82b1", sha384Hash0.toString());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 org.jsecurity.crypto.hash.Sha384Hash.fromHexString(Ljava/lang/String;)Lorg/jsecurity/crypto/hash/Sha384Hash;: root-Branch
   * 2 org.jsecurity.crypto.hash.Sha384Hash.<init>()V: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try {
        Sha384Hash.fromHexString("]VxMPkJs");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Odd number of characters.
         */
      }
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 org.jsecurity.crypto.hash.Sha384Hash.<init>(Ljava/lang/Object;Ljava/lang/Object;)V: root-Branch
   * 2 org.jsecurity.crypto.hash.Sha384Hash.getAlgorithmName()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      Sha384Hash sha384Hash0 = new Sha384Hash((Object) "UTF-8", (Object) "d374b1ea405dec6c732aeba552916a11897fd1a316aef327304602d78172c5578c67785477f78d2fa9b6a90f973d82b1");
      assertEquals("oVFjc3FranZ08CLL5ceQ3hSF4nNQKuDL3FnbdFh6rRWo2+RjHr99AKbrH+FYizsB", sha384Hash0.toBase64());
  }
}
