/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.subject;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.util.Collection;
import java.util.Comparator;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import org.jsecurity.subject.PrincipalCollection;
import org.jsecurity.subject.SimplePrincipalCollection;

public class SimplePrincipalCollectionEvoSuiteTest {


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.equals(Ljava/lang/Object;)Z: I13 Branch 37 IFEQ L196 - false
   * 2 org.jsecurity.subject.SimplePrincipalCollection.equals(Ljava/lang/Object;)Z: I23 Branch 38 IFNULL L198 - true
   * 3 org.jsecurity.subject.SimplePrincipalCollection.equals(Ljava/lang/Object;)Z: I33 Branch 39 IFNONNULL L198 - false
   * 4 org.jsecurity.subject.SimplePrincipalCollection.<init>(Lorg/jsecurity/subject/PrincipalCollection;)V: root-Branch
   * 5 org.jsecurity.subject.SimplePrincipalCollection.<init>()V: root-Branch
   * 6 org.jsecurity.subject.SimplePrincipalCollection.equals(Ljava/lang/Object;)Z: I4 Branch 36 IF_ACMPNE L193 - false
   * 7 org.jsecurity.subject.SimplePrincipalCollection.getRealmNames()Ljava/util/Set;: I4 Branch 32 IFNONNULL L170 - false
   * 8 org.jsecurity.subject.SimplePrincipalCollection.addAll(Lorg/jsecurity/subject/PrincipalCollection;)V: I4 Branch 9 IFNULL L92 - true
   */
  @Test
  public void test0()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      SimplePrincipalCollection simplePrincipalCollection1 = new SimplePrincipalCollection((PrincipalCollection) simplePrincipalCollection0);
      assertNotNull(simplePrincipalCollection1);
      
      boolean boolean0 = simplePrincipalCollection1.equals((Object) simplePrincipalCollection0);
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.iterator()Ljava/util/Iterator;: root-Branch
   * 2 org.jsecurity.subject.SimplePrincipalCollection.asSet()Ljava/util/Set;: I4 Branch 24 IFNULL L144 - true
   */
  @Test
  public void test1()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      Iterator<Object> iterator0 = simplePrincipalCollection0.iterator();
      assertEquals(false, iterator0.hasNext());
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.<init>(Ljava/util/Collection;Ljava/lang/String;)V: root-Branch
   * 2 org.jsecurity.subject.SimplePrincipalCollection.addAll(Ljava/util/Collection;Ljava/lang/String;)V: I3 Branch 6 IFNONNULL L79 - true
   * 3 org.jsecurity.subject.SimplePrincipalCollection.addAll(Ljava/util/Collection;Ljava/lang/String;)V: I14 Branch 7 IFNONNULL L82 - true
   * 4 org.jsecurity.subject.SimplePrincipalCollection.addAll(Ljava/util/Collection;Ljava/lang/String;)V: I26 Branch 8 IFLE L85 - false
   * 5 org.jsecurity.subject.SimplePrincipalCollection.byType(Ljava/lang/Class;)Ljava/util/Collection;: I4 Branch 17 IFNULL L117 - true
   */
  @Test
  public void test2()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      Class<?> class0 = SimplePrincipalCollection.class;
      Collection<SimplePrincipalCollection> collection0 = simplePrincipalCollection0.byType((Class<SimplePrincipalCollection>) class0);
      SimplePrincipalCollection simplePrincipalCollection1 = null;
      try {
        simplePrincipalCollection1 = new SimplePrincipalCollection((Collection) collection0, "principal argument cannot be null.");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * principals argument cannot be an empty collection.
         */
      }
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.<init>(Ljava/lang/Object;Ljava/lang/String;)V: I8 Branch 1 IFEQ L41 - false
   * 2 org.jsecurity.subject.SimplePrincipalCollection.fromRealm(Ljava/lang/String;)Ljava/util/Collection;: I4 Branch 28 IFNULL L159 - true
   * 3 org.jsecurity.subject.SimplePrincipalCollection.addAll(Ljava/util/Collection;Ljava/lang/String;)V: I26 Branch 8 IFLE L85 - false
   */
  @Test
  public void test3()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      Collection<Object> collection0 = simplePrincipalCollection0.fromRealm("[]");
      SimplePrincipalCollection simplePrincipalCollection1 = null;
      try {
        simplePrincipalCollection1 = new SimplePrincipalCollection((Object) collection0, "[]");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * principals argument cannot be an empty collection.
         */
      }
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.add(Ljava/lang/Object;Ljava/lang/String;)V: I3 Branch 4 IFNONNULL L69 - false
   * 2 org.jsecurity.subject.SimplePrincipalCollection.<init>(Ljava/lang/Object;Ljava/lang/String;)V: I8 Branch 1 IFEQ L41 - true
   */
  @Test
  public void test4()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      SimplePrincipalCollection simplePrincipalCollection1 = null;
      try {
        simplePrincipalCollection1 = new SimplePrincipalCollection((Object) simplePrincipalCollection0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * realmName argument cannot be null.
         */
      }
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.add(Ljava/lang/Object;Ljava/lang/String;)V: I14 Branch 5 IFNONNULL L72 - false
   * 2 org.jsecurity.subject.SimplePrincipalCollection.add(Ljava/lang/Object;Ljava/lang/String;)V: I3 Branch 4 IFNONNULL L69 - true
   * 3 org.jsecurity.subject.SimplePrincipalCollection.add(Ljava/lang/Object;Ljava/lang/String;)V: I14 Branch 5 IFNONNULL L72 - true
   * 4 org.jsecurity.subject.SimplePrincipalCollection.getPrincipalsLazy(Ljava/lang/String;)Ljava/util/Collection;: I4 Branch 2 IFNONNULL L57 - false
   * 5 org.jsecurity.subject.SimplePrincipalCollection.getPrincipalsLazy(Ljava/lang/String;)Ljava/util/Collection;: I23 Branch 3 IFNONNULL L61 - false
   */
  @Test
  public void test5()  throws Throwable  {
      Object object0 = new Object();
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection(object0, "7v4x@");
      assertNotNull(simplePrincipalCollection0);
      
      // Undeclared exception!
      try {
        simplePrincipalCollection0.add((Object) null, "7v4x@");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * principal argument cannot be null.
         */
      }
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.addAll(Ljava/util/Collection;Ljava/lang/String;)V: I3 Branch 6 IFNONNULL L79 - false
   * 2 org.jsecurity.subject.SimplePrincipalCollection.asList()Ljava/util/List;: I9 Branch 23 IFLE L137 - false
   * 3 org.jsecurity.subject.SimplePrincipalCollection.asSet()Ljava/util/Set;: I4 Branch 24 IFNULL L144 - true
   */
  @Test
  public void test6()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      List<Object> list0 = simplePrincipalCollection0.asList();
      SimplePrincipalCollection simplePrincipalCollection1 = null;
      try {
        simplePrincipalCollection1 = new SimplePrincipalCollection((Collection) list0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * realmName argument cannot be null.
         */
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.addAll(Ljava/util/Collection;Ljava/lang/String;)V: I14 Branch 7 IFNONNULL L82 - false
   */
  @Test
  public void test7()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      // Undeclared exception!
      try {
        simplePrincipalCollection0.addAll((Collection) null, "realmName argument cannot be null");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * principals argument cannot be null.
         */
      }
  }

  //Test case number: 8
  /*
   * 13 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.addAll(Ljava/util/Collection;Ljava/lang/String;)V: I26 Branch 8 IFLE L85 - true
   * 2 org.jsecurity.subject.SimplePrincipalCollection.byType(Ljava/lang/Class;)Ljava/util/Collection;: I4 Branch 17 IFNULL L117 - false
   * 3 org.jsecurity.subject.SimplePrincipalCollection.byType(Ljava/lang/Class;)Ljava/util/Collection;: I8 Branch 18 IFLE L117 - true
   * 4 org.jsecurity.subject.SimplePrincipalCollection.byType(Ljava/lang/Class;)Ljava/util/Collection;: I33 Branch 19 IFEQ L122 - true
   * 5 org.jsecurity.subject.SimplePrincipalCollection.byType(Ljava/lang/Class;)Ljava/util/Collection;: I33 Branch 19 IFEQ L122 - false
   * 6 org.jsecurity.subject.SimplePrincipalCollection.byType(Ljava/lang/Class;)Ljava/util/Collection;: I46 Branch 20 IFEQ L123 - true
   * 7 org.jsecurity.subject.SimplePrincipalCollection.byType(Ljava/lang/Class;)Ljava/util/Collection;: I46 Branch 20 IFEQ L123 - false
   * 8 org.jsecurity.subject.SimplePrincipalCollection.byType(Ljava/lang/Class;)Ljava/util/Collection;: I56 Branch 21 IFEQ L124 - false
   * 9 org.jsecurity.subject.SimplePrincipalCollection.byType(Ljava/lang/Class;)Ljava/util/Collection;: I73 Branch 22 IFLE L129 - true
   * 10 org.jsecurity.subject.SimplePrincipalCollection.hashCode()I: I4 Branch 40 IFNULL L204 - true
   * 11 org.jsecurity.subject.SimplePrincipalCollection.<init>(Ljava/util/Collection;Ljava/lang/String;)V: root-Branch
   * 12 org.jsecurity.subject.SimplePrincipalCollection.addAll(Ljava/util/Collection;Ljava/lang/String;)V: I3 Branch 6 IFNONNULL L79 - true
   * 13 org.jsecurity.subject.SimplePrincipalCollection.addAll(Ljava/util/Collection;Ljava/lang/String;)V: I14 Branch 7 IFNONNULL L82 - true
   */
  @Test
  public void test8()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      SimplePrincipalCollection simplePrincipalCollection1 = new SimplePrincipalCollection((Object) simplePrincipalCollection0, "principal argument cannot be null.");
      assertNotNull(simplePrincipalCollection1);
      
      Class<?> class0 = SimplePrincipalCollection.class;
      Collection<SimplePrincipalCollection> collection0 = simplePrincipalCollection1.byType((Class<SimplePrincipalCollection>) class0);
      assertNotNull(collection0);
      
      SimplePrincipalCollection simplePrincipalCollection2 = new SimplePrincipalCollection((Collection) collection0, "principal argument cannot be null.");
      assertTrue(simplePrincipalCollection2.equals(simplePrincipalCollection1));
      assertNotNull(simplePrincipalCollection2);
  }

  //Test case number: 9
  /*
   * 12 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.addAll(Lorg/jsecurity/subject/PrincipalCollection;)V: I4 Branch 9 IFNULL L92 - false
   * 2 org.jsecurity.subject.SimplePrincipalCollection.addAll(Lorg/jsecurity/subject/PrincipalCollection;)V: I14 Branch 10 IFEQ L93 - false
   * 3 org.jsecurity.subject.SimplePrincipalCollection.addAll(Lorg/jsecurity/subject/PrincipalCollection;)V: I29 Branch 11 IFEQ L94 - false
   * 4 org.jsecurity.subject.SimplePrincipalCollection.fromRealm(Ljava/lang/String;)Ljava/util/Collection;: I4 Branch 28 IFNULL L159 - false
   * 5 org.jsecurity.subject.SimplePrincipalCollection.fromRealm(Ljava/lang/String;)Ljava/util/Collection;: I8 Branch 29 IFLE L159 - true
   * 6 org.jsecurity.subject.SimplePrincipalCollection.fromRealm(Ljava/lang/String;)Ljava/util/Collection;: I24 Branch 30 IFNULL L163 - false
   * 7 org.jsecurity.subject.SimplePrincipalCollection.fromRealm(Ljava/lang/String;)Ljava/util/Collection;: I27 Branch 31 IFLE L163 - true
   * 8 org.jsecurity.subject.SimplePrincipalCollection.getRealmNames()Ljava/util/Set;: I4 Branch 32 IFNONNULL L170 - true
   * 9 org.jsecurity.subject.SimplePrincipalCollection.hashCode()I: I4 Branch 40 IFNULL L204 - false
   * 10 org.jsecurity.subject.SimplePrincipalCollection.hashCode()I: I8 Branch 41 IFGT L204 - false
   * 11 org.jsecurity.subject.SimplePrincipalCollection.getPrincipalsLazy(Ljava/lang/String;)Ljava/util/Collection;: I4 Branch 2 IFNONNULL L57 - true
   * 12 org.jsecurity.subject.SimplePrincipalCollection.getPrincipalsLazy(Ljava/lang/String;)Ljava/util/Collection;: I23 Branch 3 IFNONNULL L61 - true
   */
  @Test
  public void test9()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      simplePrincipalCollection0.add((Object) simplePrincipalCollection0, "qGlMDvD");
      // Undeclared exception!
      try {
        simplePrincipalCollection0.addAll((PrincipalCollection) simplePrincipalCollection0);
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
      }
  }

  //Test case number: 10
  /*
   * 7 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.addAll(Lorg/jsecurity/subject/PrincipalCollection;)V: I14 Branch 10 IFEQ L93 - true
   * 2 org.jsecurity.subject.SimplePrincipalCollection.addAll(Lorg/jsecurity/subject/PrincipalCollection;)V: I29 Branch 11 IFEQ L94 - true
   * 3 org.jsecurity.subject.SimplePrincipalCollection.fromRealm(Ljava/lang/String;)Ljava/util/Collection;: I27 Branch 31 IFLE L163 - false
   * 4 org.jsecurity.subject.SimplePrincipalCollection.fromRealm(Ljava/lang/String;)Ljava/util/Collection;: I24 Branch 30 IFNULL L163 - false
   * 5 org.jsecurity.subject.SimplePrincipalCollection.getRealmNames()Ljava/util/Set;: I4 Branch 32 IFNONNULL L170 - true
   * 6 org.jsecurity.subject.SimplePrincipalCollection.addAll(Lorg/jsecurity/subject/PrincipalCollection;)V: I4 Branch 9 IFNULL L92 - false
   * 7 org.jsecurity.subject.SimplePrincipalCollection.addAll(Lorg/jsecurity/subject/PrincipalCollection;)V: I14 Branch 10 IFEQ L93 - false
   */
  @Test
  public void test10()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      simplePrincipalCollection0.getPrincipalsLazy("");
      simplePrincipalCollection0.addAll((PrincipalCollection) simplePrincipalCollection0);
      assertEquals(false, simplePrincipalCollection0.isEmpty());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.oneByType(Ljava/lang/Class;)Ljava/lang/Object;: I4 Branch 12 IFNULL L102 - true
   */
  @Test
  public void test11()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      Class<?> class0 = SimplePrincipalCollection.class;
      Collection<Collection<SimplePrincipalCollection>> collection0 = simplePrincipalCollection0.oneByType((Class<Collection<Collection<SimplePrincipalCollection>>>) class0);
      assertNull(collection0);
  }

  //Test case number: 12
  /*
   * 7 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.oneByType(Ljava/lang/Class;)Ljava/lang/Object;: I4 Branch 12 IFNULL L102 - false
   * 2 org.jsecurity.subject.SimplePrincipalCollection.oneByType(Ljava/lang/Class;)Ljava/lang/Object;: I8 Branch 13 IFLE L102 - true
   * 3 org.jsecurity.subject.SimplePrincipalCollection.oneByType(Ljava/lang/Class;)Ljava/lang/Object;: I27 Branch 14 IFEQ L106 - true
   * 4 org.jsecurity.subject.SimplePrincipalCollection.oneByType(Ljava/lang/Class;)Ljava/lang/Object;: I27 Branch 14 IFEQ L106 - false
   * 5 org.jsecurity.subject.SimplePrincipalCollection.oneByType(Ljava/lang/Class;)Ljava/lang/Object;: I40 Branch 15 IFEQ L107 - true
   * 6 org.jsecurity.subject.SimplePrincipalCollection.oneByType(Ljava/lang/Class;)Ljava/lang/Object;: I40 Branch 15 IFEQ L107 - false
   * 7 org.jsecurity.subject.SimplePrincipalCollection.oneByType(Ljava/lang/Class;)Ljava/lang/Object;: I50 Branch 16 IFEQ L108 - true
   */
  @Test
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection(object0, "7v4x@");
      assertNotNull(simplePrincipalCollection0);
      
      Class<?> class0 = Class.class;
      Object object1 = simplePrincipalCollection0.oneByType((Class<Object>) class0);
      assertNull(object1);
      assertEquals(false, simplePrincipalCollection0.isEmpty());
  }

  //Test case number: 13
  /*
   * 7 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.oneByType(Ljava/lang/Class;)Ljava/lang/Object;: I50 Branch 16 IFEQ L108 - false
   * 2 org.jsecurity.subject.SimplePrincipalCollection.hashCode()I: I4 Branch 40 IFNULL L204 - false
   * 3 org.jsecurity.subject.SimplePrincipalCollection.hashCode()I: I8 Branch 41 IFGT L204 - false
   * 4 org.jsecurity.subject.SimplePrincipalCollection.oneByType(Ljava/lang/Class;)Ljava/lang/Object;: I4 Branch 12 IFNULL L102 - false
   * 5 org.jsecurity.subject.SimplePrincipalCollection.oneByType(Ljava/lang/Class;)Ljava/lang/Object;: I8 Branch 13 IFLE L102 - true
   * 6 org.jsecurity.subject.SimplePrincipalCollection.oneByType(Ljava/lang/Class;)Ljava/lang/Object;: I27 Branch 14 IFEQ L106 - false
   * 7 org.jsecurity.subject.SimplePrincipalCollection.oneByType(Ljava/lang/Class;)Ljava/lang/Object;: I40 Branch 15 IFEQ L107 - false
   */
  @Test
  public void test13()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      Class<?> class0 = SimplePrincipalCollection.class;
      simplePrincipalCollection0.add((Object) simplePrincipalCollection0, "qGlMDvD");
      simplePrincipalCollection0.oneByType((Class<Set<Integer>>) class0);
      assertEquals(false, simplePrincipalCollection0.isEmpty());
  }

  //Test case number: 14
  /*
   * 8 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.byType(Ljava/lang/Class;)Ljava/util/Collection;: I56 Branch 21 IFEQ L124 - true
   * 2 org.jsecurity.subject.SimplePrincipalCollection.byType(Ljava/lang/Class;)Ljava/util/Collection;: I73 Branch 22 IFLE L129 - false
   * 3 org.jsecurity.subject.SimplePrincipalCollection.byType(Ljava/lang/Class;)Ljava/util/Collection;: I4 Branch 17 IFNULL L117 - false
   * 4 org.jsecurity.subject.SimplePrincipalCollection.byType(Ljava/lang/Class;)Ljava/util/Collection;: I8 Branch 18 IFLE L117 - true
   * 5 org.jsecurity.subject.SimplePrincipalCollection.byType(Ljava/lang/Class;)Ljava/util/Collection;: I33 Branch 19 IFEQ L122 - true
   * 6 org.jsecurity.subject.SimplePrincipalCollection.byType(Ljava/lang/Class;)Ljava/util/Collection;: I33 Branch 19 IFEQ L122 - false
   * 7 org.jsecurity.subject.SimplePrincipalCollection.byType(Ljava/lang/Class;)Ljava/util/Collection;: I46 Branch 20 IFEQ L123 - true
   * 8 org.jsecurity.subject.SimplePrincipalCollection.byType(Ljava/lang/Class;)Ljava/util/Collection;: I46 Branch 20 IFEQ L123 - false
   */
  @Test
  public void test14()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      SimplePrincipalCollection simplePrincipalCollection1 = new SimplePrincipalCollection((Object) simplePrincipalCollection0, "");
      assertNotNull(simplePrincipalCollection1);
      
      Class<?> class0 = Comparator.class;
      Collection<SimplePrincipalCollection> collection0 = simplePrincipalCollection1.byType((Class<SimplePrincipalCollection>) class0);
      assertNotNull(collection0);
      assertEquals(false, simplePrincipalCollection1.isEmpty());
      assertEquals(0, collection0.size());
  }

  //Test case number: 15
  /*
   * 6 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.asList()Ljava/util/List;: I9 Branch 23 IFLE L137 - true
   * 2 org.jsecurity.subject.SimplePrincipalCollection.asSet()Ljava/util/Set;: I4 Branch 24 IFNULL L144 - false
   * 3 org.jsecurity.subject.SimplePrincipalCollection.asSet()Ljava/util/Set;: I8 Branch 25 IFLE L144 - true
   * 4 org.jsecurity.subject.SimplePrincipalCollection.asSet()Ljava/util/Set;: I33 Branch 26 IFEQ L149 - true
   * 5 org.jsecurity.subject.SimplePrincipalCollection.asSet()Ljava/util/Set;: I33 Branch 26 IFEQ L149 - false
   * 6 org.jsecurity.subject.SimplePrincipalCollection.asSet()Ljava/util/Set;: I51 Branch 27 IFLE L152 - true
   */
  @Test
  public void test15()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      HashSet<SimplePrincipalCollection> hashSet0 = new HashSet<SimplePrincipalCollection>();
      simplePrincipalCollection0.add((Object) hashSet0, "kiol`f~u");
      List<Object> list0 = simplePrincipalCollection0.asList();
      assertEquals(false, simplePrincipalCollection0.isEmpty());
      assertEquals(1, list0.size());
  }

  //Test case number: 16
  /*
   * 6 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.asSet()Ljava/util/Set;: I51 Branch 27 IFLE L152 - false
   * 2 org.jsecurity.subject.SimplePrincipalCollection.asList()Ljava/util/List;: I9 Branch 23 IFLE L137 - false
   * 3 org.jsecurity.subject.SimplePrincipalCollection.asSet()Ljava/util/Set;: I4 Branch 24 IFNULL L144 - false
   * 4 org.jsecurity.subject.SimplePrincipalCollection.asSet()Ljava/util/Set;: I8 Branch 25 IFLE L144 - true
   * 5 org.jsecurity.subject.SimplePrincipalCollection.asSet()Ljava/util/Set;: I33 Branch 26 IFEQ L149 - true
   * 6 org.jsecurity.subject.SimplePrincipalCollection.asSet()Ljava/util/Set;: I33 Branch 26 IFEQ L149 - false
   */
  @Test
  public void test16()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      simplePrincipalCollection0.getPrincipalsLazy("");
      simplePrincipalCollection0.asList();
      assertEquals(false, simplePrincipalCollection0.isEmpty());
  }

  //Test case number: 17
  /*
   * 3 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.fromRealm(Ljava/lang/String;)Ljava/util/Collection;: I24 Branch 30 IFNULL L163 - true
   * 2 org.jsecurity.subject.SimplePrincipalCollection.fromRealm(Ljava/lang/String;)Ljava/util/Collection;: I4 Branch 28 IFNULL L159 - false
   * 3 org.jsecurity.subject.SimplePrincipalCollection.fromRealm(Ljava/lang/String;)Ljava/util/Collection;: I8 Branch 29 IFLE L159 - true
   */
  @Test
  public void test17()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      simplePrincipalCollection0.getPrincipalsLazy("");
      simplePrincipalCollection0.fromRealm((String) null);
      assertEquals(false, simplePrincipalCollection0.isEmpty());
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.isEmpty()Z: I4 Branch 33 IFNULL L178 - true
   */
  @Test
  public void test18()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      boolean boolean0 = simplePrincipalCollection0.isEmpty();
      assertEquals(true, boolean0);
  }

  //Test case number: 19
  /*
   * 3 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.isEmpty()Z: I4 Branch 33 IFNULL L178 - false
   * 2 org.jsecurity.subject.SimplePrincipalCollection.isEmpty()Z: I8 Branch 34 IFLE L178 - true
   * 3 org.jsecurity.subject.SimplePrincipalCollection.hashCode()I: I4 Branch 40 IFNULL L204 - true
   */
  @Test
  public void test19()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      SimplePrincipalCollection simplePrincipalCollection1 = new SimplePrincipalCollection((Object) simplePrincipalCollection0, "");
      assertNotNull(simplePrincipalCollection1);
      
      boolean boolean0 = simplePrincipalCollection1.isEmpty();
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.clear()V: I4 Branch 35 IFNULL L182 - true
   */
  @Test
  public void test20()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      simplePrincipalCollection0.clear();
      assertEquals(true, simplePrincipalCollection0.isEmpty());
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.clear()V: I4 Branch 35 IFNULL L182 - false
   */
  @Test
  public void test21()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection((Object) "[]", "[]");
      assertEquals(false, simplePrincipalCollection0.isEmpty());
      assertNotNull(simplePrincipalCollection0);
      
      simplePrincipalCollection0.clear();
      assertEquals(true, simplePrincipalCollection0.isEmpty());
  }

  //Test case number: 22
  /*
   * 2 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.equals(Ljava/lang/Object;)Z: I4 Branch 36 IF_ACMPNE L193 - true
   * 2 org.jsecurity.subject.SimplePrincipalCollection.equals(Ljava/lang/Object;)Z: I13 Branch 37 IFEQ L196 - true
   */
  @Test
  public void test22()  throws Throwable  {
      Object object0 = new Object();
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection(object0, "7v4x@");
      assertNotNull(simplePrincipalCollection0);
      
      boolean boolean0 = simplePrincipalCollection0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals(false, simplePrincipalCollection0.isEmpty());
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.equals(Ljava/lang/Object;)Z: I4 Branch 36 IF_ACMPNE L193 - false
   */
  @Test
  public void test23()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      boolean boolean0 = simplePrincipalCollection0.equals((Object) simplePrincipalCollection0);
      assertEquals(true, boolean0);
  }

  //Test case number: 24
  /*
   * 4 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.equals(Ljava/lang/Object;)Z: I23 Branch 38 IFNULL L198 - false
   * 2 org.jsecurity.subject.SimplePrincipalCollection.<init>(Lorg/jsecurity/subject/PrincipalCollection;)V: root-Branch
   * 3 org.jsecurity.subject.SimplePrincipalCollection.getRealmNames()Ljava/util/Set;: I4 Branch 32 IFNONNULL L170 - false
   * 4 org.jsecurity.subject.SimplePrincipalCollection.addAll(Lorg/jsecurity/subject/PrincipalCollection;)V: I4 Branch 9 IFNULL L92 - true
   */
  @Test
  public void test24()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      SimplePrincipalCollection simplePrincipalCollection1 = new SimplePrincipalCollection((PrincipalCollection) simplePrincipalCollection0);
      assertNotNull(simplePrincipalCollection1);
      
      simplePrincipalCollection1.getPrincipalsLazy("GJ$EeM]");
      boolean boolean0 = simplePrincipalCollection1.equals((Object) simplePrincipalCollection0);
      assertEquals(false, simplePrincipalCollection1.isEmpty());
      assertEquals(false, boolean0);
  }

  //Test case number: 25
  /*
   * 10 covered goals:
   * 1 org.jsecurity.subject.SimplePrincipalCollection.equals(Ljava/lang/Object;)Z: I33 Branch 39 IFNONNULL L198 - true
   * 2 org.jsecurity.subject.SimplePrincipalCollection.<init>()V: root-Branch
   * 3 org.jsecurity.subject.SimplePrincipalCollection.equals(Ljava/lang/Object;)Z: I4 Branch 36 IF_ACMPNE L193 - true
   * 4 org.jsecurity.subject.SimplePrincipalCollection.equals(Ljava/lang/Object;)Z: I13 Branch 37 IFEQ L196 - false
   * 5 org.jsecurity.subject.SimplePrincipalCollection.equals(Ljava/lang/Object;)Z: I23 Branch 38 IFNULL L198 - true
   * 6 org.jsecurity.subject.SimplePrincipalCollection.<init>(Ljava/lang/Object;Ljava/lang/String;)V: I8 Branch 1 IFEQ L41 - true
   * 7 org.jsecurity.subject.SimplePrincipalCollection.add(Ljava/lang/Object;Ljava/lang/String;)V: I3 Branch 4 IFNONNULL L69 - true
   * 8 org.jsecurity.subject.SimplePrincipalCollection.add(Ljava/lang/Object;Ljava/lang/String;)V: I14 Branch 5 IFNONNULL L72 - true
   * 9 org.jsecurity.subject.SimplePrincipalCollection.getPrincipalsLazy(Ljava/lang/String;)Ljava/util/Collection;: I4 Branch 2 IFNONNULL L57 - false
   * 10 org.jsecurity.subject.SimplePrincipalCollection.getPrincipalsLazy(Ljava/lang/String;)Ljava/util/Collection;: I23 Branch 3 IFNONNULL L61 - false
   */
  @Test
  public void test25()  throws Throwable  {
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      SimplePrincipalCollection simplePrincipalCollection1 = new SimplePrincipalCollection((Object) "[]", "[]");
      assertNotNull(simplePrincipalCollection1);
      
      boolean boolean0 = simplePrincipalCollection0.equals((Object) simplePrincipalCollection1);
      assertEquals(false, simplePrincipalCollection1.isEmpty());
      assertEquals(false, boolean0);
      assertFalse(simplePrincipalCollection1.equals(simplePrincipalCollection0));
  }
}
