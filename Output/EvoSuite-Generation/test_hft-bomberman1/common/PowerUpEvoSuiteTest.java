/*
 * This file was automatically generated by EvoSuite
 */

package common;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import common.GameObject;
import common.PowerUp;
import java.awt.Point;
import java.util.Collection;
import java.util.Vector;
import javax.swing.JSlider;

@RunWith(EvoSuiteRunner.class)
public class PowerUpEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 common.PowerUp.die()V: root-Branch
   * 2 common.PowerUp.<init>(Ljava/awt/Point;)V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      JSlider jSlider0 = new JSlider();
      Point point0 = jSlider0.getLocation((Point) null);
      PowerUp powerUp0 = new PowerUp(point0);
      powerUp0.die();
      assertEquals(false, powerUp0.isVisible());
      assertEquals(true, powerUp0.isActive());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 common.PowerUp.updateWithCollisionCheck(Ljava/util/Collection;)V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      PowerUp powerUp0 = new PowerUp((Point) null);
      Vector<GameObject> vector0 = new Vector<GameObject>();
      powerUp0.updateWithCollisionCheck((Collection<GameObject>) vector0);
      assertEquals(false, powerUp0.isVisible());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 common.PowerUp.setType(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      JSlider jSlider0 = new JSlider();
      Point point0 = jSlider0.getLocation((Point) null);
      PowerUp powerUp0 = new PowerUp(point0);
      powerUp0.setType("");
      assertEquals(false, powerUp0.isVisible());
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 common.PowerUp.update()V: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      JSlider jSlider0 = new JSlider();
      Point point0 = jSlider0.getLocation((Point) null);
      PowerUp powerUp0 = new PowerUp(point0);
      powerUp0.update();
      assertEquals(false, powerUp0.isVisible());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 common.PowerUp.getType()Ljava/lang/String;: root-Branch
   * 2 common.PowerUp.<init>(Ljava/awt/Point;)V: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      JSlider jSlider0 = new JSlider();
      Point point0 = jSlider0.getLocation((Point) null);
      PowerUp powerUp0 = new PowerUp(point0);
      powerUp0.getType();
      assertEquals(false, powerUp0.isVisible());
  }
}
