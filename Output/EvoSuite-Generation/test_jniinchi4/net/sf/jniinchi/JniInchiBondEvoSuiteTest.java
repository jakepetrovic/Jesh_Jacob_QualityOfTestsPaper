/*
 * This file was automatically generated by EvoSuite
 */

package net.sf.jniinchi;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import net.sf.jniinchi.INCHI_BOND_STEREO;
import net.sf.jniinchi.INCHI_BOND_TYPE;
import net.sf.jniinchi.JniInchiAtom;
import net.sf.jniinchi.JniInchiBond;

public class JniInchiBondEvoSuiteTest {


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 net.sf.jniinchi.JniInchiBond.getTargetAtom()Lnet/sf/jniinchi/JniInchiAtom;: root-Branch
   * 2 net.sf.jniinchi.JniInchiBond.<init>(Lnet/sf/jniinchi/JniInchiAtom;Lnet/sf/jniinchi/JniInchiAtom;II)V: root-Branch
   * 3 net.sf.jniinchi.JniInchiBond.<init>(Lnet/sf/jniinchi/JniInchiAtom;Lnet/sf/jniinchi/JniInchiAtom;Lnet/sf/jniinchi/INCHI_BOND_TYPE;Lnet/sf/jniinchi/INCHI_BOND_STEREO;)V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom((-807.0333987787809), 0.0, 0.0, "InChI Bond: ");
      JniInchiBond jniInchiBond0 = new JniInchiBond(jniInchiAtom0, jniInchiAtom0, (-1702), 0);
      JniInchiAtom jniInchiAtom1 = jniInchiBond0.getTargetAtom();
      assertSame(jniInchiAtom1, jniInchiAtom0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.JniInchiBond.<init>(Lnet/sf/jniinchi/JniInchiAtom;Lnet/sf/jniinchi/JniInchiAtom;Lnet/sf/jniinchi/INCHI_BOND_TYPE;)V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("rrMF4A$@5");
      INCHI_BOND_TYPE iNCHI_BOND_TYPE0 = INCHI_BOND_TYPE.DOUBLE;
      JniInchiBond jniInchiBond0 = new JniInchiBond(jniInchiAtom0, jniInchiAtom0, iNCHI_BOND_TYPE0);
      assertEquals(INCHI_BOND_TYPE.DOUBLE, jniInchiBond0.getBondType());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.JniInchiBond.getOriginAtom()Lnet/sf/jniinchi/JniInchiAtom;: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom((-807.0333987787809), 0.0, 0.0, "InChI Bond: ");
      JniInchiBond jniInchiBond0 = new JniInchiBond(jniInchiAtom0, jniInchiAtom0, (-1702), 0);
      JniInchiAtom jniInchiAtom1 = jniInchiBond0.getOriginAtom();
      assertEquals(0.0, jniInchiAtom1.getY(), 0.01D);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 net.sf.jniinchi.JniInchiBond.debug()V: root-Branch
   * 2 net.sf.jniinchi.JniInchiBond.getDebugString()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom((-807.0333987787809), 0.0, 0.0, "InChI Bond: ");
      JniInchiBond jniInchiBond0 = new JniInchiBond(jniInchiAtom0, jniInchiAtom0, (-1702), 0);
      jniInchiBond0.debug();
      assertEquals("InChI Bond: InChI Bond: -InChI Bond:  // Type: null // Stereo: NONE", jniInchiBond0.getDebugString());
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.JniInchiBond.setStereoDefinition(Lnet/sf/jniinchi/INCHI_BOND_STEREO;)V: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("rrMF4A$@5");
      INCHI_BOND_TYPE iNCHI_BOND_TYPE0 = INCHI_BOND_TYPE.DOUBLE;
      INCHI_BOND_STEREO iNCHI_BOND_STEREO0 = INCHI_BOND_STEREO.SINGLE_1DOWN;
      JniInchiBond jniInchiBond0 = new JniInchiBond(jniInchiAtom0, jniInchiAtom0, iNCHI_BOND_TYPE0, iNCHI_BOND_STEREO0);
      jniInchiBond0.setStereoDefinition(iNCHI_BOND_STEREO0);
      assertEquals(2, jniInchiBond0.getInchiBondType());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.JniInchiBond.getBondStereo()Lnet/sf/jniinchi/INCHI_BOND_STEREO;: root-Branch
   */
  @Test
  public void test5()  throws Throwable  {
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("rrMF4A$@5");
      INCHI_BOND_TYPE iNCHI_BOND_TYPE0 = INCHI_BOND_TYPE.DOUBLE;
      INCHI_BOND_STEREO iNCHI_BOND_STEREO0 = INCHI_BOND_STEREO.SINGLE_1DOWN;
      JniInchiBond jniInchiBond0 = new JniInchiBond(jniInchiAtom0, jniInchiAtom0, iNCHI_BOND_TYPE0, iNCHI_BOND_STEREO0);
      INCHI_BOND_STEREO iNCHI_BOND_STEREO1 = jniInchiBond0.getBondStereo();
      assertEquals("SINGLE_1DOWN", iNCHI_BOND_STEREO1.name());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.JniInchiBond.getBondType()Lnet/sf/jniinchi/INCHI_BOND_TYPE;: root-Branch
   */
  @Test
  public void test6()  throws Throwable  {
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("rrMF4A$@5");
      INCHI_BOND_TYPE iNCHI_BOND_TYPE0 = INCHI_BOND_TYPE.DOUBLE;
      INCHI_BOND_STEREO iNCHI_BOND_STEREO0 = INCHI_BOND_STEREO.SINGLE_1DOWN;
      JniInchiBond jniInchiBond0 = new JniInchiBond(jniInchiAtom0, jniInchiAtom0, iNCHI_BOND_TYPE0, iNCHI_BOND_STEREO0);
      INCHI_BOND_TYPE iNCHI_BOND_TYPE1 = jniInchiBond0.getBondType();
      assertEquals("DOUBLE", iNCHI_BOND_TYPE1.name());
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * 1 net.sf.jniinchi.JniInchiBond.getInchiBondStereo()I: root-Branch
   */
  @Test
  public void test7()  throws Throwable  {
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom("rrMF4A$@5");
      INCHI_BOND_TYPE iNCHI_BOND_TYPE0 = INCHI_BOND_TYPE.DOUBLE;
      INCHI_BOND_STEREO iNCHI_BOND_STEREO0 = INCHI_BOND_STEREO.SINGLE_1DOWN;
      JniInchiBond jniInchiBond0 = new JniInchiBond(jniInchiAtom0, jniInchiAtom0, iNCHI_BOND_TYPE0, iNCHI_BOND_STEREO0);
      int int0 = jniInchiBond0.getInchiBondStereo();
      assertEquals(6, int0);
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 net.sf.jniinchi.JniInchiBond.getInchiBondType()I: root-Branch
   * 2 net.sf.jniinchi.JniInchiBond.<init>(Lnet/sf/jniinchi/JniInchiAtom;Lnet/sf/jniinchi/JniInchiAtom;II)V: root-Branch
   * 3 net.sf.jniinchi.JniInchiBond.<init>(Lnet/sf/jniinchi/JniInchiAtom;Lnet/sf/jniinchi/JniInchiAtom;Lnet/sf/jniinchi/INCHI_BOND_TYPE;Lnet/sf/jniinchi/INCHI_BOND_STEREO;)V: root-Branch
   */
  @Test
  public void test8()  throws Throwable  {
      JniInchiAtom jniInchiAtom0 = new JniInchiAtom(1.0, 1.0, (-18.31161546700745), "");
      JniInchiBond jniInchiBond0 = new JniInchiBond(jniInchiAtom0, jniInchiAtom0, (-1), (-1));
      // Undeclared exception!
      try {
        jniInchiBond0.getInchiBondType();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
