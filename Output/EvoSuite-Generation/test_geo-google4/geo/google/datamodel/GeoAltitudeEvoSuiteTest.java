/*
 * This file was automatically generated by EvoSuite
 */

package geo.google.datamodel;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import geo.google.datamodel.GeoAltitude;

public class GeoAltitudeEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 geo.google.datamodel.GeoAltitude.equals(Ljava/lang/Object;)Z: root-Branch
   * 2 geo.google.datamodel.GeoAltitude.<init>(D)V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude((-849.733076483526));
      // Undeclared exception!
      try {
        geoAltitude0.equals((Object) "CLAMP_TO_GROUND");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * org/apache/commons/lang/builder/EqualsBuilder
         */
      }
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 geo.google.datamodel.GeoAltitude.<init>(DLgeo/google/datamodel/GeoAltitude$GeoAltitudeMode;)V: root-Branch
   * 2 geo.google.datamodel.GeoAltitude.clone()Lgeo/google/datamodel/GeoAltitude;: root-Branch
   * 3 geo.google.datamodel.GeoAltitude.<init>()V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude();
      GeoAltitude geoAltitude1 = geoAltitude0.clone();
      assertEquals(0.0, geoAltitude1.getAltitude(), 0.01D);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 geo.google.datamodel.GeoAltitude.getAltitude()D: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude(0.0);
      double double0 = geoAltitude0.getAltitude();
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 geo.google.datamodel.GeoAltitude.setMode(Lgeo/google/datamodel/GeoAltitude$GeoAltitudeMode;)V: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      GeoAltitude.GeoAltitudeMode geoAltitude_GeoAltitudeMode0 = GeoAltitude.GeoAltitudeMode.RELATIVE_TO_GROUND;
      GeoAltitude geoAltitude0 = new GeoAltitude();
      geoAltitude0.setMode(geoAltitude_GeoAltitudeMode0);
      assertEquals(0.0, geoAltitude0.getAltitude(), 0.01D);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 geo.google.datamodel.GeoAltitude.toString()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude();
      // Undeclared exception!
      try {
        geoAltitude0.toString();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * org/apache/commons/lang/builder/ToStringBuilder
         */
      }
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 geo.google.datamodel.GeoAltitude.setAltitude(D)V: root-Branch
   * 2 geo.google.datamodel.GeoAltitude.<init>()V: root-Branch
   */
  @Test
  public void test5()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude();
      geoAltitude0.setAltitude((-1969.4683924427852));
      assertEquals((-1969.4683924427852), geoAltitude0.getAltitude(), 0.01D);
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * 1 geo.google.datamodel.GeoAltitude.hashCode()I: root-Branch
   * 2 geo.google.datamodel.GeoAltitude.<init>(DLgeo/google/datamodel/GeoAltitude$GeoAltitudeMode;)V: root-Branch
   */
  @Test
  public void test6()  throws Throwable  {
      GeoAltitude.GeoAltitudeMode geoAltitude_GeoAltitudeMode0 = GeoAltitude.GeoAltitudeMode.RELATIVE_TO_GROUND;
      GeoAltitude geoAltitude0 = new GeoAltitude(1.0, geoAltitude_GeoAltitudeMode0);
      // Undeclared exception!
      try {
        geoAltitude0.hashCode();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * org/apache/commons/lang/builder/HashCodeBuilder
         */
      }
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * 1 geo.google.datamodel.GeoAltitude.getMode()Lgeo/google/datamodel/GeoAltitude$GeoAltitudeMode;: root-Branch
   * 2 geo.google.datamodel.GeoAltitude.<init>(D)V: root-Branch
   */
  @Test
  public void test7()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude(0.0);
      geoAltitude0.getMode();
      assertEquals(0.0, geoAltitude0.getAltitude(), 0.01D);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 geo.google.datamodel.GeoAltitude$GeoAltitudeMode.getName()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test8()  throws Throwable  {
      GeoAltitude.GeoAltitudeMode geoAltitude_GeoAltitudeMode0 = GeoAltitude.GeoAltitudeMode.RELATIVE_TO_GROUND;
      String string0 = geoAltitude_GeoAltitudeMode0.getName();
      assertEquals("CLAMP_TO_GROUND", string0);
      assertNotNull(string0);
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * 1 geo.google.datamodel.GeoAltitude$GeoAltitudeMode.getDescription(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   */
  @Test
  public void test9()  throws Throwable  {
      GeoAltitude.GeoAltitudeMode geoAltitude_GeoAltitudeMode0 = GeoAltitude.GeoAltitudeMode.ABSOLUTE;
      String string0 = geoAltitude_GeoAltitudeMode0.getDescription("CLAMP_TO_GROUND");
      assertEquals("Sets the altitude of the coordinate relative to sea level, regardless of the actual elevation of the terrain beneath the element. For example, if you set the altitude of a coordinate to 10 meters with an absolute altitude mode, the icon of a point placemark will appear to be at ground level if the terrain beneath is also 10 meters above sea level. If the terrain is 3 meters above sea level, the placemark will appear elevated above the terrain by 7 meters. A typical use of this mode is for aircraft placement.", string0);
  }
}
