/*
 * This file was automatically generated by EvoSuite
 */

package com.google.earth.kml._2;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import com.google.earth.kml._2.KmlType;
import com.google.earth.kml._2.ObjectFactory;
import com.google.earth.kml._2.PlacemarkType;
import com.google.earth.kml._2.PointType;
import com.google.earth.kml._2.ResponseType;
import com.google.earth.kml._2.StatusType;
import javax.xml.bind.JAXBElement;

public class ObjectFactoryEvoSuiteTest {


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 com.google.earth.kml._2.ObjectFactory.createResponse(Lcom/google/earth/kml/_2/ResponseType;)Ljavax/xml/bind/JAXBElement;: root-Branch
   * 2 com.google.earth.kml._2.ObjectFactory.createResponseType()Lcom/google/earth/kml/_2/ResponseType;: root-Branch
   * 3 com.google.earth.kml._2.ObjectFactory.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ResponseType responseType0 = objectFactory0.createResponseType();
      JAXBElement<ResponseType> jAXBElement0 = objectFactory0.createResponse(responseType0);
      assertEquals(false, jAXBElement0.isTypeSubstituted());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 com.google.earth.kml._2.ObjectFactory.createStatusType()Lcom/google/earth/kml/_2/StatusType;: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      StatusType statusType0 = objectFactory0.createStatusType();
      assertEquals(0, statusType0.getCode());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 com.google.earth.kml._2.ObjectFactory.createKml(Lcom/google/earth/kml/_2/KmlType;)Ljavax/xml/bind/JAXBElement;: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      KmlType kmlType0 = new KmlType();
      JAXBElement<KmlType> jAXBElement0 = objectFactory0.createKml(kmlType0);
      assertEquals(false, jAXBElement0.isTypeSubstituted());
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 com.google.earth.kml._2.ObjectFactory.createKmlType()Lcom/google/earth/kml/_2/KmlType;: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      KmlType kmlType0 = objectFactory0.createKmlType();
      assertNotNull(kmlType0);
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 com.google.earth.kml._2.ObjectFactory.createPoint(Lcom/google/earth/kml/_2/PointType;)Ljavax/xml/bind/JAXBElement;: root-Branch
   * 2 com.google.earth.kml._2.ObjectFactory.createPointType()Lcom/google/earth/kml/_2/PointType;: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      PointType pointType0 = objectFactory0.createPointType();
      JAXBElement<PointType> jAXBElement0 = objectFactory0.createPoint(pointType0);
      assertEquals(false, jAXBElement0.isTypeSubstituted());
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 com.google.earth.kml._2.ObjectFactory.createPlacemarkType()Lcom/google/earth/kml/_2/PlacemarkType;: root-Branch
   * 2 com.google.earth.kml._2.ObjectFactory.<init>()V: root-Branch
   */
  @Test
  public void test5()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      PlacemarkType placemarkType0 = objectFactory0.createPlacemarkType();
      assertNull(placemarkType0.getId());
  }
}
