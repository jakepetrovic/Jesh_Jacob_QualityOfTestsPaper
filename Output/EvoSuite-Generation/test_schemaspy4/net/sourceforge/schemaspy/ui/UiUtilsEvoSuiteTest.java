/*
 * This file was automatically generated by EvoSuite
 */

package net.sourceforge.schemaspy.ui;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.awt.RenderingHints;
import javax.swing.JTable;
import javax.swing.table.TableColumn;
import net.sourceforge.schemaspy.ui.UiUtils;

public class UiUtilsEvoSuiteTest {


  //Test case number: 0
  /*
   * 1 covered goal:
   * 1 net.sourceforge.schemaspy.ui.UiUtils.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      UiUtils uiUtils0 = new UiUtils();
      assertNotNull(uiUtils0);
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 net.sourceforge.schemaspy.ui.UiUtils.getPreferredColumnWidth(Ljavax/swing/JTable;Ljavax/swing/table/TableColumn;)I: root-Branch
   * 2 net.sourceforge.schemaspy.ui.UiUtils.getPreferredColumnHeaderWidth(Ljavax/swing/JTable;Ljavax/swing/table/TableColumn;)I: I8 Branch 1 IFNONNULL L36 - false
   * 3 net.sourceforge.schemaspy.ui.UiUtils.getWidestCellInColumn(Ljavax/swing/JTable;Ljavax/swing/table/TableColumn;)I: I17 Branch 2 IF_ICMPGE L46 - true
   */
  @Test
  public void test1()  throws Throwable  {
      JTable jTable0 = new JTable();
      TableColumn tableColumn0 = new TableColumn();
      int int0 = UiUtils.getPreferredColumnWidth(jTable0, tableColumn0);
      assertEquals(0, int0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 net.sourceforge.schemaspy.ui.UiUtils.getWidestCellInColumn(Ljavax/swing/JTable;Ljavax/swing/table/TableColumn;)I: I17 Branch 2 IF_ICMPGE L46 - false
   * 2 net.sourceforge.schemaspy.ui.UiUtils.getWidestCellInColumn(Ljavax/swing/JTable;Ljavax/swing/table/TableColumn;)I: I17 Branch 2 IF_ICMPGE L46 - true
   */
  @Test
  public void test2()  throws Throwable  {
      Object[][] objectArray0 = new Object[2][4];
      Object[] objectArray1 = new Object[6];
      Object object0 = RenderingHints.VALUE_FRACTIONALMETRICS_OFF;
      objectArray1[0] = object0;
      objectArray1[1] = objectArray1[0];
      objectArray1[2] = objectArray1[0];
      objectArray1[3] = objectArray1[0];
      objectArray1[4] = objectArray1[3];
      objectArray1[5] = object0;
      JTable jTable0 = new JTable(objectArray0, objectArray1);
      TableColumn tableColumn0 = new TableColumn();
      int int0 = UiUtils.getWidestCellInColumn(jTable0, tableColumn0);
      assertEquals(2, int0);
  }
}
