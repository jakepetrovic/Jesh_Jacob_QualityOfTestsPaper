/*
 * This file was automatically generated by EvoSuite
 */

package ch.bluepenguin.tapestry.components.menu.model.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import ch.bluepenguin.tapestry.components.menu.model.IMenuItem;
import ch.bluepenguin.tapestry.components.menu.model.impl.DefaultMenuItem;
import ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList;
import java.util.Iterator;

public class MenuItemListEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.getChildrenIterator()Ljava/util/Iterator;: root-Branch
   * 2 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.<init>(Lch/bluepenguin/tapestry/components/menu/model/IMenuItem;)V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      MenuItemList menuItemList0 = new MenuItemList((IMenuItem) null);
      Iterator<Object> iterator0 = menuItemList0.getChildrenIterator();
      assertEquals(false, iterator0.hasNext());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.getChildrenSize()I: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      MenuItemList menuItemList0 = new MenuItemList((IMenuItem) null);
      int int0 = menuItemList0.getChildrenSize();
      assertEquals(0, int0);
  }

  //Test case number: 2
  /*
   * 6 covered goals:
   * 1 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.checkConsistency()Z: I43 Branch 5 IFNE L48 - true
   * 2 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.addChild(Lch/bluepenguin/tapestry/components/menu/model/impl/MenuItemList;)V: I4 Branch 1 IFNONNULL L23 - true
   * 3 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.getMenuItem()Lch/bluepenguin/tapestry/components/menu/model/IMenuItem;: root-Branch
   * 4 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.checkConsistency()Z: I13 Branch 2 IF_ICMPGE L43 - false
   * 5 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.checkConsistency()Z: I15 Branch 3 IFEQ L43 - false
   * 6 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.checkConsistency()Z: I23 Branch 4 IFNE L45 - true
   */
  @Test
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      DefaultMenuItem defaultMenuItem0 = new DefaultMenuItem(object0);
      MenuItemList menuItemList0 = new MenuItemList((IMenuItem) defaultMenuItem0);
      menuItemList0.addChild(menuItemList0);
      // Undeclared exception!
      try {
        menuItemList0.checkConsistency();
        fail("Expecting exception: StackOverflowError");
      } catch(StackOverflowError e) {
      }
  }

  //Test case number: 3
  /*
   * 7 covered goals:
   * 1 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.checkConsistency()Z: I13 Branch 2 IF_ICMPGE L43 - false
   * 2 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.checkConsistency()Z: I15 Branch 3 IFEQ L43 - false
   * 3 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.checkConsistency()Z: I23 Branch 4 IFNE L45 - true
   * 4 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.checkConsistency()Z: I43 Branch 5 IFNE L48 - false
   * 5 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.getMenuItem()Lch/bluepenguin/tapestry/components/menu/model/IMenuItem;: root-Branch
   * 6 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.checkConsistency()Z: I13 Branch 2 IF_ICMPGE L43 - true
   * 7 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.addChild(Lch/bluepenguin/tapestry/components/menu/model/impl/MenuItemList;)V: I4 Branch 1 IFNONNULL L23 - false
   */
  @Test
  public void test3()  throws Throwable  {
      MenuItemList menuItemList0 = new MenuItemList((IMenuItem) null);
      DefaultMenuItem defaultMenuItem0 = new DefaultMenuItem((Object) menuItemList0);
      MenuItemList menuItemList1 = new MenuItemList((IMenuItem) defaultMenuItem0);
      menuItemList0.addChild(menuItemList1);
      boolean boolean0 = menuItemList0.checkConsistency();
      assertEquals(1, menuItemList0.getChildrenSize());
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.toString()Ljava/lang/String;: I4 Branch 6 IFNONNULL L63 - true
   */
  @Test
  public void test4()  throws Throwable  {
      Object object0 = new Object();
      DefaultMenuItem defaultMenuItem0 = new DefaultMenuItem(object0);
      MenuItemList menuItemList0 = new MenuItemList((IMenuItem) defaultMenuItem0);
      String string0 = menuItemList0.toString();
      assertNotNull(string0);
      assertEquals("(0) null", string0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.toString()Ljava/lang/String;: I4 Branch 6 IFNONNULL L63 - false
   * 2 ch.bluepenguin.tapestry.components.menu.model.impl.MenuItemList.<init>(Lch/bluepenguin/tapestry/components/menu/model/IMenuItem;)V: root-Branch
   */
  @Test
  public void test5()  throws Throwable  {
      MenuItemList menuItemList0 = new MenuItemList((IMenuItem) null);
      String string0 = menuItemList0.toString();
      assertNotNull(string0);
      assertEquals("(0) null", string0);
  }
}
