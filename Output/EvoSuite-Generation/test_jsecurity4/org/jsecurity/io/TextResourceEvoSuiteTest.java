/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.io;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.io.InputStream;
import java.io.PipedInputStream;
import org.jsecurity.io.IniResource;
import org.jsecurity.io.ResourceException;

public class TextResourceEvoSuiteTest {


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 org.jsecurity.io.TextResource.<init>()V: root-Branch
   * 2 org.jsecurity.io.TextResource.setCharsetName(Ljava/lang/String;)V: root-Branch
   * 3 org.jsecurity.io.TextResource.load(Ljava/lang/String;)V: I3 Branch 1 IFNONNULL L71 - true
   */
  @Test
  public void test0()  throws Throwable  {
      IniResource iniResource0 = null;
      try {
        iniResource0 = new IniResource("XMTS0Cp/rxpHVvuMqVy", "XMTS0Cp/rxpHVvuMqVy");
        fail("Expecting exception: ResourceException");
      } catch(ResourceException e) {
        /*
         * Unable to load text resource from the resource path [XMTS0Cp/rxpHVvuMqVy]
         */
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.jsecurity.io.TextResource.load(Ljava/lang/String;)V: I3 Branch 1 IFNONNULL L71 - false
   */
  @Test
  public void test1()  throws Throwable  {
      IniResource iniResource0 = null;
      try {
        iniResource0 = new IniResource((String) null);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * 'resourcePath' argument cannot be null.
         */
      }
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 org.jsecurity.io.TextResource.doLoad(Ljava/io/InputStream;)V: I8 Branch 2 IFNULL L85 - true
   * 2 org.jsecurity.io.TextResource.<init>()V: root-Branch
   * 3 org.jsecurity.io.TextResource.getCharsetName()Ljava/lang/String;: root-Branch
   * 4 org.jsecurity.io.TextResource.doLoad(Ljava/io/BufferedReader;)V: root-Branch
   * 5 org.jsecurity.io.TextResource.load(Ljava/io/Reader;)V: I4 Branch 3 IFEQ L95 - true
   */
  @Test
  public void test2()  throws Throwable  {
      IniResource iniResource0 = new IniResource();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      iniResource0.load((InputStream) pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
  }
}
