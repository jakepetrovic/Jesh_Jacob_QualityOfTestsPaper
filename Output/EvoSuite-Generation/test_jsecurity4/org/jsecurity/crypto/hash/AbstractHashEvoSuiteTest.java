/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.crypto.hash;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import org.jsecurity.crypto.hash.Md2Hash;
import org.jsecurity.crypto.hash.Md5Hash;
import org.jsecurity.crypto.hash.Sha1Hash;
import org.jsecurity.crypto.hash.Sha384Hash;

public class AbstractHashEvoSuiteTest {


  //Test case number: 0
  /*
   * 9 covered goals:
   * 1 org.jsecurity.crypto.hash.AbstractHash.toBase64()Ljava/lang/String;: I4 Branch 5 IFNONNULL L240 - true
   * 2 org.jsecurity.crypto.hash.AbstractHash.toBase64()Ljava/lang/String;: I4 Branch 5 IFNONNULL L240 - false
   * 3 org.jsecurity.crypto.hash.AbstractHash.<init>(Ljava/lang/Object;Ljava/lang/Object;)V: root-Branch
   * 4 org.jsecurity.crypto.hash.AbstractHash.<init>(Ljava/lang/Object;Ljava/lang/Object;I)V: I32 Branch 1 IFNULL L121 - false
   * 5 org.jsecurity.crypto.hash.AbstractHash.getBytes()[B: root-Branch
   * 6 org.jsecurity.crypto.hash.AbstractHash.getDigest(Ljava/lang/String;)Ljava/security/MessageDigest;: root-Branch
   * 7 org.jsecurity.crypto.hash.AbstractHash.setBytes([B)V: root-Branch
   * 8 org.jsecurity.crypto.hash.AbstractHash.hash([B[BI)[B: I10 Branch 2 IFNULL L200 - false
   * 9 org.jsecurity.crypto.hash.AbstractHash.hash([B[BI)[B: I39 Branch 3 IF_ICMPGE L207 - true
   */
  @Test
  public void test0()  throws Throwable  {
      Sha384Hash sha384Hash0 = new Sha384Hash((Object) "\uFFFD\uFFFD\u0000\uFFFD", (Object) "UTF-8");
      assertNotNull(sha384Hash0);
      
      String string0 = sha384Hash0.toBase64();
      assertNotNull(string0);
      
      String string1 = sha384Hash0.toBase64();
      assertSame(string1, string0);
      assertEquals("phYnVn9E2vc0yKau4SOCB0yUFSDTX6ZXdJLJybWg/tekBsbDZACO+2jBuTkMDaad", string1);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 org.jsecurity.crypto.hash.AbstractHash.hash([B[B)[B: root-Branch
   * 2 org.jsecurity.crypto.hash.AbstractHash.<init>()V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      Sha1Hash sha1Hash0 = Sha1Hash.fromBase64String("");
      byte[] byteArray1 = sha1Hash0.hash(byteArray0, byteArray0);
      assertNotSame(byteArray0, byteArray1);
      assertNotNull(byteArray1);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * 1 org.jsecurity.crypto.hash.AbstractHash.hash([B)[B: root-Branch
   * 2 org.jsecurity.crypto.hash.AbstractHash.hash([B[BI)[B: I10 Branch 2 IFNULL L200 - true
   */
  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      Sha1Hash sha1Hash0 = new Sha1Hash();
      byte[] byteArray1 = sha1Hash0.hash(byteArray0);
      assertNotSame(byteArray1, byteArray0);
      assertNotNull(byteArray1);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 org.jsecurity.crypto.hash.AbstractHash.toString()Ljava/lang/String;: root-Branch
   * 2 org.jsecurity.crypto.hash.AbstractHash.toHex()Ljava/lang/String;: I4 Branch 4 IFNONNULL L224 - false
   */
  @Test
  public void test3()  throws Throwable  {
      Md2Hash md2Hash0 = new Md2Hash();
      // Undeclared exception!
      try {
        md2Hash0.toString();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * 1 org.jsecurity.crypto.hash.AbstractHash.hash([B[BI)[B: I39 Branch 3 IF_ICMPGE L207 - false
   * 2 org.jsecurity.crypto.hash.AbstractHash.hash([B[BI)[B: I10 Branch 2 IFNULL L200 - false
   * 3 org.jsecurity.crypto.hash.AbstractHash.<init>(Ljava/lang/Object;)V: root-Branch
   * 4 org.jsecurity.crypto.hash.AbstractHash.<init>(Ljava/lang/Object;Ljava/lang/Object;I)V: I32 Branch 1 IFNULL L121 - true
   */
  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      Sha1Hash sha1Hash0 = new Sha1Hash((Object) "UTF-8");
      assertNotNull(sha1Hash0);
      
      byte[] byteArray1 = sha1Hash0.hash(byteArray0, byteArray0, 90);
      assertNotSame(byteArray0, byteArray1);
      assertNotNull(byteArray1);
      assertEquals("663b90c899fa25a111067be0c22ffc64dcf581c2", sha1Hash0.toString());
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 org.jsecurity.crypto.hash.AbstractHash.toHex()Ljava/lang/String;: I4 Branch 4 IFNONNULL L224 - true
   * 2 org.jsecurity.crypto.hash.AbstractHash.hashCode()I: root-Branch
   * 3 org.jsecurity.crypto.hash.AbstractHash.toHex()Ljava/lang/String;: I4 Branch 4 IFNONNULL L224 - false
   */
  @Test
  public void test5()  throws Throwable  {
      Md5Hash md5Hash0 = Md5Hash.fromBase64String("UTF-8");
      String string0 = md5Hash0.toHex();
      assertNotNull(string0);
      
      int int0 = md5Hash0.hashCode();
      assertEquals(1564165766, int0);
  }

  //Test case number: 6
  /*
   * 7 covered goals:
   * 1 org.jsecurity.crypto.hash.AbstractHash.equals(Ljava/lang/Object;)Z: I4 Branch 6 IFEQ L265 - true
   * 2 org.jsecurity.crypto.hash.AbstractHash.getDigest(Ljava/lang/String;)Ljava/security/MessageDigest;: root-Branch
   * 3 org.jsecurity.crypto.hash.AbstractHash.setBytes([B)V: root-Branch
   * 4 org.jsecurity.crypto.hash.AbstractHash.<init>(Ljava/lang/Object;)V: root-Branch
   * 5 org.jsecurity.crypto.hash.AbstractHash.hash([B[BI)[B: I10 Branch 2 IFNULL L200 - true
   * 6 org.jsecurity.crypto.hash.AbstractHash.hash([B[BI)[B: I39 Branch 3 IF_ICMPGE L207 - true
   * 7 org.jsecurity.crypto.hash.AbstractHash.<init>(Ljava/lang/Object;Ljava/lang/Object;I)V: I32 Branch 1 IFNULL L121 - true
   */
  @Test
  public void test6()  throws Throwable  {
      Md5Hash md5Hash0 = new Md5Hash((Object) "\u0000\uFFFD\uFFFD\u0000_\uFFFD");
      assertNotNull(md5Hash0);
      
      boolean boolean0 = md5Hash0.equals((Object) "\u0000\uFFFD\uFFFD\u0000_\uFFFD");
      assertEquals(false, boolean0);
      assertEquals("578f12cb5941754c316e88e0ec9b7c07", md5Hash0.toHex());
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 org.jsecurity.crypto.hash.AbstractHash.equals(Ljava/lang/Object;)Z: I4 Branch 6 IFEQ L265 - false
   * 2 org.jsecurity.crypto.hash.AbstractHash.<init>()V: root-Branch
   * 3 org.jsecurity.crypto.hash.AbstractHash.getBytes()[B: root-Branch
   */
  @Test
  public void test7()  throws Throwable  {
      Md2Hash md2Hash0 = new Md2Hash();
      boolean boolean0 = md2Hash0.equals((Object) md2Hash0);
      assertEquals(true, boolean0);
  }
}
