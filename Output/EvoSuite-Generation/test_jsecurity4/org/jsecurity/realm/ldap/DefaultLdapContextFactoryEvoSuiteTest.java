/*
 * This file was automatically generated by EvoSuite
 */

package org.jsecurity.realm.ldap;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import java.util.HashMap;
import java.util.Map;
import javax.naming.ConfigurationException;
import javax.naming.NamingException;
import org.jsecurity.realm.ldap.DefaultLdapContextFactory;

public class DefaultLdapContextFactoryEvoSuiteTest {


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getSystemLdapContext()Ljavax/naming/ldap/LdapContext;: root-Branch
   * 2 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I4 Branch 1 IFNONNULL L203 - false
   * 3 org.jsecurity.realm.ldap.DefaultLdapContextFactory.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      DefaultLdapContextFactory defaultLdapContextFactory0 = new DefaultLdapContextFactory();
      // Undeclared exception!
      try {
        defaultLdapContextFactory0.getSystemLdapContext();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * A search base must be specified.
         */
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 org.jsecurity.realm.ldap.DefaultLdapContextFactory.setSystemPassword(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      DefaultLdapContextFactory defaultLdapContextFactory0 = new DefaultLdapContextFactory();
      defaultLdapContextFactory0.setSystemPassword("");
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 org.jsecurity.realm.ldap.DefaultLdapContextFactory.setAuthentication(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      DefaultLdapContextFactory defaultLdapContextFactory0 = new DefaultLdapContextFactory();
      defaultLdapContextFactory0.setAuthentication("");
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 org.jsecurity.realm.ldap.DefaultLdapContextFactory.setReferral(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      DefaultLdapContextFactory defaultLdapContextFactory0 = new DefaultLdapContextFactory();
      defaultLdapContextFactory0.setReferral("Discoverin a og implementation...");
  }

  //Test case number: 4
  /*
   * 12 covered goals:
   * 1 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I107 Branch 7 IFEQ L228 - true
   * 2 org.jsecurity.realm.ldap.DefaultLdapContextFactory.setUsePooling(Z)V: root-Branch
   * 3 org.jsecurity.realm.ldap.DefaultLdapContextFactory.setUrl(Ljava/lang/String;)V: root-Branch
   * 4 org.jsecurity.realm.ldap.DefaultLdapContextFactory.setSearchBase(Ljava/lang/String;)V: root-Branch
   * 5 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I4 Branch 1 IFNONNULL L203 - true
   * 6 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I16 Branch 2 IFNONNULL L206 - true
   * 7 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I27 Branch 3 IFNULL L210 - false
   * 8 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I30 Branch 4 IFNULL L210 - true
   * 9 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I60 Branch 5 IFNULL L217 - false
   * 10 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I71 Branch 6 IFNULL L220 - false
   * 11 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I126 Branch 10 IFNULL L233 - true
   * 12 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I137 Branch 11 IFEQ L237 - true
   */
  @Test
  public void test4()  throws Throwable  {
      DefaultLdapContextFactory defaultLdapContextFactory0 = new DefaultLdapContextFactory();
      defaultLdapContextFactory0.setUsePooling(false);
      defaultLdapContextFactory0.setSearchBase("");
      defaultLdapContextFactory0.setUrl("");
      try {
        defaultLdapContextFactory0.getLdapContext("", "");
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * java.naming.provider.url property does not contain a URL
         */
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 org.jsecurity.realm.ldap.DefaultLdapContextFactory.setContextFactoryClassName(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test5()  throws Throwable  {
      DefaultLdapContextFactory defaultLdapContextFactory0 = new DefaultLdapContextFactory();
      defaultLdapContextFactory0.setContextFactoryClassName("");
  }

  //Test case number: 6
  /*
   * 7 covered goals:
   * 1 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I126 Branch 10 IFNULL L233 - false
   * 2 org.jsecurity.realm.ldap.DefaultLdapContextFactory.setAdditionalEnvironment(Ljava/util/Map;)V: root-Branch
   * 3 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I27 Branch 3 IFNULL L210 - true
   * 4 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I60 Branch 5 IFNULL L217 - true
   * 5 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I71 Branch 6 IFNULL L220 - true
   * 6 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I107 Branch 7 IFEQ L228 - false
   * 7 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I109 Branch 8 IFNULL L228 - true
   */
  @Test
  public void test6()  throws Throwable  {
      DefaultLdapContextFactory defaultLdapContextFactory0 = new DefaultLdapContextFactory();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      defaultLdapContextFactory0.setAdditionalEnvironment((Map<String, String>) hashMap0);
      defaultLdapContextFactory0.setUrl("jC&i>el`qP8'!|?,#7v");
      defaultLdapContextFactory0.setSearchBase("jC&i>el`qP8'!|?,#7v");
      try {
        defaultLdapContextFactory0.getSystemLdapContext();
        fail("Expecting exception: NamingException");
      } catch(NamingException e) {
        /*
         * Cannot parse url: jC&i>el`qP8'!|?,#7v
         */
      }
  }

  //Test case number: 7
  /*
   * 8 covered goals:
   * 1 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I16 Branch 2 IFNONNULL L206 - true
   * 2 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I27 Branch 3 IFNULL L210 - true
   * 3 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I60 Branch 5 IFNULL L217 - true
   * 4 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I71 Branch 6 IFNULL L220 - true
   * 5 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I107 Branch 7 IFEQ L228 - false
   * 6 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I109 Branch 8 IFNULL L228 - true
   * 7 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I126 Branch 10 IFNULL L233 - true
   * 8 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I137 Branch 11 IFEQ L237 - true
   */
  @Test
  public void test7()  throws Throwable  {
      DefaultLdapContextFactory defaultLdapContextFactory0 = new DefaultLdapContextFactory();
      defaultLdapContextFactory0.setUrl("jC&i>el`qP8'!|?,#7v");
      defaultLdapContextFactory0.setSearchBase("jC&i>el`qP8'!|?,#7v");
      try {
        defaultLdapContextFactory0.getSystemLdapContext();
        fail("Expecting exception: NamingException");
      } catch(NamingException e) {
        /*
         * Cannot parse url: jC&i>el`qP8'!|?,#7v
         */
      }
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * 1 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I4 Branch 1 IFNONNULL L203 - true
   * 2 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I16 Branch 2 IFNONNULL L206 - false
   */
  @Test
  public void test8()  throws Throwable  {
      DefaultLdapContextFactory defaultLdapContextFactory0 = new DefaultLdapContextFactory();
      defaultLdapContextFactory0.setSearchBase("jC&i>el`qP8'!|?,#7v");
      // Undeclared exception!
      try {
        defaultLdapContextFactory0.getSystemLdapContext();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * An LDAP URL must be specified of the form ldap://<hostname>:<port>
         */
      }
  }

  //Test case number: 9
  /*
   * 6 covered goals:
   * 1 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I27 Branch 3 IFNULL L210 - false
   * 2 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I30 Branch 4 IFNULL L210 - true
   * 3 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I60 Branch 5 IFNULL L217 - false
   * 4 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I109 Branch 8 IFNULL L228 - false
   * 5 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I114 Branch 9 IFLE L228 - false
   * 6 org.jsecurity.realm.ldap.DefaultLdapContextFactory.setSystemUsername(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test9()  throws Throwable  {
      DefaultLdapContextFactory defaultLdapContextFactory0 = new DefaultLdapContextFactory();
      defaultLdapContextFactory0.setUrl("jC&i>el`qP8'!|?,#7v");
      defaultLdapContextFactory0.setSearchBase("jC&i>el`qP8'!|?,#7v");
      defaultLdapContextFactory0.setSystemUsername("jC&i>el`qP8'!|?,#7v");
      try {
        defaultLdapContextFactory0.getSystemLdapContext();
        fail("Expecting exception: NamingException");
      } catch(NamingException e) {
        /*
         * Cannot parse url: jC&i>el`qP8'!|?,#7v
         */
      }
  }

  //Test case number: 10
  /*
   * 6 covered goals:
   * 1 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I30 Branch 4 IFNULL L210 - false
   * 2 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I114 Branch 9 IFLE L228 - true
   * 3 org.jsecurity.realm.ldap.DefaultLdapContextFactory.setSystemUsername(Ljava/lang/String;)V: root-Branch
   * 4 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getSystemLdapContext()Ljavax/naming/ldap/LdapContext;: root-Branch
   * 5 org.jsecurity.realm.ldap.DefaultLdapContextFactory.setPrincipalSuffix(Ljava/lang/String;)V: root-Branch
   * 6 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I71 Branch 6 IFNULL L220 - true
   */
  @Test
  public void test10()  throws Throwable  {
      DefaultLdapContextFactory defaultLdapContextFactory0 = new DefaultLdapContextFactory();
      defaultLdapContextFactory0.setUrl("jC&i>el`qP8'!|?,#7v");
      defaultLdapContextFactory0.setSearchBase("jC&i>el`qP8'!|?,#7v");
      defaultLdapContextFactory0.setSystemUsername("jC&i>el`qP8'!|?,#7v");
      defaultLdapContextFactory0.setPrincipalSuffix("jC&i>el`qP8'!|?,#7v");
      try {
        defaultLdapContextFactory0.getSystemLdapContext();
        fail("Expecting exception: NamingException");
      } catch(NamingException e) {
        /*
         * Cannot parse url: jC&i>el`qP8'!|?,#7v
         */
      }
  }

  //Test case number: 11
  /*
   * 14 covered goals:
   * 1 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I71 Branch 6 IFNULL L220 - false
   * 2 org.jsecurity.realm.ldap.DefaultLdapContextFactory.<init>()V: root-Branch
   * 3 org.jsecurity.realm.ldap.DefaultLdapContextFactory.setUrl(Ljava/lang/String;)V: root-Branch
   * 4 org.jsecurity.realm.ldap.DefaultLdapContextFactory.setSearchBase(Ljava/lang/String;)V: root-Branch
   * 5 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I4 Branch 1 IFNONNULL L203 - true
   * 6 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I16 Branch 2 IFNONNULL L206 - true
   * 7 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I27 Branch 3 IFNULL L210 - false
   * 8 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I30 Branch 4 IFNULL L210 - true
   * 9 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I60 Branch 5 IFNULL L217 - false
   * 10 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I107 Branch 7 IFEQ L228 - false
   * 11 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I109 Branch 8 IFNULL L228 - false
   * 12 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I114 Branch 9 IFLE L228 - true
   * 13 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I126 Branch 10 IFNULL L233 - true
   * 14 org.jsecurity.realm.ldap.DefaultLdapContextFactory.getLdapContext(Ljava/lang/String;Ljava/lang/String;)Ljavax/naming/ldap/LdapContext;: I137 Branch 11 IFEQ L237 - true
   */
  @Test
  public void test11()  throws Throwable  {
      DefaultLdapContextFactory defaultLdapContextFactory0 = new DefaultLdapContextFactory();
      defaultLdapContextFactory0.setSearchBase("");
      defaultLdapContextFactory0.setUrl("");
      try {
        defaultLdapContextFactory0.getLdapContext("", "");
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * java.naming.provider.url property does not contain a URL
         */
      }
  }
}
