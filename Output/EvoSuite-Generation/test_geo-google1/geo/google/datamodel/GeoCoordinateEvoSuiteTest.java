/*
 * This file was automatically generated by EvoSuite
 */

package geo.google.datamodel;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import geo.google.datamodel.GeoAltitude;
import geo.google.datamodel.GeoCoordinate;

public class GeoCoordinateEvoSuiteTest {


  //Test case number: 0
  /*
   * 2 covered goals:
   * 1 geo.google.datamodel.GeoCoordinate.setLongitude(D)V: root-Branch
   * 2 geo.google.datamodel.GeoCoordinate.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      GeoCoordinate geoCoordinate0 = new GeoCoordinate();
      geoCoordinate0.setLongitude((-1746.4311736430652));
      assertEquals((-1746.4311736430652), geoCoordinate0.getLongitude(), 0.01D);
      assertEquals((-1.0), geoCoordinate0.getLatitude(), 0.01D);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 geo.google.datamodel.GeoCoordinate.getAltitude()Lgeo/google/datamodel/GeoAltitude;: root-Branch
   * 2 geo.google.datamodel.GeoCoordinate.<init>(DDLgeo/google/datamodel/GeoAltitude;)V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude();
      GeoCoordinate geoCoordinate0 = new GeoCoordinate((-1113.174370830259), 1025.8464427494898, geoAltitude0);
      GeoAltitude geoAltitude1 = geoCoordinate0.getAltitude();
      assertEquals((-1113.174370830259), geoCoordinate0.getLongitude(), 0.01D);
      assertNotNull(geoAltitude1);
      assertEquals(1025.8464427494898, geoCoordinate0.getLatitude(), 0.01D);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 geo.google.datamodel.GeoCoordinate.toString()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude(1023.8162183115322);
      GeoCoordinate geoCoordinate0 = new GeoCoordinate(1023.8162183115322, (-1.0), geoAltitude0);
      // Undeclared exception!
      try {
        geoCoordinate0.toString();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * org/apache/commons/lang/builder/ToStringBuilder
         */
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 geo.google.datamodel.GeoCoordinate.setLatitude(D)V: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude();
      GeoCoordinate geoCoordinate0 = new GeoCoordinate((-1113.174370830259), 1025.8464427494898, geoAltitude0);
      geoCoordinate0.setLatitude(0.0);
      assertEquals(0.0, geoCoordinate0.getLatitude(), 0.01D);
      assertEquals((-1113.174370830259), geoCoordinate0.getLongitude(), 0.01D);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 geo.google.datamodel.GeoCoordinate.equals(Ljava/lang/Object;)Z: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude();
      GeoCoordinate geoCoordinate0 = new GeoCoordinate((-1945.3748923884839), (-1945.3748923884839), geoAltitude0);
      // Undeclared exception!
      try {
        geoCoordinate0.equals((Object) "ABSOLUTE");
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * org/apache/commons/lang/builder/EqualsBuilder
         */
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * 1 geo.google.datamodel.GeoCoordinate.clone()Lgeo/google/datamodel/GeoCoordinate;: root-Branch
   */
  @Test
  public void test5()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude();
      GeoCoordinate geoCoordinate0 = new GeoCoordinate((-1113.174370830259), 1025.8464427494898, geoAltitude0);
      GeoCoordinate geoCoordinate1 = geoCoordinate0.clone();
      assertNotNull(geoCoordinate1);
      assertEquals(1025.8464427494898, geoCoordinate1.getLatitude(), 0.01D);
      assertEquals((-1113.174370830259), geoCoordinate0.getLongitude(), 0.01D);
      assertEquals(1025.8464427494898, geoCoordinate0.getLatitude(), 0.01D);
      assertEquals((-1113.174370830259), geoCoordinate1.getLongitude(), 0.01D);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * 1 geo.google.datamodel.GeoCoordinate.setAltitude(Lgeo/google/datamodel/GeoAltitude;)V: root-Branch
   */
  @Test
  public void test6()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude();
      GeoCoordinate geoCoordinate0 = new GeoCoordinate((-1113.174370830259), 1025.8464427494898, geoAltitude0);
      geoCoordinate0.setAltitude(geoAltitude0);
      assertEquals(1025.8464427494898, geoCoordinate0.getLatitude(), 0.01D);
      assertEquals((-1113.174370830259), geoCoordinate0.getLongitude(), 0.01D);
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 geo.google.datamodel.GeoCoordinate.distanceTo(Lgeo/google/datamodel/GeoCoordinate;)D: root-Branch
   * 2 geo.google.datamodel.GeoCoordinate.getLatitude()D: root-Branch
   * 3 geo.google.datamodel.GeoCoordinate.getLongitude()D: root-Branch
   */
  @Test
  public void test7()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude((-732.7884520994596));
      GeoCoordinate geoCoordinate0 = new GeoCoordinate((-732.7884520994596), (-732.7884520994596), geoAltitude0);
      double double0 = geoCoordinate0.distanceTo(geoCoordinate0);
      assertEquals((-732.7884520994596), geoCoordinate0.getLongitude(), 0.01D);
      assertEquals(5.898722121952262E-5, double0, 0.01D);
      assertEquals((-732.7884520994596), geoCoordinate0.getLatitude(), 0.01D);
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * 1 geo.google.datamodel.GeoCoordinate.hashCode()I: root-Branch
   * 2 geo.google.datamodel.GeoCoordinate.<init>(DDLgeo/google/datamodel/GeoAltitude;)V: root-Branch
   */
  @Test
  public void test8()  throws Throwable  {
      GeoAltitude geoAltitude0 = new GeoAltitude();
      GeoCoordinate geoCoordinate0 = new GeoCoordinate((-1113.174370830259), 1025.8464427494898, geoAltitude0);
      // Undeclared exception!
      try {
        geoCoordinate0.hashCode();
        fail("Expecting exception: NoClassDefFoundError");
      } catch(NoClassDefFoundError e) {
        /*
         * org/apache/commons/lang/builder/HashCodeBuilder
         */
      }
  }
}
