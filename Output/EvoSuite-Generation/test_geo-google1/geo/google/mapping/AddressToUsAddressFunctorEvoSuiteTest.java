/*
 * This file was automatically generated by EvoSuite
 */

package geo.google.mapping;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import geo.google.datamodel.GeoAddress;
import geo.google.datamodel.GeoCoordinate;
import geo.google.datamodel.GeoUsAddress;
import geo.google.mapping.AddressToUsAddressFunctor;
import oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails;

public class AddressToUsAddressFunctorEvoSuiteTest {


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 geo.google.mapping.AddressToUsAddressFunctor.execute(Lgeo/google/datamodel/GeoAddress;)Lgeo/google/datamodel/GeoUsAddress;: I194 Branch 14 IFNULL L87 - false
   * 2 geo.google.mapping.AddressToUsAddressFunctor.getInstance()Lgeo/google/mapping/AddressToUsAddressFunctor;: root-Branch
   * 3 geo.google.mapping.AddressToUsAddressFunctor.execute(Lgeo/google/datamodel/GeoAddress;)Lgeo/google/datamodel/GeoUsAddress;: I15 Branch 1 IFNULL L36 - true
   * 4 geo.google.mapping.AddressToUsAddressFunctor.execute(Lgeo/google/datamodel/GeoAddress;)Lgeo/google/datamodel/GeoUsAddress;: I194 Branch 14 IFNULL L87 - true
   */
  @Test
  public void test0()  throws Throwable  {
      AddressToUsAddressFunctor addressToUsAddressFunctor0 = AddressToUsAddressFunctor.getInstance();
      GeoAddress geoAddress0 = new GeoAddress();
      AddressDetails addressDetails0 = new AddressDetails();
      geoAddress0.setAddressDetails(addressDetails0);
      GeoUsAddress geoUsAddress0 = addressToUsAddressFunctor0.execute(geoAddress0);
      GeoCoordinate geoCoordinate0 = geoUsAddress0.getCoordinate();
      geoAddress0.setCoordinate(geoCoordinate0);
      GeoUsAddress geoUsAddress1 = addressToUsAddressFunctor0.execute(geoAddress0);
      assertEquals("", geoUsAddress1.getCounty());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 geo.google.mapping.AddressToUsAddressFunctor.<init>()V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      AddressToUsAddressFunctor addressToUsAddressFunctor0 = new AddressToUsAddressFunctor();
      assertNotNull(addressToUsAddressFunctor0);
  }
}
