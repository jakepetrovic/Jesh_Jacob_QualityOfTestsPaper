/*
 * This file was automatically generated by EvoSuite
 */

package com.allenstudio.ir.ui.calendar;

import org.junit.Test;
import org.junit.runner.RunWith;
import static org.junit.Assert.*;
import com.allenstudio.ir.ui.calendar.IMonthlyCalendarModel;
import com.allenstudio.ir.ui.calendar.MonthlyCalendar;
import com.allenstudio.ir.ui.calendar.MonthlyCalendarModel;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.util.GregorianCalendar;
import javax.swing.JComponent;

public class MonthlyCalendarEvoSuiteTest {


  //Test case number: 0
  /*
   * 13 covered goals:
   * 1 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setModel(Lcom/allenstudio/ir/ui/calendar/IMonthlyCalendarModel;)V: root-Branch
   * 2 com.allenstudio.ir.ui.calendar.MonthlyCalendar.getModel()Lcom/allenstudio/ir/ui/calendar/IMonthlyCalendarModel;: root-Branch
   * 3 com.allenstudio.ir.ui.calendar.MonthlyCalendar.<init>()V: root-Branch
   * 4 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setYearMonth(Ljava/util/Calendar;)V: I19 Branch 12 IF_ICMPNE L246 - true
   * 5 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setYearMonth(Ljava/util/Calendar;)V: I65 Branch 14 IFEQ L256 - false
   * 6 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setYearMonth(Ljava/util/Calendar;)V: I88 Branch 15 IF_ICMPGE L261 - true
   * 7 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setYearMonth(Ljava/util/Calendar;)V: I88 Branch 15 IF_ICMPGE L261 - false
   * 8 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setYearMonth(Ljava/util/Calendar;)V: I107 Branch 16 IF_ICMPGE L264 - true
   * 9 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setYearMonth(Ljava/util/Calendar;)V: I107 Branch 16 IF_ICMPGE L264 - false
   * 10 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setYearMonth(Ljava/util/Calendar;)V: I132 Branch 17 IF_ICMPGE L267 - true
   * 11 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setYearMonth(Ljava/util/Calendar;)V: I132 Branch 17 IF_ICMPGE L267 - false
   * 12 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setMouseListeningEnabled(Z)V: I3 Branch 1 IFEQ L176 - false
   * 13 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setMouseListeningEnabled(Z)V: I6 Branch 2 IFNE L176 - false
   */
  @Test
  public void test0()  throws Throwable  {
      MonthlyCalendar monthlyCalendar0 = new MonthlyCalendar();
      assertNotNull(monthlyCalendar0);
      
      MonthlyCalendarModel monthlyCalendarModel0 = (MonthlyCalendarModel)monthlyCalendar0.getModel();
      assertNotNull(monthlyCalendarModel0);
      
      monthlyCalendar0.setModel((IMonthlyCalendarModel) monthlyCalendarModel0);
      assertEquals(2015, monthlyCalendar0.getYear());
      assertEquals(true, monthlyCalendar0.getMouseListeningEnabled());
      assertEquals(6, monthlyCalendar0.getMonth());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * 1 com.allenstudio.ir.ui.calendar.MonthlyCalendar.getHeaderForeground()Ljava/awt/Color;: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      MonthlyCalendar monthlyCalendar0 = new MonthlyCalendar();
      assertNotNull(monthlyCalendar0);
      
      Color color0 = monthlyCalendar0.getHeaderForeground();
      assertEquals(true, monthlyCalendar0.getMouseListeningEnabled());
      assertEquals(6, monthlyCalendar0.getMonth());
      assertNotNull(color0);
      assertEquals("com.allenstudio.ir.ui.calendar.MonthlyCalendar[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=java.awt.Dimension[width=189,height=140]]", monthlyCalendar0.toString());
      assertEquals(2015, monthlyCalendar0.getYear());
      assertEquals(216, color0.getRed());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * 1 com.allenstudio.ir.ui.calendar.MonthlyCalendar.getHighlightBackground()Ljava/awt/Color;: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      MonthlyCalendar monthlyCalendar0 = new MonthlyCalendar();
      assertNotNull(monthlyCalendar0);
      
      Color color0 = monthlyCalendar0.getHighlightBackground();
      assertEquals("com.allenstudio.ir.ui.calendar.MonthlyCalendar[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=java.awt.Dimension[width=189,height=140]]", monthlyCalendar0.toString());
      assertEquals(6, monthlyCalendar0.getMonth());
      assertEquals(2015, monthlyCalendar0.getYear());
      assertEquals(84, color0.getGreen());
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * 1 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setYear(I)V: I4 Branch 5 IF_ICMPGE L201 - false
   */
  @Test
  public void test3()  throws Throwable  {
      MonthlyCalendar monthlyCalendar0 = new MonthlyCalendar();
      assertNotNull(monthlyCalendar0);
      
      // Undeclared exception!
      try {
        monthlyCalendar0.setYear(1079);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Year must be later than 1970!
         */
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * 1 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setMonth(I)V: I4 Branch 7 IF_ICMPLT L216 - true
   */
  @Test
  public void test4()  throws Throwable  {
      MonthlyCalendar monthlyCalendar0 = new MonthlyCalendar();
      assertNotNull(monthlyCalendar0);
      
      // Undeclared exception!
      try {
        monthlyCalendar0.setMonth(0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Invalid month specified!
         */
      }
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setCellDimension(Ljava/awt/Dimension;)V: I4 Branch 18 IFNULL L374 - true
   * 2 com.allenstudio.ir.ui.calendar.MonthlyCalendar.resize()V: I8 Branch 19 IFNULL L400 - true
   * 3 com.allenstudio.ir.ui.calendar.MonthlyCalendar.resize()V: I63 Branch 20 IFNONNULL L409 - false
   */
  @Test
  public void test5()  throws Throwable  {
      MonthlyCalendar monthlyCalendar0 = new MonthlyCalendar();
      assertNotNull(monthlyCalendar0);
      
      Dimension dimension0 = monthlyCalendar0.getMinimumSize();
      monthlyCalendar0.setCellDimension(dimension0);
      assertEquals("com.allenstudio.ir.ui.calendar.MonthlyCalendar[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=java.awt.Dimension[width=0,height=0]]", monthlyCalendar0.toString());
      assertEquals(6, monthlyCalendar0.getMonth());
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setHeaderComponent(Ljavax/swing/JComponent;)V: I12 Branch 21 IFNULL L439 - true
   * 2 com.allenstudio.ir.ui.calendar.MonthlyCalendar.resize()V: I8 Branch 19 IFNULL L400 - true
   * 3 com.allenstudio.ir.ui.calendar.MonthlyCalendar.resize()V: I63 Branch 20 IFNONNULL L409 - false
   */
  @Test
  public void test6()  throws Throwable  {
      MonthlyCalendar monthlyCalendar0 = new MonthlyCalendar();
      assertNotNull(monthlyCalendar0);
      
      monthlyCalendar0.setHeaderComponent((JComponent) null);
      assertEquals(2015, monthlyCalendar0.getYear());
      assertEquals(6, monthlyCalendar0.getMonth());
      assertEquals("com.allenstudio.ir.ui.calendar.MonthlyCalendar[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=java.awt.Dimension[width=189,height=140]]", monthlyCalendar0.toString());
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 com.allenstudio.ir.ui.calendar.MonthlyCalendar.getSelectedDate()Ljava/util/Calendar;: I34 Branch 41 IF_ICMPLE L561 - false
   * 2 com.allenstudio.ir.ui.calendar.MonthlyCalendar.getDayOfMonth(II)I: I58 Branch 57 IFNE L704 - true
   * 3 com.allenstudio.ir.ui.calendar.MonthlyCalendar.getDayOfMonth(II)I: I67 Branch 59 IFNE L704 - true
   */
  @Test
  public void test7()  throws Throwable  {
      MonthlyCalendar monthlyCalendar0 = new MonthlyCalendar();
      assertNotNull(monthlyCalendar0);
      
      GregorianCalendar gregorianCalendar0 = (GregorianCalendar)monthlyCalendar0.getSelectedDate();
      assertEquals(30, monthlyCalendar0.getSelectedDay());
      assertEquals(1435724018072L, gregorianCalendar0.getTimeInMillis());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * 1 com.allenstudio.ir.ui.calendar.MonthlyCalendar.mouseReleased(Ljava/awt/event/MouseEvent;)V: I5 Branch 48 IF_ACMPEQ L640 - true
   */
  @Test
  public void test8()  throws Throwable  {
      MonthlyCalendar monthlyCalendar0 = new MonthlyCalendar();
      assertNotNull(monthlyCalendar0);
      
      MouseEvent mouseEvent0 = new MouseEvent((Component) monthlyCalendar0, 0, 154L, (-1), 0, 1804, 1804, true, 0);
      monthlyCalendar0.mouseReleased(mouseEvent0);
      assertEquals(6, monthlyCalendar0.getMonth());
      assertEquals("com.allenstudio.ir.ui.calendar.MonthlyCalendar[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=java.awt.Dimension[width=189,height=140]]", monthlyCalendar0.toString());
      assertEquals(2015, monthlyCalendar0.getYear());
      assertEquals(true, monthlyCalendar0.getMouseListeningEnabled());
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 com.allenstudio.ir.ui.calendar.MonthlyCalendar.mouseMoved(Ljava/awt/event/MouseEvent;)V: I5 Branch 49 IF_ACMPEQ L652 - true
   * 2 com.allenstudio.ir.ui.calendar.MonthlyCalendar.mousePositionChanged(Ljava/awt/event/MouseEvent;)V: I36 Branch 51 IFLT L678 - false
   * 3 com.allenstudio.ir.ui.calendar.MonthlyCalendar.mousePositionChanged(Ljava/awt/event/MouseEvent;)V: I39 Branch 52 IF_ICMPGE L678 - false
   * 4 com.allenstudio.ir.ui.calendar.MonthlyCalendar.mousePositionChanged(Ljava/awt/event/MouseEvent;)V: I41 Branch 53 IFLT L678 - true
   * 5 com.allenstudio.ir.ui.calendar.MonthlyCalendar.mousePositionChanged(Ljava/awt/event/MouseEvent;)V: I50 Branch 55 IF_ICMPEQ L679 - true
   */
  @Test
  public void test9()  throws Throwable  {
      MonthlyCalendar monthlyCalendar0 = new MonthlyCalendar();
      assertNotNull(monthlyCalendar0);
      
      MouseEvent mouseEvent0 = new MouseEvent((Component) monthlyCalendar0, 0, (-1188L), 0, 1, (-500), (-500), false);
      monthlyCalendar0.mouseMoved(mouseEvent0);
      assertEquals(6, monthlyCalendar0.getMonth());
      assertEquals(true, monthlyCalendar0.getMouseListeningEnabled());
      assertEquals("com.allenstudio.ir.ui.calendar.MonthlyCalendar[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=java.awt.Dimension[width=189,height=140]]", monthlyCalendar0.toString());
      assertEquals(2015, monthlyCalendar0.getYear());
  }

  //Test case number: 10
  /*
   * 17 covered goals:
   * 1 com.allenstudio.ir.ui.calendar.MonthlyCalendar.mousePositionChanged(Ljava/awt/event/MouseEvent;)V: I41 Branch 53 IFLT L678 - false
   * 2 com.allenstudio.ir.ui.calendar.MonthlyCalendar.mousePositionChanged(Ljava/awt/event/MouseEvent;)V: I44 Branch 54 IF_ICMPLT L678 - false
   * 3 com.allenstudio.ir.ui.calendar.MonthlyCalendar.<init>()V: root-Branch
   * 4 com.allenstudio.ir.ui.calendar.MonthlyCalendar.mouseMoved(Ljava/awt/event/MouseEvent;)V: I5 Branch 49 IF_ACMPEQ L652 - true
   * 5 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setYearMonth(Ljava/util/Calendar;)V: I19 Branch 12 IF_ICMPNE L246 - true
   * 6 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setYearMonth(Ljava/util/Calendar;)V: I65 Branch 14 IFEQ L256 - false
   * 7 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setYearMonth(Ljava/util/Calendar;)V: I88 Branch 15 IF_ICMPGE L261 - true
   * 8 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setYearMonth(Ljava/util/Calendar;)V: I88 Branch 15 IF_ICMPGE L261 - false
   * 9 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setYearMonth(Ljava/util/Calendar;)V: I107 Branch 16 IF_ICMPGE L264 - true
   * 10 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setYearMonth(Ljava/util/Calendar;)V: I107 Branch 16 IF_ICMPGE L264 - false
   * 11 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setYearMonth(Ljava/util/Calendar;)V: I132 Branch 17 IF_ICMPGE L267 - true
   * 12 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setYearMonth(Ljava/util/Calendar;)V: I132 Branch 17 IF_ICMPGE L267 - false
   * 13 com.allenstudio.ir.ui.calendar.MonthlyCalendar.mousePositionChanged(Ljava/awt/event/MouseEvent;)V: I36 Branch 51 IFLT L678 - false
   * 14 com.allenstudio.ir.ui.calendar.MonthlyCalendar.mousePositionChanged(Ljava/awt/event/MouseEvent;)V: I39 Branch 52 IF_ICMPGE L678 - false
   * 15 com.allenstudio.ir.ui.calendar.MonthlyCalendar.mousePositionChanged(Ljava/awt/event/MouseEvent;)V: I50 Branch 55 IF_ICMPEQ L679 - true
   * 16 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setMouseListeningEnabled(Z)V: I3 Branch 1 IFEQ L176 - false
   * 17 com.allenstudio.ir.ui.calendar.MonthlyCalendar.setMouseListeningEnabled(Z)V: I6 Branch 2 IFNE L176 - false
   */
  @Test
  public void test10()  throws Throwable  {
      MonthlyCalendar monthlyCalendar0 = new MonthlyCalendar();
      assertNotNull(monthlyCalendar0);
      
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent((Component) monthlyCalendar0, (-500), (-1151L), 1860, 1, 1797, 1797, 0, 989, true, 1860, (-500), 0, 0.0);
      monthlyCalendar0.mouseMoved((MouseEvent) mouseWheelEvent0);
      assertEquals("com.allenstudio.ir.ui.calendar.MonthlyCalendar[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=java.awt.Dimension[width=189,height=140]]", monthlyCalendar0.toString());
      assertEquals(true, monthlyCalendar0.getMouseListeningEnabled());
      assertEquals(6, monthlyCalendar0.getMonth());
  }
}
