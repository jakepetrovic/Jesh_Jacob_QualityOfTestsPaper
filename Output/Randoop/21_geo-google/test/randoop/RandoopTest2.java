package randoop;

import junit.framework.*;

public class RandoopTest2 extends TestCase {

  public static boolean debug = false;

  public void test1() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test1");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoAddressAccuracy var1 = geo.google.datamodel.GeoAddressAccuracy.valueOf("geo.google.datamodel.GeoAddress@35e7c9a0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test2() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test2");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var2 = var1.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var3 = var1.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var4 = var3.getCode();
    java.util.Map var5 = var3.getOtherAttributes();
    var3.setCode("G_GEO_UNKOWN_STATUS");
    var0.setEndorsementLineCode(var3);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var9 = var0.getAddressLatitude();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var10 = var0.getAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var11 = var0.getBarcode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var12 = var0.getSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var13 = var0.getAddressLongitudeDirection();
    java.util.Map var14 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);

  }

  public void test3() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test3");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber();
    var0.setContent("geo.google.GeoException: ");
    var0.setIndicatorOccurrence("");
    java.lang.String var5 = var0.getType();
    var0.setIndicator("Uknown Status");
    var0.setIndicator("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test4() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test4");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var2 = var0.getAddressLines();
    var0.setUsage("");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var9 = var0.getLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var10 = var0.getPostalServiceElements();
    java.util.Map var11 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var12 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var14 = var13.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var15 = var13.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var16 = var15.getCode();
    java.util.Map var17 = var15.getOtherAttributes();
    var15.setCode("G_GEO_UNKOWN_STATUS");
    var12.setEndorsementLineCode(var15);
    var0.setPostalServiceElements(var12);
    var0.setAddressType("geo.google.datamodel.GeoAddress@76a0b14e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);

  }

  public void test5() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test5");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude();
    var0.setContent("G_GEO_UNKOWN_STATUS");
    java.util.Map var3 = var0.getOtherAttributes();
    java.util.Map var4 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test6() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test6");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var2 = var0.getAddressLines();
    var0.setUsage("");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var5 = var0.getPostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var6 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var7 = var6.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var8 = var6.getAddressLines();
    java.util.List var9 = var6.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var10 = var6.getAddressLines();
    var6.setUsage("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var14 = var13.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var15 = var13.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var16 = var13.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var17 = var13.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var18 = var13.createAddressLinesType();
    java.util.List var19 = var18.getAny();
    var6.setAddressLines(var18);
    var0.setAddressLines(var18);
    java.util.List var22 = var18.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);

  }

  public void test7() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test7");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var3 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var4 = var0.createPostBoxPostBoxNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = var0.createPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var6 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix();
    var6.setCode("hi!");
    var6.setCode("Uknown Status");
    var5.setPostBoxNumberSuffix(var6);
    var6.setContent("geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test8() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test8");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName();
    java.util.Map var1 = var0.getOtherAttributes();
    java.lang.String var2 = var0.getContent();
    java.lang.String var3 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test9() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test9");


    com.google.earth.kml._2.StatusType var0 = new com.google.earth.kml._2.StatusType();
    int var1 = var0.getCode();
    var0.setRequest("geo.google.datamodel.GeoAddress@26f2d88c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var4 = var0.getRequest();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "geo.google.datamodel.GeoAddress@26f2d88c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var4.equals("geo.google.datamodel.GeoAddress@26f2d88c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test10() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test10");


    geo.google.datamodel.GeoCoordinate var0 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var1 = new geo.google.datamodel.GeoCoordinate();
    double var2 = var1.getLongitude();
    double var3 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var0, var1);
    geo.google.datamodel.GeoAltitude var4 = var1.getAltitude();
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var5 = var4.getMode();
    java.lang.String var7 = var5.getDescription("geo.google.datamodel.GeoAddress@2c8fa0b9[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "(default) Indicates to ignore an altitude specification"+ "'", var7.equals("(default) Indicates to ignore an altitude specification"));

  }

  public void test11() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test11");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    var5.setIndicator("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom var8 = new oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom();
    java.util.List var9 = var8.getPremiseNumber();
    java.util.List var10 = var8.getAddressLine();
    java.util.List var11 = var8.getPremiseNumberSuffix();
    java.util.List var12 = var8.getPremiseNumberPrefix();
    var5.setPremiseNumberRangeFrom(var8);
    var5.setIndicator("geo.google.datamodel.GeoAddress@64b274a1[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test12() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test12");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var2 = var0.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var4 = var0.createPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    var5.setContent("G_GEO_UNKOWN_STATUS");
    var5.setContent("geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var5.setCode("geo.google.datamodel.GeoAddress@bb4d8b3[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var12 = var5.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test13() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test13");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    var5.setIndicator("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom var8 = var5.getPremiseNumberRangeFrom();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo var9 = new oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo();
    java.util.List var10 = var9.getPremiseNumber();
    var5.setPremiseNumberRangeTo(var9);
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom var12 = var5.getPremiseNumberRangeFrom();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test14() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test14");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var4 = var3.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var5 = var3.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var6 = var3.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var7 = var3.createLargeMailUserTypeLargeMailUserIdentifier();
    java.lang.String var8 = var7.getIndicator();
    var2.setLargeMailUserIdentifier(var7);
    java.util.List var10 = var2.getBuildingName();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var11 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var11.setThoroughfarePostDirection(var12);
    var2.setThoroughfare(var11);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var15 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var16 = var15.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var17 = var15.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var18 = var15.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var19 = var15.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var20 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var21 = var20.getAddressLine();
    java.util.List var22 = var20.getAny();
    var19.setPostBox(var20);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var24 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var19.setPostBox(var24);
    java.util.List var26 = var24.getAddressLine();
    var2.setPostBox(var24);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var28 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var29 = var28.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var30 = var28.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var31 = var28.createPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var32 = var28.createAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var33 = var28.createPostalCode();
    java.util.List var34 = var33.getPostalCodeNumberExtension();
    var2.setPostalCode(var33);
    oasis.names.tc.ciq.xsdschema.xal._2.Department var36 = var2.getDepartment();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);

  }

  public void test15() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test15");


    geo.google.datamodel.GeoCoordinate var14 = new geo.google.datamodel.GeoCoordinate();
    double var15 = var14.getLongitude();
    geo.google.datamodel.GeoCoordinate var16 = new geo.google.datamodel.GeoCoordinate();
    double var17 = var16.getLongitude();
    double var18 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var14, var16);
    double var19 = var16.getLatitude();
    var16.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var23 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var24 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var16, var23);
    geo.google.datamodel.GeoAddressAccuracy var26 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var27 = var26.getName();
    geo.google.datamodel.GeoUsAddress var28 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: hi!", "(default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.GeoException: ", "", "UNKNOWN_LOCATION", var16, var26);
    var28.setPostalCode("(default) Indicates to ignore an altitude specification");
    java.lang.String var31 = var28.getAddressLine2();
    java.lang.String var32 = var28.toAddressLine();
    var28.setState("geo.google.datamodel.GeoAddress@4244bb8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "UNKNOWN_LOCATION"+ "'", var27.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "(default) Indicates to ignore an altitude specification"+ "'", var31.equals("(default) Indicates to ignore an altitude specification"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  (default) Indicates to ignore an altitude specification"+ "'", var32.equals("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  (default) Indicates to ignore an altitude specification"));

  }

  public void test16() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test16");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var3 = var0.createAddressDetailsPostalServiceElementsAddressLatitude();
    var3.setContent("UNKNOWN_LOCATION");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test17() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test17");


    oasis.names.tc.ciq.xsdschema.xal._2.Locality var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var1 = var0.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.getPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var3 = var0.getPostOffice();
    java.util.List var4 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var5 = var0.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var6 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType();
    java.util.List var7 = var6.getAddressLine();
    java.util.List var8 = var6.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var9 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var10 = var9.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var11 = var9.getPostalCode();
    var6.setPostBox(var9);
    var0.setPostBox(var9);
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var14 = var9.getFirm();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);

  }

  public void test18() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test18");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    var0.setNumberRangeOccurrence("geo.google.GeoException: geo.google.GeoException: ");
    var0.setType("Uknown Status");
    var0.setRangeType("");
    java.lang.String var7 = var0.getType();
    var0.setNumberRangeOccurrence("geo.google.GeoException: ");
    java.lang.String var10 = var0.getRangeType();
    var0.setIndicatorOccurrence("UNKNOWN_LOCATION");
    java.util.List var13 = var0.getAddressLine();
    var0.setIndicatorOccurrence("geo.google.datamodel.GeoUsAddress@541af6ab[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@36387fb0[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@3747179f[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "Uknown Status"+ "'", var7.equals("Uknown Status"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);

  }

  public void test19() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test19");


    oasis.names.tc.ciq.xsdschema.xal._2.Locality var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var2 = var1.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var3 = var1.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var4 = var1.createPostalCode();
    var0.setPostalCode(var4);
    java.lang.String var6 = var0.getUsageType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test20() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test20");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var5 = var0.createLargeMailUserTypeLargeMailUserIdentifier();
    java.lang.String var6 = var5.getCode();
    var5.setCode("G_GEO_UNKOWN_STATUS");
    var5.setIndicator("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var5.setCode("geo.google.datamodel.GeoAddress@3cce2b1c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test21() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test21");


    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber();
    var0.setType("G_GEO_UNKOWN_STATUS");
    java.lang.String var3 = var0.getType();
    java.lang.String var4 = var0.getNumberTypeOccurrence();
    java.lang.String var5 = var0.getCode();
    java.lang.String var6 = var0.getType();
    java.lang.String var7 = var0.getIndicator();
    java.lang.String var8 = var0.getContent();
    java.lang.String var9 = var0.getNumberTypeOccurrence();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var3.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var6.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test22() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test22");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var2 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var4 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var5 = var0.createSubPremiseTypeSubPremiseNumber();
    java.util.Map var6 = var5.getOtherAttributes();
    java.util.Map var7 = var5.getOtherAttributes();
    var5.setIndicator("geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test23() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test23");


    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var2 = var1.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var3 = var1.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var4 = var1.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var5 = var1.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var6 = var1.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var7 = var1.createFirmType();
    var0.setFirm(var7);
    var0.setType("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var11 = var0.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber();
    var0.setPostBoxNumber(var12);
    java.lang.String var14 = var12.getCode();
    java.util.Map var15 = var12.getOtherAttributes();
    java.lang.String var16 = var12.getCode();
    var12.setContent("geo.google.datamodel.GeoUsAddress@541af6ab[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@36387fb0[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@3747179f[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);

  }

  public void test24() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test24");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var3 = var0.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var4 = var3.getAdministrativeArea();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test25() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test25");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var1 = var0.getAny();
    java.lang.String var2 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var3 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude();
    var0.setAddressLatitude(var3);
    var3.setCode("Uknown Status");
    var3.setContent("geo.google.datamodel.GeoAddress@6921ddb6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);

  }

  public void test26() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test26");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    java.util.List var4 = var3.getSubAdministrativeAreaName();
    java.lang.String var5 = var3.getType();
    var3.setIndicator("G_GEO_UNKOWN_STATUS");
    java.lang.String var8 = var3.getUsageType();
    var3.setUsageType("UNKNOWN_LOCATION");
    java.lang.String var11 = var3.getUsageType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var12 = var3.getPostOffice();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "UNKNOWN_LOCATION"+ "'", var11.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test27() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test27");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    java.util.List var1 = var0.getAddressLine();
    java.lang.String var2 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);

  }

  public void test28() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test28");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var2 = var0.getThoroughfare();
    var0.setUsage("(default) Indicates to ignore an altitude specification");
    java.lang.String var5 = var0.getAddressType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var6 = var0.getAdministrativeArea();
    java.lang.String var7 = var0.getAddressType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test29() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test29");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var6 = var5.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var7 = var5.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var9 = var8.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var10 = var8.createPostBoxPostBoxNumberExtension();
    var5.setPostBoxNumberExtension(var10);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var12 = var5.getPostBoxNumberExtension();
    java.util.List var13 = var5.getAny();
    var4.setPostBox(var5);
    var4.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var17 = var4.getDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var18 = var4.getDependentLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var19 = var4.getPostBox();
    java.util.List var20 = var19.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var21 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var22 = var21.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var23 = var21.createPostOffice();
    java.util.List var24 = var23.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var25 = var23.getPostOfficeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var26 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var27 = var26.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var28 = var26.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var29 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var30 = var29.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var31 = var29.createPostBoxPostBoxNumberExtension();
    var26.setPostBoxNumberExtension(var31);
    var23.setPostBox(var26);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var34 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber();
    var26.setPostBoxNumber(var34);
    var19.setPostBoxNumber(var34);
    var34.setCode("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var39 = var34.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);

  }

  public void test30() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test30");


    oasis.names.tc.ciq.xsdschema.xal._2.Department.DepartmentName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Department.DepartmentName();
    var0.setCode("Uknown Status");
    var0.setContent("(default) Indicates to ignore an altitude specification");
    java.lang.String var5 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test31() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test31");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode();
    var0.setCode("G_GEO_UNKOWN_STATUS");
    java.lang.String var3 = var0.getCode();
    var0.setContent("geo.google.GeoException: , geo.google.GeoException: hi!,  UNKNOWN_LOCATION");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var3.equals("G_GEO_UNKOWN_STATUS"));

  }

  public void test32() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test32");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var2 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var3 = var0.createBuildingNameType();
    var3.setContent("geo.google.GeoException: ");
    java.lang.String var6 = var3.getContent();
    java.lang.String var7 = var3.getTypeOccurrence();
    java.lang.String var8 = var3.getTypeOccurrence();
    var3.setContent("geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var3.setType("geo.google.datamodel.GeoAddress@26f2d88c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "geo.google.GeoException: "+ "'", var6.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test33() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test33");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    java.lang.String var11 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var12.setIndicator("G_GEO_UNKOWN_STATUS");
    var2.setPostBox(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var17 = var16.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var18 = var16.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var19 = var16.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var20 = var16.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var21 = var16.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var22 = var16.createFirmType();
    var12.setFirm(var22);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var24 = var22.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var25 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    var22.setMailStop(var25);
    java.lang.String var27 = var25.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var28 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName();
    var25.setMailStopName(var28);
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var30 = var25.getMailStopNumber();
    java.util.Map var31 = var25.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);

  }

  public void test34() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test34");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var1 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var1.setThoroughfarePostDirection(var2);
    java.util.List var4 = var1.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var5 = var1.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var1.getPostalCode();
    var0.setThoroughfare(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var8 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var9 = var8.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var10 = var8.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var12 = var11.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var13 = var11.createPostBoxPostBoxNumberExtension();
    var8.setPostBoxNumberExtension(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var15 = var8.getPostBoxNumberExtension();
    java.util.List var16 = var8.getAny();
    var0.setPostBox(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var18 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var20 = var19.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var21 = var19.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var22 = var19.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var23 = var19.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var24 = var19.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var25 = var19.createFirmType();
    var18.setFirm(var25);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var28 = var27.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var29 = var27.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var30 = var27.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var31 = var27.createThoroughfare();
    java.util.List var32 = var31.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var33 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var34 = var33.getPostTown();
    var31.setPostalCode(var33);
    var25.setPostalCode(var33);
    var8.setFirm(var25);
    var25.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var40 = var25.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var41 = var25.getPostalCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);

  }

  public void test35() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test35");


    geo.google.GeoAddressStandardizer var1 = new geo.google.GeoAddressStandardizer("G_GEO_UNKOWN_STATUS");
    var1.setApiKey("geo.google.GeoException: ");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoCoordinate var5 = var1.standardizeToGeoCoordinate("Uknown Status");
      fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
    }

  }

  public void test36() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test36");


    geo.google.datamodel.GeoCoordinate var7 = new geo.google.datamodel.GeoCoordinate();
    double var8 = var7.getLongitude();
    geo.google.datamodel.GeoCoordinate var9 = new geo.google.datamodel.GeoCoordinate();
    double var10 = var9.getLongitude();
    double var11 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var7, var9);
    double var12 = var9.getLatitude();
    var9.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var16 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var17 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var9, var16);
    java.lang.String var18 = var17.getState();
    java.lang.String var19 = var17.toAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "geo.google.GeoException: , geo.google.GeoException: hi!,  UNKNOWN_LOCATION"+ "'", var19.equals("geo.google.GeoException: , geo.google.GeoException: hi!,  UNKNOWN_LOCATION"));

  }

  public void test37() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test37");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var3 = var0.getThoroughfarePostDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var5 = var4.getCode();
    java.lang.String var6 = var4.getCode();
    var0.setThoroughfareTrailingType(var4);
    java.util.List var8 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var10 = var9.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var11 = var9.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var12 = var9.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var13 = var9.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var14 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var15 = var14.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var16 = var14.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var18 = var17.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var19 = var17.createPostBoxPostBoxNumberExtension();
    var14.setPostBoxNumberExtension(var19);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var21 = var14.getPostBoxNumberExtension();
    java.util.List var22 = var14.getAny();
    var13.setPostBox(var14);
    var13.setType("");
    var0.setDependentLocality(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var28 = var27.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var29 = var27.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var30 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var31 = var30.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var32 = var30.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var33 = var30.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var34 = var30.createLargeMailUserTypeLargeMailUserIdentifier();
    java.lang.String var35 = var34.getIndicator();
    var29.setLargeMailUserIdentifier(var34);
    java.util.List var37 = var29.getLargeMailUserName();
    var13.setLargeMailUser(var29);
    java.util.Map var39 = var29.getOtherAttributes();
    var29.setType("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var42 = var29.getThoroughfare();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);

  }

  public void test38() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test38");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var2 = var0.getThoroughfare();
    var0.setUsage("(default) Indicates to ignore an altitude specification");
    java.lang.String var5 = var0.getAddressType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var6 = var0.getAdministrativeArea();
    var0.setValidFromDate("geo.google.datamodel.GeoAddress@bb4d8b3[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test39() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test39");


    geo.google.datamodel.GeoCoordinate var14 = new geo.google.datamodel.GeoCoordinate();
    double var15 = var14.getLongitude();
    geo.google.datamodel.GeoCoordinate var16 = new geo.google.datamodel.GeoCoordinate();
    double var17 = var16.getLongitude();
    double var18 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var14, var16);
    double var19 = var16.getLatitude();
    var16.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var23 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var24 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var16, var23);
    geo.google.datamodel.GeoAddressAccuracy var26 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var27 = var26.getName();
    geo.google.datamodel.GeoUsAddress var28 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: hi!", "(default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.GeoException: ", "", "UNKNOWN_LOCATION", var16, var26);
    var28.setPostalCode("(default) Indicates to ignore an altitude specification");
    geo.google.datamodel.GeoAddressAccuracy var32 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(0);
    var28.setAccuracy(var32);
    var28.setAddressLine2("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var28.setState("CLAMP_TO_GROUND");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "UNKNOWN_LOCATION"+ "'", var27.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);

  }

  public void test40() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test40");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    java.util.List var3 = var0.getThoroughfareNumberSuffix();
    var0.setDependentThoroughfaresIndicator("hi!");
    var0.setDependentThoroughfaresType("");
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType();
    java.lang.String var9 = var8.getContent();
    var8.setContent("Uknown Status");
    java.util.Map var12 = var8.getOtherAttributes();
    var0.setThoroughfarePreDirection(var8);
    java.util.Map var14 = var8.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);

  }

  public void test41() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test41");


    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var1 = var0.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var2 = var0.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var4 = var3.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var5 = var3.createPostBoxPostBoxNumberExtension();
    var0.setPostBoxNumberExtension(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var7 = var0.getPostBoxNumberExtension();
    java.util.List var8 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var9 = var0.getPostBoxNumberExtension();
    var9.setContent("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var12 = var9.getNumberExtensionSeparator();
    var9.setNumberExtensionSeparator("geo.google.datamodel.GeoAddress@16896f61[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test42() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test42");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var1 = var0.getIndicator();
    java.lang.String var2 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.getSubAdministrativeArea();
    var0.setType("Uknown Status");
    var0.setIndicator("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  (default) Indicates to ignore an altitude specification");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test43() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test43");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.earth.kml._2.AltitudeModeType var1 = com.google.earth.kml._2.AltitudeModeType.fromValue("geo.google.datamodel.GeoAddress@e474122[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test44() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test44");


    com.google.earth.kml._2.StatusType var0 = new com.google.earth.kml._2.StatusType();
    java.lang.String var1 = var0.getRequest();
    int var2 = var0.getCode();
    var0.setCode((-1));
    var0.setCode(10);
    var0.setRequest("geo.google.datamodel.GeoAddress@76a0b14e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == 0);

  }

  public void test45() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test45");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName();
    var0.setType("geo.google.GeoException: ");
    var0.setContent("");
    java.lang.String var5 = var0.getCode();
    java.util.Map var6 = var0.getOtherAttributes();
    var0.setContent("geo.google.GeoException: hi!");
    java.util.Map var9 = var0.getOtherAttributes();
    java.lang.String var10 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test46() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test46");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var3 = var0.createAddressDetailsPostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var4 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var5 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var6 = var0.createSubPremiseTypeSubPremiseNumber();
    java.lang.String var7 = var6.getType();
    java.util.Map var8 = var6.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test47() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test47");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var6 = var0.createLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var8 = var7.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var9 = var7.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var11 = var10.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var12 = var10.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var13 = var10.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var14 = var10.createLargeMailUserTypeLargeMailUserIdentifier();
    java.lang.String var15 = var14.getIndicator();
    var9.setLargeMailUserIdentifier(var14);
    java.util.List var17 = var9.getBuildingName();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var18 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var18.setThoroughfarePostDirection(var19);
    var9.setThoroughfare(var18);
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var22 = var9.getLargeMailUserIdentifier();
    var6.setLargeMailUser(var9);
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var24 = var6.getLargeMailUser();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);

  }

  public void test48() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test48");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var3 = var0.createLocalityLocalityName();
    var3.setContent("G_GEO_UNKOWN_STATUS");
    var3.setType("");
    var3.setContent("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test49() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test49");


    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var1 = var0.getAddressLine();
    java.util.List var2 = var0.getAny();
    var0.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var5 = var0.getPostBoxNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test50() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test50");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    var3.setNameNumberOccurrence("geo.google.GeoException: ");
    var3.setContent("hi!");
    var3.setContent("geo.google.datamodel.GeoAddress@535811d6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test51() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test51");


    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var1 = var0.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var2 = var0.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var4 = var3.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var5 = var3.createPostBoxPostBoxNumberExtension();
    var0.setPostBoxNumberExtension(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var7 = var0.getPostBoxNumberExtension();
    java.util.Map var8 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test52() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test52");


    com.google.earth.kml._2.ObjectFactory var0 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var1 = var0.createResponseType();
    com.google.earth.kml._2.StatusType var2 = new com.google.earth.kml._2.StatusType();
    java.lang.String var3 = var2.getRequest();
    var1.setStatus(var2);
    java.lang.String var5 = var2.getRequest();
    var2.setRequest("geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test53() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test53");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var1 = var0.getAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var2 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude();
    java.util.Map var3 = var2.getOtherAttributes();
    var0.setAddressLongitude(var2);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var5 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var6 = var5.getAny();
    java.lang.String var7 = var5.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var8 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude();
    var5.setAddressLatitude(var8);
    var0.setAddressLatitude(var8);
    java.util.Map var11 = var8.getOtherAttributes();
    var8.setType("geo.google.datamodel.GeoAddress@41778a2e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);

  }

  public void test54() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test54");


    geo.google.GeoAddressStandardizer var1 = new geo.google.GeoAddressStandardizer("UNKNOWN_LOCATION");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.util.List var3 = var1.standardizeToGeoAddresses("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }

  }

  public void test55() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test55");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var2 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var3 = var0.createAddressDetailsPostalServiceElementsAddressLatitude();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLine var4 = var0.createAddressLine();
    java.lang.String var5 = var4.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test56() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test56");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName();
    var0.setContent("geo.google.datamodel.GeoAddress@730dc6d0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");

  }

  public void test57() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test57");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    var0.setNumberRangeOccurrence("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var3 = var0.getNumberRangeOccurrence();
    java.lang.String var4 = var0.getSeparator();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var6 = var5.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var7 = var5.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var8 = var5.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberFrom var9 = var5.createThoroughfareThoroughfareNumberRangeThoroughfareNumberFrom();
    var0.setThoroughfareNumberFrom(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "geo.google.GeoException: geo.google.GeoException: "+ "'", var3.equals("geo.google.GeoException: geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test58() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test58");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    geo.google.mapping.FunctionChain var3 = new geo.google.mapping.FunctionChain(var2);
    geo.google.mapping.FunctionChain var4 = var3.getTail();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var5.createPremise();
    java.util.List var7 = var6.getAddressLine();
    geo.google.mapping.FunctionChain var8 = new geo.google.mapping.FunctionChain(var7);
    var3.setTail(var8);
    geo.google.mapping.XmlToUsAddressFunctor var10 = geo.google.mapping.XmlToUsAddressFunctor.getInstance();
    var3.setHead((geo.google.mapping.Functor)var10);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.util.List var13 = var10.execute("geo.google.datamodel.GeoAddress@730dc6d0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);

  }

  public void test59() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test59");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData();
    java.util.Map var1 = var0.getOtherAttributes();
    java.lang.String var2 = var0.getType();
    java.util.Map var3 = var0.getOtherAttributes();
    var0.setCode("geo.google.GeoException: ");
    java.lang.String var6 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "geo.google.GeoException: "+ "'", var6.equals("geo.google.GeoException: "));

  }

  public void test60() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test60");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData();
    java.util.Map var1 = var0.getOtherAttributes();
    java.lang.String var2 = var0.getContent();
    java.lang.String var3 = var0.getType();
    java.lang.String var4 = var0.getContent();
    var0.setType("geo.google.datamodel.GeoAddress@3c53f765[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setContent("(default) Indicates to ignore an altitude specification");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test61() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test61");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumberExtension var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumberExtension();
    java.lang.String var1 = var0.getType();
    java.util.Map var2 = var0.getOtherAttributes();
    var0.setNumberExtensionSeparator("geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test62() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test62");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var6 = var0.createLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var7 = var6.getPremise();
    java.lang.String var8 = var6.getType();
    java.util.List var9 = var6.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var11 = var10.createPremise();
    java.util.List var12 = var11.getAddressLine();
    java.util.List var13 = var11.getAny();
    var11.setType("");
    var11.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var18 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var18.setThoroughfarePostDirection(var19);
    java.util.List var21 = var18.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var22 = var18.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var23 = var18.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var24 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var25 = var24.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var26 = var24.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var27 = var24.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var28 = var24.createThoroughfare();
    java.util.List var29 = var28.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var30 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var31 = var30.getPostTown();
    var28.setPostalCode(var30);
    java.util.List var33 = var30.getAny();
    var18.setPostalCode(var30);
    var11.setPostalCode(var30);
    var6.setPostalCode(var30);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var37 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var38 = var37.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var39 = var37.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var40 = var37.createPostalRouteType();
    java.lang.String var41 = var40.getType();
    java.lang.String var42 = var40.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var43 = var40.getPostBox();
    var6.setPostalRoute(var40);
    java.util.List var45 = var40.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);

  }

  public void test63() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test63");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var4 = var0.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var5 = var4.getContent();
    var4.setCode("(default) Indicates to ignore an altitude specification");
    java.lang.String var8 = var4.getContent();
    var4.setContent("geo.google.datamodel.GeoAddress@535811d6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test64() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test64");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var1 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var1.setThoroughfarePostDirection(var2);
    java.util.List var4 = var1.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var5 = var1.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var1.getPostalCode();
    var0.setThoroughfare(var1);
    java.lang.String var8 = var0.getType();
    java.util.List var9 = var0.getAddressLine();
    java.lang.String var10 = var0.getUsageType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test65() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test65");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName();
    var0.setType("");
    java.lang.String var3 = var0.getCode();
    java.lang.String var4 = var0.getCode();
    java.lang.String var5 = var0.getContent();
    var0.setContent("geo.google.datamodel.GeoUsAddress@56cc18ee[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@7178ddc6[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@36282c5d[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test66() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test66");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var2 = var1.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var3 = var1.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var4 = var3.getCode();
    java.util.Map var5 = var3.getOtherAttributes();
    var3.setCode("G_GEO_UNKOWN_STATUS");
    var0.setEndorsementLineCode(var3);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var9 = var0.getAddressLatitude();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var10 = var0.getAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var11 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode();
    java.lang.String var12 = var11.getType();
    var11.setCode("hi!");
    var0.setKeyLineCode(var11);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var16 = var0.getAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var17 = var0.getEndorsementLineCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);

  }

  public void test67() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test67");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var2 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var3 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var4 = var0.createThoroughfareNameType();
    java.lang.String var5 = var4.getCode();
    java.lang.String var6 = var4.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test68() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test68");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var2 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var4 = var0.createSubPremiseTypeSubPremiseNumber();
    var4.setNumberTypeOccurrence("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var4.setContent("geo.google.GeoException: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test69() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test69");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    java.util.List var5 = var4.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var6 = var4.getThoroughfarePreDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var7 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    var4.setDependentThoroughfare(var7);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var10 = var9.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var11 = var9.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var12 = var9.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var13 = var9.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var14 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var15 = var14.getAddressLine();
    java.util.List var16 = var14.getAny();
    var13.setPostBox(var14);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var19 = var18.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var20 = var18.createDependentLocalityTypeDependentLocalityNumber();
    var20.setCode("G_GEO_UNKOWN_STATUS");
    var13.setDependentLocalityNumber(var20);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var24 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var25 = var24.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var26 = var24.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var27 = var24.createDependentLocalityTypeDependentLocalityNumber();
    var27.setContent("");
    var27.setNameNumberOccurrence("");
    var27.setContent("hi!");
    var13.setDependentLocalityNumber(var27);
    java.util.List var35 = var13.getAddressLine();
    var4.setDependentLocality(var13);
    java.lang.String var37 = var4.getDependentThoroughfaresConnector();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);

  }

  public void test70() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test70");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var4 = var3.createPremise();
    var1.setPremise(var4);
    java.lang.String var6 = var1.getPremiseDependency();
    java.util.List var7 = var1.getSubPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var8 = var1.getPostalCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test71() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test71");


    geo.google.GeoAddressStandardizer var2 = new geo.google.GeoAddressStandardizer("G_GEO_UNKOWN_STATUS", 100L);
    geo.google.datamodel.GeoCoordinate var17 = new geo.google.datamodel.GeoCoordinate();
    double var18 = var17.getLongitude();
    geo.google.datamodel.GeoCoordinate var19 = new geo.google.datamodel.GeoCoordinate();
    double var20 = var19.getLongitude();
    double var21 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var17, var19);
    double var22 = var19.getLatitude();
    var19.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var26 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var27 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var19, var26);
    geo.google.datamodel.GeoAddressAccuracy var29 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var30 = var29.getName();
    geo.google.datamodel.GeoUsAddress var31 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: hi!", "(default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.GeoException: ", "", "UNKNOWN_LOCATION", var19, var29);
    var31.setPostalCode("(default) Indicates to ignore an altitude specification");
    java.lang.String var34 = var31.getAddressLine2();
    java.lang.String var35 = var31.toString();
    java.lang.String var36 = var31.toString();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.util.List var37 = var2.standardizeToGeoAddresses(var31);
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var30 + "' != '" + "UNKNOWN_LOCATION"+ "'", var30.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "(default) Indicates to ignore an altitude specification"+ "'", var34.equals("(default) Indicates to ignore an altitude specification"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "geo.google.datamodel.GeoUsAddress@b82396[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@39284d38[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@4e5b4d9[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var35.equals("geo.google.datamodel.GeoUsAddress@b82396[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@39284d38[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@4e5b4d9[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "geo.google.datamodel.GeoUsAddress@b82396[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@39284d38[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@4e5b4d9[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var36.equals("geo.google.datamodel.GeoUsAddress@b82396[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@39284d38[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@4e5b4d9[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test72() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test72");


    geo.google.datamodel.GeoAddress var0 = new geo.google.datamodel.GeoAddress();
    var0.setAddressLine("UNKNOWN_LOCATION");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var3 = var0.getAddressDetails();
    java.lang.String var4 = var0.getAddressLine();
    java.lang.String var5 = var0.getAddressLine();
    var0.setAddressLine("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "UNKNOWN_LOCATION"+ "'", var4.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "UNKNOWN_LOCATION"+ "'", var5.equals("UNKNOWN_LOCATION"));

  }

  public void test73() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test73");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    var5.setIndicator("G_GEO_UNKOWN_STATUS");
    var5.setType("hi!");
    var5.setType("geo.google.GeoException: ");
    var5.setIndicatorOccurence("hi!");
    var5.setSeparator("geo.google.GeoException: ");
    java.lang.String var16 = var5.getIndicatorOccurence();
    var5.setSeparator("geo.google.datamodel.GeoAddress@730dc6d0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!"+ "'", var16.equals("hi!"));

  }

  public void test74() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test74");


    geo.google.datamodel.GeoAltitude var0 = new geo.google.datamodel.GeoAltitude();
    geo.google.datamodel.GeoAltitude var2 = new geo.google.datamodel.GeoAltitude(10.0d);
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var3 = var2.getMode();
    var0.setMode(var3);
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var5 = var0.getMode();
    java.lang.String var6 = var0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test75() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test75");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    java.util.List var1 = var0.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var2 = var0.getDependentLocality();
    var0.setDependentThoroughfaresType("G_GEO_UNKOWN_STATUS");
    java.util.List var5 = var0.getThoroughfareNumberOrThoroughfareNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var6 = var0.getThoroughfarePreDirection();
    java.util.List var7 = var0.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test76() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test76");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var2 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var4 = var0.createSubPremiseTypeSubPremiseName();
    var4.setType("G_GEO_UNKOWN_STATUS");
    java.lang.String var7 = var4.getContent();
    java.util.Map var8 = var4.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test77() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test77");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData();
    java.util.Map var1 = var0.getOtherAttributes();
    java.lang.String var2 = var0.getType();
    java.util.Map var3 = var0.getOtherAttributes();
    var0.setCode("geo.google.GeoException: ");
    java.util.Map var6 = var0.getOtherAttributes();
    var0.setCode("geo.google.GeoException: ");
    var0.setType("Uknown Status");
    java.lang.String var11 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "geo.google.GeoException: "+ "'", var11.equals("geo.google.GeoException: "));

  }

  public void test78() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test78");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAny();
    var1.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var5 = var1.getMailStop();
    var1.setPremiseDependencyType("");
    java.lang.String var8 = var1.getPremiseDependency();
    java.util.List var9 = var1.getSubPremise();
    java.lang.String var10 = var1.getPremiseDependency();
    java.util.List var11 = var1.getBuildingName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);

  }

  public void test79() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test79");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType();
    java.lang.String var1 = var0.getType();
    java.lang.String var2 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);

  }

  public void test80() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test80");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var2 = var0.getAddressLines();
    var0.setUsage("");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var9 = var0.getLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var10 = var0.getPostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var11 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var11.setThoroughfarePostDirection(var12);
    java.lang.String var14 = var11.getDependentThoroughfares();
    var0.setThoroughfare(var11);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var16 = var0.getPostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var17 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var18 = var17.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var19 = var17.getPremise();
    var0.setLocality(var17);
    var17.setIndicator("(default) Indicates to ignore an altitude specification");
    var17.setUsageType("CLAMP_TO_GROUND");
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var25 = new oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType();
    var25.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.Department var28 = var25.getDepartment();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var29 = var25.getPostBox();
    var17.setLargeMailUser(var25);
    java.util.Map var31 = var25.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);

  }

  public void test81() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test81");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var2 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var4 = var0.createPostBox();
    java.util.Map var5 = var4.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test82() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test82");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    java.lang.String var3 = var2.getType();
    var2.setCode("G_GEO_UNKOWN_STATUS");
    var2.setCode("G_GEO_UNKOWN_STATUS");
    var2.setCode("UNKNOWN_LOCATION");
    java.lang.String var10 = var2.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "UNKNOWN_LOCATION"+ "'", var10.equals("UNKNOWN_LOCATION"));

  }

  public void test83() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test83");


    geo.google.datamodel.GeoStatusCode var5 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var6 = new geo.google.GeoException("", var5);
    java.lang.String var7 = var6.toString();
    geo.google.datamodel.GeoStatusCode var11 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var12 = new geo.google.GeoException("", var11);
    geo.google.datamodel.GeoStatusCode var15 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var16 = new geo.google.GeoException("", var15);
    geo.google.GeoException var17 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var12, var15);
    var6.addSuppressed((java.lang.Throwable)var17);
    geo.google.datamodel.GeoStatusCode var20 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    boolean var22 = var20.equals((java.lang.Object)10L);
    java.lang.String var23 = var20.name();
    int var24 = var20.getCode();
    geo.google.GeoException var25 = new geo.google.GeoException("", (java.lang.Throwable)var6, var20);
    geo.google.GeoException var26 = new geo.google.GeoException("(default) Indicates to ignore an altitude specification", (java.lang.Throwable)var25);
    geo.google.datamodel.GeoStatusCode var30 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var31 = new geo.google.GeoException("", var30);
    geo.google.datamodel.GeoStatusCode var34 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var35 = new geo.google.GeoException("", var34);
    geo.google.GeoException var36 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var31, var34);
    geo.google.GeoException var37 = new geo.google.GeoException((java.lang.Throwable)var36);
    geo.google.datamodel.GeoStatusCode var38 = var36.getStatus();
    geo.google.GeoException var39 = new geo.google.GeoException("hi!", (java.lang.Throwable)var25, var38);
    int var40 = var38.getCode();
    java.lang.String var41 = var38.getCodeName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "geo.google.GeoException: "+ "'", var7.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var23.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var41.equals("G_GEO_UNKOWN_STATUS"));

  }

  public void test84() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test84");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var6 = var0.createLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var7 = var6.getPremise();
    var6.setType("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var10 = var6.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var11 = var6.getDependentLocality();
    java.lang.String var12 = var6.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "Uknown Status"+ "'", var12.equals("Uknown Status"));

  }

  public void test85() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test85");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberSuffix var5 = var0.createSubPremiseTypeSubPremiseNumberSuffix();
    var5.setType("geo.google.datamodel.GeoAddress@62c859b5[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var8 = var5.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test86() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test86");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var1 = var0.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.getPostOffice();
    java.lang.String var3 = var0.getType();
    java.lang.String var4 = var0.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var5 = var0.getPostalCode();
    java.util.Map var6 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test87() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test87");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    java.lang.String var11 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var12.setIndicator("G_GEO_UNKOWN_STATUS");
    var2.setPostBox(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var16 = var2.getPostalCode();
    var2.setType("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.Department var19 = var2.getDepartment();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);

  }

  public void test88() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test88");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    java.lang.String var3 = var2.getType();
    var2.setContent("");
    var2.setCode("hi!");
    java.lang.String var8 = var2.getType();
    var2.setNumberPrefixSeparator("geo.google.datamodel.GeoUsAddress@46478daa[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@3a5b7f2[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@74cf72bc[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test89() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test89");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var2 = var1.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var3 = var1.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var4 = var3.getCode();
    java.util.Map var5 = var3.getOtherAttributes();
    var3.setCode("G_GEO_UNKOWN_STATUS");
    var0.setEndorsementLineCode(var3);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var9 = var0.getAddressLatitude();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var11 = var10.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var12 = var10.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var13 = var10.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    var0.setAddressLatitudeDirection(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var15 = var0.getBarcode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var16 = var0.getAddressLongitudeDirection();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);

  }

  public void test90() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test90");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var3 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var4 = var0.createLargeMailUserTypeLargeMailUserIdentifier();
    java.lang.String var5 = var4.getIndicator();
    java.lang.String var6 = var4.getCode();
    var4.setContent("geo.google.datamodel.GeoAddress@3cce2b1c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test91() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test91");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber var4 = var0.createPremiseNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var5 = var0.createThoroughfareDependentThoroughfare();
    java.util.List var6 = var5.getAddressLine();
    java.lang.String var7 = var5.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var8 = var5.getThoroughfarePreDirection();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test92() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test92");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var3 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var4 = var0.createPostBoxPostBoxNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserName var5 = var0.createLargeMailUserTypeLargeMailUserName();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var6 = var0.createXAL();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo var7 = var0.createPremisePremiseNumberRangePremiseNumberRangeTo();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var8 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber var9 = var0.createPostalRouteTypePostalRouteNumber();
    java.lang.String var10 = var9.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test93() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test93");


    geo.google.datamodel.GeoCoordinate var14 = new geo.google.datamodel.GeoCoordinate();
    double var15 = var14.getLongitude();
    geo.google.datamodel.GeoCoordinate var16 = new geo.google.datamodel.GeoCoordinate();
    double var17 = var16.getLongitude();
    double var18 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var14, var16);
    double var19 = var16.getLatitude();
    var16.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var23 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var24 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var16, var23);
    geo.google.datamodel.GeoAddressAccuracy var26 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var27 = var26.getName();
    geo.google.datamodel.GeoUsAddress var28 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: hi!", "(default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.GeoException: ", "", "UNKNOWN_LOCATION", var16, var26);
    var28.setPostalCode("(default) Indicates to ignore an altitude specification");
    var28.setAddressLine2("geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var33 = var28.getAddressLine1();
    java.lang.String var34 = var28.toAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "UNKNOWN_LOCATION"+ "'", var27.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "geo.google.GeoException: hi!"+ "'", var33.equals("geo.google.GeoException: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  (default) Indicates to ignore an altitude specification"+ "'", var34.equals("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  (default) Indicates to ignore an altitude specification"));

  }

  public void test94() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test94");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix();
    java.util.Map var1 = var0.getOtherAttributes();
    var0.setType("hi!");
    var0.setNumberSuffixSeparator("");
    var0.setType("geo.google.datamodel.GeoAddress@3cce2b1c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setNumberSuffixSeparator("geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setContent("geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);

  }

  public void test95() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test95");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var3 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName var4 = var0.createAdministrativeAreaSubAdministrativeAreaSubAdministrativeAreaName();
    java.lang.String var5 = var4.getContent();
    java.lang.String var6 = var4.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test96() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test96");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var1 = var0.getIndicator();
    java.lang.String var2 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.getSubAdministrativeArea();
    java.util.Map var4 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test97() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test97");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var2 = var0.createPostBoxPostBoxNumberExtension();
    var2.setNumberExtensionSeparator("G_GEO_UNKOWN_STATUS");
    var2.setNumberExtensionSeparator("geo.google.GeoException: ");
    java.lang.String var7 = var2.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test98() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test98");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    var4.setCode("hi!");
    java.lang.String var7 = var4.getCode();
    var4.setContent("");
    java.lang.String var10 = var4.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));

  }

  public void test99() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test99");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    java.lang.String var11 = var2.getType();
    java.util.List var12 = var2.getAny();
    java.util.Map var13 = var2.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);

  }

  public void test100() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test100");


    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber();
    var0.setIndicator("hi!");
    java.lang.String var3 = var0.getContent();
    java.util.Map var4 = var0.getOtherAttributes();
    var0.setCode("geo.google.datamodel.GeoUsAddress@46478daa[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@3a5b7f2[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@74cf72bc[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test101() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test101");


    geo.google.datamodel.GeoAltitude var2 = new geo.google.datamodel.GeoAltitude();
    geo.google.datamodel.GeoAltitude var4 = new geo.google.datamodel.GeoAltitude(10.0d);
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var5 = var4.getMode();
    var2.setMode(var5);
    geo.google.datamodel.GeoAltitude var7 = new geo.google.datamodel.GeoAltitude(100.0d, var5);
    geo.google.datamodel.GeoAltitude var8 = new geo.google.datamodel.GeoAltitude(69.09332413987235d, var5);
    java.lang.Class var9 = var5.getDeclaringClass();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Enum var11 = java.lang.Enum.<java.lang.Enum>valueOf(var9, "geo.google.datamodel.GeoAddress@2ea7c82[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test102() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test102");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var3 = var1.getFirm();
    var1.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var7 = var6.createPremise();
    java.lang.String var8 = var7.getPremiseThoroughfareConnector();
    var1.setPremise(var7);
    java.util.List var10 = var7.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var11 = var7.getPremiseNumberRange();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test103() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test103");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var2 = var1.getCode();
    java.lang.String var3 = var1.getCode();
    var0.setThoroughfareTrailingType(var1);
    java.util.List var5 = var0.getAddressLine();
    java.util.List var6 = var0.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var7 = var0.getThoroughfarePostDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var8 = var0.getThoroughfareLeadingType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test104() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test104");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var1 = var0.getSubPremiseNumberPrefix();
    java.util.List var2 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var3 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var4 = var3.getPostTown();
    var0.setPostalCode(var3);
    java.util.List var6 = var0.getSubPremiseNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test105() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test105");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    java.lang.String var2 = var1.getNumberSuffixSeparator();
    java.lang.String var3 = var1.getContent();
    var1.setNumberSuffixSeparator("");
    java.lang.String var6 = var1.getCode();
    var1.setCode("(default) Indicates to ignore an altitude specification");
    var1.setType("geo.google.datamodel.GeoAddress@2ea7c82[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test106() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test106");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber();
    var0.setContent("geo.google.GeoException: ");
    var0.setIndicatorOccurrence("");
    java.lang.String var5 = var0.getIndicatorOccurrence();
    java.lang.String var6 = var0.getType();
    var0.setContent("geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setContent("G_GEO_UNKOWN_STATUS");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test107() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test107");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    java.util.List var3 = var2.getAddressLine();
    java.util.List var4 = var2.getLargeMailUserName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var5 = var2.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var6 = var2.getThoroughfare();
    java.util.List var7 = var2.getLargeMailUserName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test108() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test108");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var1 = var0.getIndicator();
    java.util.Map var2 = var0.getOtherAttributes();
    var0.setUsageType("(default) Indicates to ignore an altitude specification");
    java.util.Map var5 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test109() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test109");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    java.lang.String var11 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var12.setIndicator("G_GEO_UNKOWN_STATUS");
    var2.setPostBox(var12);
    java.lang.String var16 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var18 = var17.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var19 = var17.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var20 = var17.createAdministrativeAreaSubAdministrativeArea();
    java.util.List var21 = var20.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var22 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var23 = var22.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var24 = var22.createPostOffice();
    java.util.List var25 = var24.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var26 = var24.getPostOfficeNumber();
    var24.setType("G_GEO_UNKOWN_STATUS");
    java.util.List var29 = var24.getPostOfficeName();
    var20.setPostOffice(var24);
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var31 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var32 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var33 = var32.createPremise();
    java.util.List var34 = var33.getAddressLine();
    java.util.List var35 = var33.getAny();
    var33.setType("");
    var33.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var40 = var33.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var41 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var42 = var41.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var43 = var41.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var44 = var41.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var45 = var41.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var46 = var41.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var47 = var41.createFirmType();
    var33.setFirm(var47);
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var49 = var33.getMailStop();
    var33.setType("hi!");
    var31.setPremise(var33);
    var20.setLocality(var31);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var54 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var55 = var54.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var56 = var54.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var57 = var54.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var58 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var59 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var58.setThoroughfarePostDirection(var59);
    java.util.List var61 = var58.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var62 = var58.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var63 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var64 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var65 = var64.getCode();
    java.lang.String var66 = var64.getCode();
    var63.setThoroughfareTrailingType(var64);
    var58.setDependentThoroughfare(var63);
    var57.setDependentThoroughfare(var63);
    var57.setDependentThoroughfares("geo.google.GeoException: ");
    var31.setThoroughfare(var57);
    var2.setThoroughfare(var57);
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var74 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var75 = var74.getPostalCode();
    java.lang.String var76 = var74.getConnector();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var77 = var74.getLargeMailUser();
    java.util.List var78 = var74.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var79 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    var74.setPostalCode(var79);
    var2.setPostalCode(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);

  }

  public void test110() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test110");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode();
    java.lang.String var1 = var0.getType();
    var0.setContent("geo.google.GeoException: ");
    var0.setContent("geo.google.datamodel.GeoAddress@2ea7c82[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);

  }

  public void test111() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test111");


    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberPrefix var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberPrefix();
    java.lang.String var1 = var0.getCode();
    var0.setType("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var4 = var0.getType();
    java.lang.String var5 = var0.getType();
    var0.setType("geo.google.datamodel.GeoUsAddress@49269587[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@422f796[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@13ac9af9[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "geo.google.GeoException: geo.google.GeoException: "+ "'", var4.equals("geo.google.GeoException: geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "geo.google.GeoException: geo.google.GeoException: "+ "'", var5.equals("geo.google.GeoException: geo.google.GeoException: "));

  }

  public void test112() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test112");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var2 = var0.createMailStopTypeMailStopName();
    java.lang.String var3 = var2.getCode();
    java.lang.String var4 = var2.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test113() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test113");


    geo.google.GeoAddressStandardizer var2 = new geo.google.GeoAddressStandardizer("geo.google.GeoException: geo.google.GeoException: ", 100L);
    org.apache.commons.httpclient.params.HttpClientParams var3 = var2.getHttpClientParams();
    geo.google.datamodel.GeoCoordinate var11 = new geo.google.datamodel.GeoCoordinate();
    double var12 = var11.getLongitude();
    geo.google.datamodel.GeoCoordinate var13 = new geo.google.datamodel.GeoCoordinate();
    double var14 = var13.getLongitude();
    double var15 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var11, var13);
    double var16 = var13.getLatitude();
    var13.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var20 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var21 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var13, var20);
    java.lang.String var22 = var21.toAddressLine();
    var21.setCountry("geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var21.setCity("geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    geo.google.datamodel.GeoCoordinate var27 = var21.getCoordinate();
    var21.setState("UNKNOWN_LOCATION");
    var21.setCity("geo.google.datamodel.GeoAddress@25d14add[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.util.List var32 = var2.standardizeToGeoUsAddresses(var21);
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "geo.google.GeoException: , geo.google.GeoException: hi!,  UNKNOWN_LOCATION"+ "'", var22.equals("geo.google.GeoException: , geo.google.GeoException: hi!,  UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);

  }

  public void test114() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test114");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var6 = var5.getAddressLine();
    java.util.List var7 = var5.getAny();
    var4.setPostBox(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var9 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var4.setPostBox(var9);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var11 = var9.getPostBoxNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test115() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test115");


    com.google.earth.kml._2.PointType var0 = new com.google.earth.kml._2.PointType();
    var0.setTessellate((java.lang.Boolean)true);
    var0.setExtrude((java.lang.Boolean)false);
    java.lang.Boolean var5 = var0.isExtrude();
    var0.setCoordinates("Uknown Status");
    var0.setCoordinates("");
    var0.setTessellate((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + false+ "'", var5.equals(false));

  }

  public void test116() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test116");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo();
    java.util.List var1 = var0.getContent();
    java.util.Map var2 = var0.getOtherAttributes();
    java.util.Map var3 = var0.getOtherAttributes();
    java.util.Map var4 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test117() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test117");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var3 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var4 = var0.createPostBoxPostBoxNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserName var5 = var0.createLargeMailUserTypeLargeMailUserName();
    var5.setType("G_GEO_UNKOWN_STATUS");
    java.lang.String var8 = var5.getCode();
    java.lang.String var9 = var5.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var9.equals("G_GEO_UNKOWN_STATUS"));

  }

  public void test118() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test118");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var2 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var3 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom var4 = var0.createPremisePremiseNumberRangePremiseNumberRangeFrom();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var5 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var6 = var0.createPremisePremiseNumberRange();
    var6.setRangeType("Uknown Status");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test119() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test119");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var2 = var1.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var3 = var1.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var4 = var3.getCode();
    java.util.Map var5 = var3.getOtherAttributes();
    var3.setCode("G_GEO_UNKOWN_STATUS");
    var0.setEndorsementLineCode(var3);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var9 = var0.getAddressLatitude();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var10 = var0.getAddressLatitudeDirection();
    java.lang.String var11 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var12 = var0.getAddressLatitude();
    java.util.List var13 = var0.getSupplementaryPostalServiceData();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);

  }

  public void test120() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test120");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var2 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var4 = var0.createSubPremiseTypeSubPremiseNumber();
    var4.setIndicator("hi!");
    var4.setContent("Uknown Status");
    java.lang.String var9 = var4.getContent();
    var4.setNumberTypeOccurrence("geo.google.datamodel.GeoAddress@2eda413f[\n  _coordinate=<null>\n  _addressDetails=oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails@7af1a720\n  _addressLine=geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "Uknown Status"+ "'", var9.equals("Uknown Status"));

  }

  public void test121() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test121");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var3 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var4 = var0.createPostBoxPostBoxNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserName var5 = var0.createLargeMailUserTypeLargeMailUserName();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var6 = var0.createXAL();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo var7 = var0.createPremisePremiseNumberRangePremiseNumberRangeTo();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var8 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var9 = var0.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var10 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var12 = var11.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var13 = var11.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var14 = var11.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var15 = var11.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var16 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var17 = var16.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var18 = var16.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var20 = var19.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var21 = var19.createPostBoxPostBoxNumberExtension();
    var16.setPostBoxNumberExtension(var21);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var23 = var16.getPostBoxNumberExtension();
    java.util.List var24 = var16.getAny();
    var15.setPostBox(var16);
    var15.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var28 = var15.getDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var29 = var15.getDependentLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var30 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var31 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var32 = var31.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var33 = var31.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var34 = var31.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var35 = var31.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var36 = var31.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var37 = var31.createFirmType();
    var30.setFirm(var37);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var39 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var40 = var39.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var41 = var39.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var42 = var39.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var43 = var39.createThoroughfare();
    java.util.List var44 = var43.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var45 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var46 = var45.getPostTown();
    var43.setPostalCode(var45);
    var37.setPostalCode(var45);
    var15.setPostalCode(var45);
    var10.setPostalCode(var45);
    var10.setDependentThoroughfaresIndicator("geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);

  }

  public void test122() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test122");


    geo.google.GeoException var1 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS");
    java.lang.Throwable[] var2 = var1.getSuppressed();
    geo.google.GeoException var3 = new geo.google.GeoException((java.lang.Throwable)var1);
    geo.google.GeoException var4 = new geo.google.GeoException((java.lang.Throwable)var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test123() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test123");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    java.util.List var3 = var2.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var4 = var2.getPostOfficeNumber();
    java.lang.String var5 = var2.getIndicator();
    java.util.Map var6 = var2.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test124() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test124");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumberExtension var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumberExtension();
    java.lang.String var1 = var0.getCode();
    var0.setContent("G_GEO_UNKOWN_STATUS");
    java.lang.String var4 = var0.getNumberExtensionSeparator();
    java.lang.String var5 = var0.getNumberExtensionSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test125() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test125");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    java.util.List var3 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var6 = var5.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var7 = var5.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var8 = var5.createThoroughfareLeadingTypeType();
    java.lang.String var9 = var8.getType();
    var0.setThoroughfareLeadingType(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var12 = var11.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var13 = var11.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var14 = var11.createThoroughfareTrailingTypeType();
    var0.setThoroughfareTrailingType(var14);
    var0.setDependentThoroughfares("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);

  }

  public void test126() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test126");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    var5.setType("geo.google.GeoException: ");
    java.lang.String var8 = var5.getIndicator();
    java.lang.String var9 = var5.getSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test127() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test127");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeName var6 = var0.createPostOfficePostOfficeName();
    java.util.Map var7 = var6.getOtherAttributes();
    java.lang.String var8 = var6.getContent();
    java.lang.String var9 = var6.getContent();
    java.util.Map var10 = var6.getOtherAttributes();
    java.util.Map var11 = var6.getOtherAttributes();
    java.lang.String var12 = var6.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test128() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test128");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    java.lang.String var1 = var0.getDependentThoroughfaresIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var3 = var2.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var4 = var2.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var5 = var2.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var6 = var2.createThoroughfarePostDirectionType();
    java.lang.String var7 = var6.getType();
    var6.setCode("Uknown Status");
    var0.setThoroughfarePostDirection(var6);
    java.lang.String var11 = var0.getDependentThoroughfares();
    java.util.List var12 = var0.getThoroughfareNumberOrThoroughfareNumberRange();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test129() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test129");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var1 = var0.getSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var3 = var2.getAny();
    var0.setSubPremise(var2);
    java.util.List var5 = var0.getSubPremiseNumberSuffix();
    java.util.Map var6 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var7 = var0.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var8 = var0.getPostalCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test130() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test130");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var3 = var0.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var4 = var0.createThoroughfareTrailingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    var5.setType("geo.google.GeoException: ");
    java.lang.String var8 = var5.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test131() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test131");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber();
    java.lang.String var1 = var0.getIndicatorOccurrence();
    java.lang.String var2 = var0.getIndicatorOccurrence();
    java.util.Map var3 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test132() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test132");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    java.lang.String var2 = var0.getValidToDate();
    java.lang.String var3 = var0.getAddressDetailsKey();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var4 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address();
    java.lang.String var5 = var4.getContent();
    var4.setType("Uknown Status");
    var4.setCode("UNKNOWN_LOCATION");
    var0.setAddress(var4);
    java.lang.String var11 = var4.getContent();
    var4.setContent("geo.google.datamodel.GeoAddress@4244bb8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test133() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test133");


    org.xml.sax.InputSource var1 = geo.google.utils.XmlUtils.stringToInputSource("geo.google.GeoException: , geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n],  UNKNOWN_LOCATION");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);

  }

  public void test134() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test134");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    java.lang.String var6 = var5.getSeparator();
    var5.setSeparator("geo.google.GeoException: ");
    java.lang.String var9 = var5.getRangeType();
    java.lang.String var10 = var5.getRangeType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test135() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test135");


    geo.google.datamodel.GeoCoordinate var14 = new geo.google.datamodel.GeoCoordinate();
    double var15 = var14.getLongitude();
    geo.google.datamodel.GeoCoordinate var16 = new geo.google.datamodel.GeoCoordinate();
    double var17 = var16.getLongitude();
    double var18 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var14, var16);
    double var19 = var16.getLatitude();
    var16.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var23 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var24 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var16, var23);
    geo.google.datamodel.GeoAddressAccuracy var26 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var27 = var26.getName();
    geo.google.datamodel.GeoUsAddress var28 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: hi!", "(default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.GeoException: ", "", "UNKNOWN_LOCATION", var16, var26);
    var28.setPostalCode("(default) Indicates to ignore an altitude specification");
    java.lang.String var31 = var28.getAddressLine2();
    java.lang.String var32 = var28.toAddressLine();
    java.lang.String var33 = var28.getAddressLine2();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "UNKNOWN_LOCATION"+ "'", var27.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "(default) Indicates to ignore an altitude specification"+ "'", var31.equals("(default) Indicates to ignore an altitude specification"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  (default) Indicates to ignore an altitude specification"+ "'", var32.equals("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  (default) Indicates to ignore an altitude specification"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "(default) Indicates to ignore an altitude specification"+ "'", var33.equals("(default) Indicates to ignore an altitude specification"));

  }

  public void test136() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test136");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var6 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var7 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var8 = var0.createPostalCodePostTown();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLine var9 = var0.createAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var10 = var0.createThoroughfare();
    var10.setDependentThoroughfaresType("hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var13 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var14 = var13.getPostTown();
    java.util.Map var15 = var13.getOtherAttributes();
    java.util.List var16 = var13.getPostalCodeNumberExtension();
    var10.setPostalCode(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var18 = var10.getFirm();
    java.util.List var19 = var10.getThoroughfareNumberOrThoroughfareNumberRange();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);

  }

  public void test137() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test137");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    var3.setContent("");
    java.lang.String var6 = var3.getNameNumberOccurrence();
    java.util.Map var7 = var3.getOtherAttributes();
    java.lang.String var8 = var3.getCode();
    java.lang.String var9 = var3.getCode();
    java.lang.String var10 = var3.getNameNumberOccurrence();
    var3.setContent("geo.google.datamodel.GeoUsAddress@1add92c3[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@48ce4dfc[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@606200bb[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test138() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test138");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var1 = var0.getPostalCode();
    java.util.List var2 = var0.getDependentLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.Department var3 = new oasis.names.tc.ciq.xsdschema.xal._2.Department();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var5 = var4.createPremise();
    java.util.List var6 = var5.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var7 = var5.getFirm();
    var5.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var11 = var10.createPremise();
    java.lang.String var12 = var11.getPremiseThoroughfareConnector();
    var5.setPremise(var11);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var15 = var14.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var16 = var14.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var17 = var14.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var18 = var17.getType();
    java.util.List var19 = var17.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var20 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var21 = var20.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var22 = var20.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var23 = var20.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var24 = var20.createThoroughfare();
    java.util.List var25 = var24.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var26 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var27 = var26.getPostTown();
    var24.setPostalCode(var26);
    var17.setPostalCode(var26);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var30 = var17.getPostalCode();
    var5.setPostalCode(var30);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var32 = var30.getPostTown();
    var3.setPostalCode(var30);
    java.util.List var34 = var30.getAddressLine();
    var0.setPostalCode(var30);
    java.util.List var36 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var37 = var0.getDependentLocality();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);

  }

  public void test139() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test139");


    geo.google.datamodel.GeoStatusCode var1 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    boolean var3 = var1.equals((java.lang.Object)10L);
    int var4 = var1.ordinal();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var6 = var5.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var7 = var5.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var8 = var5.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var9 = var5.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var10 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var11 = var10.getAddressLine();
    java.util.List var12 = var10.getAny();
    var9.setPostBox(var10);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var15 = var14.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var16 = var14.createDependentLocalityTypeDependentLocalityNumber();
    var16.setCode("G_GEO_UNKOWN_STATUS");
    var9.setDependentLocalityNumber(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var20 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var21 = var20.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var22 = var20.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var23 = var20.createDependentLocalityTypeDependentLocalityNumber();
    var23.setContent("");
    var23.setNameNumberOccurrence("");
    var23.setContent("hi!");
    var9.setDependentLocalityNumber(var23);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var31 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var32 = var31.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var33 = var31.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var34 = var31.createDependentLocalityTypeDependentLocalityNumber();
    var34.setContent("");
    var9.setDependentLocalityNumber(var34);
    boolean var38 = var1.equals((java.lang.Object)var9);
    java.lang.String var39 = var9.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);

  }

  public void test140() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test140");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var1 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var1.setThoroughfarePostDirection(var2);
    java.util.List var4 = var1.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var5 = var1.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var1.getPostalCode();
    var0.setThoroughfare(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var8 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var9 = var8.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var10 = var8.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var12 = var11.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var13 = var11.createPostBoxPostBoxNumberExtension();
    var8.setPostBoxNumberExtension(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var15 = var8.getPostBoxNumberExtension();
    java.util.List var16 = var8.getAny();
    var0.setPostBox(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var19 = var18.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var20 = var18.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var21 = var18.createLargeMailUserType();
    var0.setLargeMailUser(var21);
    java.util.List var23 = var21.getLargeMailUserName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);

  }

  public void test141() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test141");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var3 = var0.createAddressDetailsPostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var4 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var5 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo var6 = var0.createPremisePremiseNumberRangePremiseNumberRangeTo();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLine var7 = var0.createAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLine var8 = var0.createAddressLine();
    var8.setCode("geo.google.datamodel.GeoAddress@2ea7c82[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test142() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test142");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseName var3 = var0.createPremisePremiseName();
    var3.setCode("");
    java.util.Map var6 = var3.getOtherAttributes();
    java.lang.String var7 = var3.getContent();
    java.lang.String var8 = var3.getType();
    java.lang.String var9 = var3.getTypeOccurrence();
    var3.setCode("geo.google.GeoException: hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test143() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test143");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var5 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var6 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var7 = var0.createPostalRouteType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test144() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test144");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var1 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var1.setThoroughfarePostDirection(var2);
    java.util.List var4 = var1.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var5 = var1.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var1.getPostalCode();
    var0.setThoroughfare(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var8 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var9 = var8.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var10 = var8.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var12 = var11.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var13 = var11.createPostBoxPostBoxNumberExtension();
    var8.setPostBoxNumberExtension(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var15 = var8.getPostBoxNumberExtension();
    java.util.List var16 = var8.getAny();
    var0.setPostBox(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var18 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var20 = var19.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var21 = var19.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var22 = var19.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var23 = var19.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var24 = var19.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var25 = var19.createFirmType();
    var18.setFirm(var25);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var28 = var27.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var29 = var27.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var30 = var27.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var31 = var27.createThoroughfare();
    java.util.List var32 = var31.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var33 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var34 = var33.getPostTown();
    var31.setPostalCode(var33);
    var25.setPostalCode(var33);
    var8.setFirm(var25);
    var25.setType("");
    java.util.List var40 = var25.getFirmName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);

  }

  public void test145() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test145");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var2 = var0.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var3 = var2.getCode();
    java.util.Map var4 = var2.getOtherAttributes();
    var2.setCode("G_GEO_UNKOWN_STATUS");
    java.util.Map var7 = var2.getOtherAttributes();
    var2.setType("geo.google.GeoException: ");
    var2.setType("geo.google.datamodel.GeoAddress@49e11d13[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test146() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test146");


    geo.google.GeoAddressStandardizer var2 = new geo.google.GeoAddressStandardizer("geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", 0L);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoUsAddress var4 = var2.standardizeToGeoUsAddress("G_GEO_UNKOWN_STATUS");
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }

  }

  public void test147() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test147");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    var5.setIndicator("G_GEO_UNKOWN_STATUS");
    var5.setType("hi!");
    var5.setType("geo.google.GeoException: ");
    var5.setIndicator("geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var5.setRangeType("geo.google.datamodel.GeoAddress@357d260d[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test148() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test148");


    geo.google.datamodel.GeoAltitude var3 = new geo.google.datamodel.GeoAltitude(10.0d);
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var4 = var3.getMode();
    geo.google.datamodel.GeoCoordinate var5 = new geo.google.datamodel.GeoCoordinate(0.0d, 1.0d, var3);
    var3.setAltitude(230.36359592033764d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test149() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test149");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber();
    var0.setCode("");
    var0.setType("G_GEO_UNKOWN_STATUS");
    var0.setCode("hi!");
    java.lang.String var7 = var0.getType();
    java.lang.String var8 = var0.getIndicatorOccurrence();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var7.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test150() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test150");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    java.util.List var1 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var3 = var2.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var4 = var2.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var5 = var2.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var6 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var6.setThoroughfarePostDirection(var7);
    java.util.List var9 = var6.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var10 = var6.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var11 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var13 = var12.getCode();
    java.lang.String var14 = var12.getCode();
    var11.setThoroughfareTrailingType(var12);
    var6.setDependentThoroughfare(var11);
    var5.setDependentThoroughfare(var11);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var19 = var18.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var20 = var18.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var21 = var18.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var22 = var18.createThoroughfareLeadingTypeType();
    var11.setThoroughfareLeadingType(var22);
    var0.setThoroughfareLeadingType(var22);
    java.util.Map var25 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var26 = var0.getThoroughfareTrailingType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);

  }

  public void test151() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test151");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var4 = var0.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var5 = var0.createPostBoxPostBoxNumberExtension();
    java.lang.String var6 = var5.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test152() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test152");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var2 = var0.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var4 = var3.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var5 = var3.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var6 = var3.createAddressDetailsCountry();
    java.util.List var7 = var6.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var8 = var6.getThoroughfare();
    var0.setCountry(var6);
    var0.setCode("geo.google.GeoException: ");
    java.lang.String var12 = var0.getCurrentStatus();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test153() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test153");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var2 = var0.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var3 = var0.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName var4 = var0.createAdministrativeAreaAdministrativeAreaName();
    var4.setCode("geo.google.datamodel.GeoUsAddress@aae93c6[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@4b67b1a4[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@4bfaca9[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test154() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test154");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    var5.setType("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var5.setContent("geo.google.datamodel.GeoAddress@64b274a1[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var10 = var5.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var10.equals("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test155() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test155");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeName var6 = var0.createPostOfficePostOfficeName();
    java.util.Map var7 = var6.getOtherAttributes();
    var6.setType("geo.google.GeoException: ");
    var6.setType("geo.google.datamodel.GeoAddress@535811d6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test156() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test156");


    geo.google.GeoAddressStandardizer var1 = new geo.google.GeoAddressStandardizer("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var1.setRateLimitInterval(10L);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoUsAddress var5 = var1.standardizeToGeoUsAddress("geo.google.datamodel.GeoUsAddress@18a6d06f[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@6fbe340d[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@304b7acb[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }

  }

  public void test157() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test157");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var4 = var3.createPremise();
    var1.setPremise(var4);
    var4.setPremiseThoroughfareConnector("hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var8 = var4.getMailStop();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var9 = var4.getPremiseNumberRange();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test158() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test158");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var2 = var0.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var3 = var0.createPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var4 = var0.createAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var5 = var0.createPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var6 = var0.createLargeMailUserTypeLargeMailUserIdentifier();
    var6.setType("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var6.setContent("geo.google.datamodel.GeoUsAddress@46478daa[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@3a5b7f2[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@74cf72bc[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test159() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test159");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var1 = var0.getAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var2 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude();
    java.util.Map var3 = var2.getOtherAttributes();
    var0.setAddressLongitude(var2);
    var2.setContent("geo.google.GeoException: geo.google.GeoException: ");
    var2.setContent("G_GEO_UNKOWN_STATUS, geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n] geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test160() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test160");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    java.util.List var4 = var3.getSubAdministrativeAreaName();
    java.lang.String var5 = var3.getType();
    var3.setIndicator("");
    var3.setIndicator("Uknown Status");
    java.util.List var10 = var3.getSubAdministrativeAreaName();
    java.lang.String var11 = var3.getIndicator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "Uknown Status"+ "'", var11.equals("Uknown Status"));

  }

  public void test161() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test161");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var2 = var0.createSubPremiseTypeSubPremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var3 = var0.createSubPremiseType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var4 = var0.createThoroughfareThoroughfareNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var5 = var0.createAddressLinesType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var6 = var0.createAddressDetailsPostalServiceElementsAddressLongitude();
    var6.setCode("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var9 = var6.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "geo.google.GeoException: geo.google.GeoException: "+ "'", var9.equals("geo.google.GeoException: geo.google.GeoException: "));

  }

  public void test162() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test162");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode();
    java.lang.String var1 = var0.getType();
    java.lang.String var2 = var0.getContent();
    java.util.Map var3 = var0.getOtherAttributes();
    java.lang.String var4 = var0.getType();
    java.util.Map var5 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test163() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test163");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var6 = var0.createLargeMailUserType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test164() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test164");


    org.xml.sax.InputSource var1 = geo.google.utils.XmlUtils.stringToInputSource("geo.google.datamodel.GeoAddress@3c53f765[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=hi!\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);

  }

  public void test165() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test165");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    java.util.List var5 = var4.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var6 = var4.getThoroughfarePreDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var7 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    var4.setDependentThoroughfare(var7);
    java.util.List var9 = var7.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test166() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test166");


    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.CountryName();
    var0.setCode("hi!");
    var0.setType("hi!");
    var0.setType("G_GEO_UNKOWN_STATUS");
    java.lang.String var7 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));

  }

  public void test167() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test167");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var1 = var0.getSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var3 = var2.getAny();
    var0.setSubPremise(var2);
    java.util.List var5 = var0.getSubPremiseNumberSuffix();
    java.util.Map var6 = var0.getOtherAttributes();
    var0.setType("(default) Indicates to ignore an altitude specification");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var10 = var9.createPremise();
    java.util.List var11 = var10.getAddressLine();
    java.util.List var12 = var10.getAny();
    var10.setType("");
    var10.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var17 = var10.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var19 = var18.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var20 = var18.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var21 = var18.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var22 = var18.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var23 = var18.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var24 = var18.createFirmType();
    var10.setFirm(var24);
    java.util.List var26 = var24.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var28 = var27.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var29 = var27.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var30 = var27.createPostalCode();
    var24.setPostalCode(var30);
    java.util.List var32 = var30.getAddressLine();
    var0.setPostalCode(var30);
    java.util.List var34 = var30.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);

  }

  public void test168() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test168");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var1 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberPrefix var2 = var0.createPostBoxPostBoxNumberPrefix();
    java.lang.String var3 = var2.getNumberPrefixSeparator();
    var2.setNumberPrefixSeparator("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var6 = var2.getNumberPrefixSeparator();
    java.lang.String var7 = var2.getNumberPrefixSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var6.equals("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var7.equals("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test169() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test169");


    geo.google.datamodel.GeoAltitude var0 = new geo.google.datamodel.GeoAltitude();
    var0.setAltitude(1.0d);
    java.lang.String var3 = var0.toString();

  }

  public void test170() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test170");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var2 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var3 = var0.createBuildingNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var4 = var0.createXAL();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityName var5 = var0.createDependentLocalityTypeDependentLocalityName();
    var5.setContent("geo.google.datamodel.GeoAddress@1dd53212[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var8 = var5.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test171() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test171");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var3 = var0.getThoroughfarePostDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var5 = var4.getCode();
    java.lang.String var6 = var4.getCode();
    var0.setThoroughfareTrailingType(var4);
    java.util.List var8 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var10 = var9.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var11 = var9.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var12 = var9.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var13 = var9.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var14 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var15 = var14.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var16 = var14.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var18 = var17.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var19 = var17.createPostBoxPostBoxNumberExtension();
    var14.setPostBoxNumberExtension(var19);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var21 = var14.getPostBoxNumberExtension();
    java.util.List var22 = var14.getAny();
    var13.setPostBox(var14);
    var13.setType("");
    var0.setDependentLocality(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var28 = var27.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var29 = var27.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var30 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var31 = var30.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var32 = var30.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var33 = var30.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var34 = var30.createLargeMailUserTypeLargeMailUserIdentifier();
    java.lang.String var35 = var34.getIndicator();
    var29.setLargeMailUserIdentifier(var34);
    java.util.List var37 = var29.getLargeMailUserName();
    var13.setLargeMailUser(var29);
    java.util.Map var39 = var29.getOtherAttributes();
    var29.setType("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var42 = var29.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var42.equals("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test172() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test172");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var2 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var3 = var0.createThoroughfarePreDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var4 = var0.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var5 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test173() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test173");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var1 = var0.getIndicator();
    java.lang.String var2 = var0.getType();
    java.util.List var3 = var0.getAddressLine();
    java.util.List var4 = var0.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var6 = var5.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var7 = var5.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var8 = var5.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var9 = var5.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var10 = var5.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var11 = var5.createLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var12 = var11.getPremise();
    var11.setType("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var15 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var16 = var15.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var17 = var15.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var18 = var17.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var20 = var19.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var21 = var19.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var22 = var19.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var23 = var19.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var24 = var19.createLargeMailUserTypeLargeMailUserIdentifier();
    var17.setLargeMailUserIdentifier(var24);
    java.lang.String var26 = var17.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var27 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var27.setIndicator("G_GEO_UNKOWN_STATUS");
    var17.setPostBox(var27);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var31 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var32 = var31.getAddressLine();
    var17.setPostBox(var31);
    var11.setLargeMailUser(var17);
    java.util.List var35 = var11.getAddressLine();
    var0.setLocality(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);

  }

  public void test174() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test174");


    geo.google.datamodel.GeoCoordinate var0 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var1 = new geo.google.datamodel.GeoCoordinate();
    double var2 = var1.getLongitude();
    double var3 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var0, var1);
    geo.google.datamodel.GeoCoordinate var4 = var0.clone();
    geo.google.datamodel.GeoCoordinate var5 = new geo.google.datamodel.GeoCoordinate();
    double var6 = var5.getLongitude();
    geo.google.datamodel.GeoCoordinate var7 = new geo.google.datamodel.GeoCoordinate();
    double var8 = var7.getLongitude();
    double var9 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var5, var7);
    geo.google.datamodel.GeoCoordinate var10 = new geo.google.datamodel.GeoCoordinate();
    double var11 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var5, var10);
    double var12 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var0, var10);
    geo.google.datamodel.GeoAltitude var14 = new geo.google.datamodel.GeoAltitude(10.0d);
    var14.setAltitude((-1.0d));
    java.lang.String var17 = var14.toString();
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var18 = var14.getMode();
    var10.setAltitude(var14);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var20 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var21 = var20.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var22 = var20.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var23 = var20.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var24 = var20.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var25 = var24.getPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var26 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var27 = var26.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var28 = var26.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var29 = var28.getPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.Department var30 = var28.getDepartment();
    java.util.List var31 = var28.getBuildingName();
    var24.setLargeMailUser(var28);
    boolean var33 = var14.equals((java.lang.Object)var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);

  }

  public void test175() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test175");


    geo.google.GeoException var4 = new geo.google.GeoException("hi!");
    geo.google.datamodel.GeoStatusCode var7 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var8 = new geo.google.GeoException("", var7);
    java.lang.String var9 = var8.toString();
    geo.google.datamodel.GeoStatusCode var13 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var14 = new geo.google.GeoException("", var13);
    geo.google.datamodel.GeoStatusCode var17 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var18 = new geo.google.GeoException("", var17);
    geo.google.GeoException var19 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var14, var17);
    var8.addSuppressed((java.lang.Throwable)var19);
    var4.addSuppressed((java.lang.Throwable)var8);
    geo.google.datamodel.GeoStatusCode var25 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var26 = new geo.google.GeoException("", var25);
    java.lang.String var27 = var26.toString();
    geo.google.datamodel.GeoStatusCode var31 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var32 = new geo.google.GeoException("", var31);
    geo.google.datamodel.GeoStatusCode var35 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var36 = new geo.google.GeoException("", var35);
    geo.google.GeoException var37 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var32, var35);
    var26.addSuppressed((java.lang.Throwable)var37);
    geo.google.datamodel.GeoStatusCode var40 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    boolean var42 = var40.equals((java.lang.Object)10L);
    java.lang.String var43 = var40.name();
    int var44 = var40.getCode();
    geo.google.GeoException var45 = new geo.google.GeoException("", (java.lang.Throwable)var26, var40);
    java.lang.String var46 = var40.getDescription();
    geo.google.GeoException var47 = new geo.google.GeoException("Uknown Status", (java.lang.Throwable)var4, var40);
    geo.google.GeoException var48 = new geo.google.GeoException("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", (java.lang.Throwable)var4);
    geo.google.datamodel.GeoCoordinate var49 = new geo.google.datamodel.GeoCoordinate();
    double var50 = var49.getLongitude();
    geo.google.datamodel.GeoCoordinate var51 = new geo.google.datamodel.GeoCoordinate();
    double var52 = var51.getLongitude();
    double var53 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var49, var51);
    geo.google.datamodel.GeoCoordinate var54 = new geo.google.datamodel.GeoCoordinate();
    double var55 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var49, var54);
    geo.google.datamodel.GeoStatusCode var58 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var59 = new geo.google.GeoException("", var58);
    boolean var60 = var49.equals((java.lang.Object)var58);
    geo.google.GeoException var61 = new geo.google.GeoException("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", (java.lang.Throwable)var4, var58);
    java.lang.String var62 = var58.getCodeName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "geo.google.GeoException: "+ "'", var9.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "geo.google.GeoException: "+ "'", var27.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var43.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "Uknown Status"+ "'", var46.equals("Uknown Status"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var62.equals("G_GEO_UNKOWN_STATUS"));

  }

  public void test176() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test176");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var2 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    java.util.Map var4 = var3.getOtherAttributes();
    var3.setContent("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test177() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test177");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var4 = var3.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var5 = var3.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var6 = var3.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var7 = var3.createThoroughfare();
    var2.setThoroughfare(var7);
    var7.setDependentThoroughfaresConnector("geo.google.GeoException: , geo.google.GeoException: hi!,  UNKNOWN_LOCATION");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test178() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test178");


    geo.google.GeoAddressStandardizer var1 = new geo.google.GeoAddressStandardizer("G_GEO_UNKOWN_STATUS");
    var1.setApiKey("geo.google.GeoException: ");
    geo.google.datamodel.GeoCoordinate var11 = new geo.google.datamodel.GeoCoordinate();
    double var12 = var11.getLongitude();
    geo.google.datamodel.GeoCoordinate var13 = new geo.google.datamodel.GeoCoordinate();
    double var14 = var13.getLongitude();
    double var15 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var11, var13);
    double var16 = var13.getLatitude();
    var13.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var20 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var21 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var13, var20);
    java.lang.String var22 = var21.toAddressLine();
    java.lang.String var23 = var21.getCountry();
    geo.google.datamodel.GeoCoordinate var24 = new geo.google.datamodel.GeoCoordinate();
    double var25 = var24.getLongitude();
    geo.google.datamodel.GeoCoordinate var26 = new geo.google.datamodel.GeoCoordinate();
    double var27 = var26.getLongitude();
    double var28 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var24, var26);
    geo.google.datamodel.GeoCoordinate var29 = new geo.google.datamodel.GeoCoordinate();
    double var30 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var24, var29);
    geo.google.datamodel.GeoStatusCode var33 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var34 = new geo.google.GeoException("", var33);
    boolean var35 = var24.equals((java.lang.Object)var33);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var36 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var37 = var36.createPremise();
    java.util.List var38 = var37.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var39 = var37.getFirm();
    var37.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var42 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var43 = var42.createPremise();
    java.lang.String var44 = var43.getPremiseThoroughfareConnector();
    var37.setPremise(var43);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var46 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var47 = var46.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var48 = var46.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var49 = var46.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var50 = var49.getType();
    java.util.List var51 = var49.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var52 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var53 = var52.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var54 = var52.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var55 = var52.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var56 = var52.createThoroughfare();
    java.util.List var57 = var56.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var58 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var59 = var58.getPostTown();
    var56.setPostalCode(var58);
    var49.setPostalCode(var58);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var62 = var49.getPostalCode();
    var37.setPostalCode(var62);
    boolean var64 = var24.equals((java.lang.Object)var37);
    geo.google.datamodel.GeoCoordinate var65 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var66 = new geo.google.datamodel.GeoCoordinate();
    double var67 = var66.getLongitude();
    double var68 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var65, var66);
    geo.google.datamodel.GeoAltitude var69 = var66.getAltitude();
    geo.google.datamodel.GeoCoordinate var70 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var71 = new geo.google.datamodel.GeoCoordinate();
    double var72 = var71.getLongitude();
    double var73 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var70, var71);
    double var74 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var66, var71);
    double var75 = geo.google.datamodel.GeoUtils.distanceBetweenInMiles(var24, var71);
    geo.google.mapping.PointToCoordinateFunctor var76 = new geo.google.mapping.PointToCoordinateFunctor();
    com.google.earth.kml._2.PointType var77 = new com.google.earth.kml._2.PointType();
    var77.setTessellate((java.lang.Boolean)true);
    var77.setExtrude((java.lang.Boolean)false);
    geo.google.datamodel.GeoCoordinate var82 = var76.execute(var77);
    com.google.earth.kml._2.PointType var83 = new com.google.earth.kml._2.PointType();
    var83.setTessellate((java.lang.Boolean)true);
    java.lang.Boolean var86 = var83.isTessellate();
    geo.google.datamodel.GeoCoordinate var87 = var76.execute(var83);
    double var88 = geo.google.datamodel.GeoUtils.distanceBetweenInKm(var24, var87);
    boolean var89 = var21.equals((java.lang.Object)var87);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoAddress var90 = var1.standardizeToGeoAddress(var21);
      fail("Expected exception of type java.lang.RuntimeException");
    } catch (java.lang.RuntimeException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "geo.google.GeoException: , geo.google.GeoException: hi!,  UNKNOWN_LOCATION"+ "'", var22.equals("geo.google.GeoException: , geo.google.GeoException: hi!,  UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + ""+ "'", var23.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var28 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var30 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var67 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var73 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var74 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var75 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + true+ "'", var86.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var88 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var89 == false);

  }

  public void test179() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test179");


    geo.google.datamodel.GeoStatusCode var1 = geo.google.datamodel.GeoStatusCode.getStatusCode(10);
    java.lang.String var2 = var1.name();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var2.equals("G_GEO_UNKOWN_STATUS"));

  }

  public void test180() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test180");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    java.util.List var4 = var3.getAny();
    var3.setType("(default) Indicates to ignore an altitude specification");
    var3.setUsageType("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.List var9 = var3.getAddressLine();
    java.util.List var10 = var3.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);

  }

  public void test181() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test181");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    var2.setIndicator("geo.google.GeoException: geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var5 = var2.getPostalCode();
    java.lang.String var6 = var2.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test182() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test182");


    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix();
    var0.setCode("hi!");
    var0.setNumberSuffixSeparator("Uknown Status");
    var0.setNumberSuffixSeparator("geo.google.datamodel.GeoAddress@41778a2e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");

  }

  public void test183() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test183");


    geo.google.datamodel.GeoCoordinate var0 = new geo.google.datamodel.GeoCoordinate();
    double var1 = var0.getLongitude();
    geo.google.datamodel.GeoCoordinate var2 = new geo.google.datamodel.GeoCoordinate();
    double var3 = var2.getLongitude();
    double var4 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var0, var2);
    geo.google.datamodel.GeoCoordinate var5 = new geo.google.datamodel.GeoCoordinate();
    double var6 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var0, var5);
    geo.google.datamodel.GeoStatusCode var9 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var10 = new geo.google.GeoException("", var9);
    boolean var11 = var0.equals((java.lang.Object)var9);
    geo.google.datamodel.GeoAltitude var13 = new geo.google.datamodel.GeoAltitude(0.0d);
    var0.setAltitude(var13);
    geo.google.datamodel.GeoCoordinate var15 = new geo.google.datamodel.GeoCoordinate();
    double var16 = var15.getLongitude();
    geo.google.datamodel.GeoCoordinate var17 = new geo.google.datamodel.GeoCoordinate();
    double var18 = var17.getLongitude();
    double var19 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var15, var17);
    double var20 = var17.getLatitude();
    var17.setLatitude(0.0d);
    double var23 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var0, var17);
    geo.google.mapping.PointToCoordinateFunctor var24 = new geo.google.mapping.PointToCoordinateFunctor();
    com.google.earth.kml._2.PointType var25 = new com.google.earth.kml._2.PointType();
    var25.setTessellate((java.lang.Boolean)true);
    var25.setExtrude((java.lang.Boolean)false);
    geo.google.datamodel.GeoCoordinate var30 = var24.execute(var25);
    com.google.earth.kml._2.PointType var31 = new com.google.earth.kml._2.PointType();
    var31.setTessellate((java.lang.Boolean)true);
    java.lang.Boolean var34 = var31.isTessellate();
    geo.google.datamodel.GeoCoordinate var35 = var24.execute(var31);
    geo.google.mapping.FunctionChain var36 = geo.google.mapping.FunctionChain.getChain((geo.google.mapping.Functor)var24);
    com.google.earth.kml._2.PlacemarkType var37 = new com.google.earth.kml._2.PlacemarkType();
    var37.setAddress("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var40 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    java.lang.String var41 = var40.getValidToDate();
    var40.setAddressDetailsKey("hi!");
    var37.setAddressDetails(var40);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var45 = var37.getAddressDetails();
    com.google.earth.kml._2.PointType var46 = new com.google.earth.kml._2.PointType();
    var46.setTessellate((java.lang.Boolean)true);
    var46.setExtrude((java.lang.Boolean)false);
    var37.setPoint(var46);
    geo.google.datamodel.GeoCoordinate var52 = var24.execute(var46);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var53 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var54 = var53.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var55 = var53.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var56 = var53.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    java.lang.String var57 = var56.getContent();
    java.util.Map var58 = var56.getOtherAttributes();
    var56.setCode("geo.google.GeoException: hi!");
    boolean var61 = var52.equals((java.lang.Object)var56);
    double var62 = var17.distanceTo(var52);
    java.lang.String var63 = var17.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 69.09332413987235d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + true+ "'", var34.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 69.08999999999311d);

  }

  public void test184() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test184");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    java.util.List var4 = var3.getSubAdministrativeAreaName();
    java.lang.String var5 = var3.getType();
    var3.setIndicator("G_GEO_UNKOWN_STATUS");
    java.lang.String var8 = var3.getUsageType();
    var3.setUsageType("UNKNOWN_LOCATION");
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var11 = var3.getLocality();
    var3.setUsageType("geo.google.datamodel.GeoAddress@730dc6d0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test185() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test185");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var3 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var4 = var0.createPostBoxPostBoxNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserName var5 = var0.createLargeMailUserTypeLargeMailUserName();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var6 = var0.createXAL();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo var7 = var0.createPremisePremiseNumberRangePremiseNumberRangeTo();
    java.util.List var8 = var7.getAddressLine();
    java.util.List var9 = var7.getAddressLine();
    java.util.List var10 = var7.getPremiseNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);

  }

  public void test186() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test186");


    geo.google.datamodel.GeoStatusCode var1 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    boolean var3 = var1.equals((java.lang.Object)10L);
    java.lang.String var4 = var1.name();
    int var5 = var1.getCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var7 = var6.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var8 = var6.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var9 = var6.createAddressDetailsCountry();
    boolean var10 = var1.equals((java.lang.Object)var9);
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var11 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    var11.setIndicator("geo.google.GeoException: geo.google.GeoException: ");
    var9.setAdministrativeArea(var11);
    java.util.List var15 = var9.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var4.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);

  }

  public void test187() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test187");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix();
    java.lang.String var1 = var0.getContent();
    java.lang.String var2 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);

  }

  public void test188() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test188");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var2 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var3 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumber var4 = var0.createPostalCodePostalCodeNumber();
    java.lang.String var5 = var4.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test189() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test189");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection();
    java.lang.String var1 = var0.getCode();
    var0.setCode("geo.google.datamodel.GeoAddress@70027021[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);

  }

  public void test190() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test190");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType();
    java.util.List var1 = var0.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber var2 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber();
    var0.setPostalRouteNumber(var2);
    java.lang.String var4 = var0.getType();
    java.util.Map var5 = var0.getOtherAttributes();
    java.util.Map var6 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test191() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test191");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var3 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName var4 = var0.createAdministrativeAreaSubAdministrativeAreaSubAdministrativeAreaName();
    var4.setType("(default) Indicates to ignore an altitude specification");
    var4.setCode("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var9 = var4.getCode();
    var4.setContent("");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "geo.google.GeoException: geo.google.GeoException: "+ "'", var9.equals("geo.google.GeoException: geo.google.GeoException: "));

  }

  public void test192() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test192");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.Department var6 = var0.createDepartment();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var7 = var6.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var8 = var6.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var9 = var6.getMailStop();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test193() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test193");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var5 = var0.createFirmType();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberPrefix var6 = var0.createPremiseNumberPrefix();
    java.util.Map var7 = var6.getOtherAttributes();
    java.util.Map var8 = var6.getOtherAttributes();
    var6.setNumberPrefixSeparator("CLAMP_TO_GROUND");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test194() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test194");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var5 = var0.createAddressLinesType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var6 = var0.createThoroughfareDependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var7 = var0.createAddressLinesType();
    java.util.Map var8 = var7.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test195() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test195");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var5 = var0.createAddressLinesType();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var6 = var0.createBuildingNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var7 = var0.createPostalRouteTypePostalRouteName();
    var7.setType("geo.google.datamodel.GeoAddress@3c53f765[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test196() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test196");


    com.google.earth.kml._2.ObjectFactory var0 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var1 = var0.createResponseType();
    com.google.earth.kml._2.StatusType var2 = new com.google.earth.kml._2.StatusType();
    java.lang.String var3 = var2.getRequest();
    var1.setStatus(var2);
    com.google.earth.kml._2.ObjectFactory var5 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var6 = var5.createResponseType();
    com.google.earth.kml._2.StatusType var7 = new com.google.earth.kml._2.StatusType();
    java.lang.String var8 = var7.getRequest();
    var6.setStatus(var7);
    java.lang.String var10 = var7.getRequest();
    var1.setStatus(var7);
    var7.setRequest("geo.google.GeoException: , geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n],  UNKNOWN_LOCATION");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test197() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test197");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var4 = var3.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var5 = var3.getPostOffice();
    java.lang.String var6 = var3.getUsageType();
    java.util.Map var7 = var3.getOtherAttributes();
    java.lang.String var8 = var3.getUsageType();
    java.util.List var9 = var3.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test198() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test198");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var2 = var0.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var3 = var0.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber var5 = var0.createPostalRouteTypePostalRouteNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseName var6 = var0.createPremisePremiseName();
    java.lang.String var7 = var6.getTypeOccurrence();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test199() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test199");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier();
    java.lang.String var1 = var0.getCode();
    var0.setIdentifierType("geo.google.datamodel.GeoAddress@2c8fa0b9[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var4 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test200() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test200");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber();
    var0.setContent("geo.google.GeoException: geo.google.GeoException: ");
    var0.setContent("(default) Indicates to ignore an altitude specification");
    var0.setContent("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var7 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var7.equals("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test201() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test201");


    oasis.names.tc.ciq.xsdschema.xal._2.Department var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Department();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.getMailStop();
    java.util.List var2 = var0.getAny();
    java.util.List var3 = var0.getAny();
    geo.google.mapping.FunctionChain var4 = new geo.google.mapping.FunctionChain(var3);
    geo.google.mapping.Functor var5 = var4.getHead();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test202() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test202");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber var4 = var0.createPremiseNumber();
    var4.setType("hi!");
    var4.setType("geo.google.GeoException: ");
    java.lang.String var9 = var4.getIndicatorOccurrence();
    var4.setCode("geo.google.datamodel.GeoAddress@6921ddb6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var4.setType("hi!");
    java.lang.String var14 = var4.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "geo.google.datamodel.GeoAddress@6921ddb6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var14.equals("geo.google.datamodel.GeoAddress@6921ddb6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test203() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test203");


    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix();
    java.util.Map var1 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);

  }

  public void test204() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test204");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var2 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var4.setThoroughfarePostDirection(var5);
    java.util.List var7 = var4.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var8 = var4.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var9 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var11 = var10.getCode();
    java.lang.String var12 = var10.getCode();
    var9.setThoroughfareTrailingType(var10);
    var4.setDependentThoroughfare(var9);
    var3.setDependentThoroughfare(var9);
    var3.setDependentThoroughfares("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var18 = var3.getFirm();
    java.util.List var19 = var3.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var20 = var3.getDependentLocality();
    var3.setDependentThoroughfares("geo.google.datamodel.GeoAddress@49e11d13[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var23 = var3.getFirm();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);

  }

  public void test205() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test205");


    com.google.earth.kml._2.PlacemarkType var0 = new com.google.earth.kml._2.PlacemarkType();
    com.google.earth.kml._2.PointType var1 = var0.getPoint();
    var0.setId("");
    var0.setId("geo.google.GeoException: hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var6 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var7 = var6.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var8 = var6.getAddressLines();
    var6.setUsage("");
    var6.setCode("G_GEO_UNKOWN_STATUS");
    java.lang.String var13 = var6.getAddressDetailsKey();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var15 = var14.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var16 = var14.createSubPremiseTypeSubPremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var17 = var14.createSubPremiseType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var18 = var14.createThoroughfareThoroughfareNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var19 = var14.createAddressLinesType();
    var6.setAddressLines(var19);
    var0.setAddressDetails(var6);
    java.lang.Integer var22 = var6.getAccuracy();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);

  }

  public void test206() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test206");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var2 = var0.createSubPremiseTypeSubPremiseName();
    var2.setCode("G_GEO_UNKOWN_STATUS");
    java.lang.String var5 = var2.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test207() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test207");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData();
    java.util.Map var1 = var0.getOtherAttributes();
    java.lang.String var2 = var0.getContent();
    java.lang.String var3 = var0.getType();
    var0.setCode("geo.google.GeoException: ");
    java.util.Map var6 = var0.getOtherAttributes();
    java.lang.String var7 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test208() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test208");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var2 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var4 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var5 = var0.createSubPremiseTypeSubPremiseNumber();
    java.lang.String var6 = var5.getNumberTypeOccurrence();
    java.lang.String var7 = var5.getIndicatorOccurrence();
    var5.setCode("geo.google.datamodel.GeoUsAddress@49269587[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@422f796[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@13ac9af9[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test209() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test209");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    var0.setType("");
    java.lang.String var3 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var4 = var0.getThoroughfarePreDirection();
    var0.setType("geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test210() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test210");


    oasis.names.tc.ciq.xsdschema.xal._2.Locality var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var1.createPremise();
    java.util.List var3 = var2.getAddressLine();
    java.util.List var4 = var2.getAny();
    var2.setType("");
    var2.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var9 = var2.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var11 = var10.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var12 = var10.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var13 = var10.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var14 = var10.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var15 = var10.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var16 = var10.createFirmType();
    var2.setFirm(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var18 = var2.getMailStop();
    var2.setType("hi!");
    var0.setPremise(var2);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var22 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var23 = var22.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var24 = var22.createPostOffice();
    java.util.List var25 = var24.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var26 = var24.getPostOfficeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var27 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var28 = var27.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var29 = var27.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var30 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var31 = var30.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var32 = var30.createPostBoxPostBoxNumberExtension();
    var27.setPostBoxNumberExtension(var32);
    var24.setPostBox(var27);
    java.lang.String var35 = var24.getIndicator();
    var24.setIndicator("UNKNOWN_LOCATION");
    var0.setPostOffice(var24);
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var39 = var24.getPostOfficeNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);

  }

  public void test211() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test211");


    geo.google.datamodel.GeoCoordinate var7 = new geo.google.datamodel.GeoCoordinate();
    double var8 = var7.getLongitude();
    geo.google.datamodel.GeoCoordinate var9 = new geo.google.datamodel.GeoCoordinate();
    double var10 = var9.getLongitude();
    double var11 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var7, var9);
    double var12 = var9.getLatitude();
    var9.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var16 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var17 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var9, var16);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var19 = var18.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var20 = var18.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var21 = var18.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var22 = var18.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var23 = var18.createSubPremiseTypeSubPremiseNumber();
    java.lang.String var24 = var23.getType();
    boolean var25 = var17.equals((java.lang.Object)var23);
    java.lang.String var26 = var23.getIndicator();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);

  }

  public void test212() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test212");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    java.lang.String var11 = var9.getType();
    java.lang.String var12 = var9.getContent();
    java.lang.String var13 = var9.getIndicator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test213() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test213");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoAltitude.GeoAltitudeMode var1 = geo.google.datamodel.GeoAltitude.GeoAltitudeMode.valueOf("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test214() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test214");


    geo.google.GeoAddressStandardizer var1 = new geo.google.GeoAddressStandardizer("geo.google.datamodel.GeoUsAddress@18a6d06f[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@6fbe340d[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@304b7acb[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    geo.google.mapping.XmlToAddressFunctor var3 = geo.google.mapping.XmlToAddressFunctor.getInstance();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var4 = var1.standardize("geo.google.datamodel.GeoAddress@3cce2b1c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", (geo.google.mapping.XmlMappingFunctor)var3);
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test215() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test215");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode();
    java.lang.String var1 = var0.getContent();
    java.lang.String var2 = var0.getContent();
    java.util.Map var3 = var0.getOtherAttributes();
    java.lang.String var4 = var0.getCode();
    var0.setType("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var7 = var0.getOtherAttributes();
    var0.setCode("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test216() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test216");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var1 = var0.getSubPremiseNumberPrefix();
    var0.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var5 = var4.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var6 = var5.getMailStopNumber();
    java.util.Map var7 = var5.getOtherAttributes();
    var0.setMailStop(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var10 = var9.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var11 = var9.createSubPremiseTypeSubPremiseLocation();
    java.lang.String var12 = var11.getCode();
    var0.setSubPremiseLocation(var11);
    java.util.List var14 = var0.getSubPremiseNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var15 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var16 = var15.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var17 = var15.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var18 = var15.createSubPremiseTypeSubPremiseLocation();
    var18.setCode("geo.google.GeoException: geo.google.GeoException: ");
    var18.setContent("geo.google.datamodel.GeoAddress@2c8fa0b9[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setSubPremiseLocation(var18);
    var18.setContent("geo.google.datamodel.GeoUsAddress@56cc18ee[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@7178ddc6[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@36282c5d[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);

  }

  public void test217() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test217");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData();
    java.util.Map var1 = var0.getOtherAttributes();
    java.lang.String var2 = var0.getType();
    var0.setType("UNKNOWN_LOCATION");
    java.lang.String var5 = var0.getContent();
    var0.setCode("geo.google.datamodel.GeoAddress@535811d6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test218() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test218");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var3 = var0.getThoroughfarePostDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var5 = var4.getCode();
    java.lang.String var6 = var4.getCode();
    var0.setThoroughfareTrailingType(var4);
    java.util.List var8 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var10 = var9.getCode();
    java.lang.String var11 = var9.getCode();
    var0.setThoroughfareTrailingType(var9);
    var9.setCode("geo.google.GeoException: hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test219() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test219");


    com.google.earth.kml._2.PlacemarkType var0 = new com.google.earth.kml._2.PlacemarkType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var1 = var0.getAddressDetails();
    java.lang.String var2 = var0.getAddress();
    com.google.earth.kml._2.PointType var3 = new com.google.earth.kml._2.PointType();
    var3.setTessellate((java.lang.Boolean)true);
    var3.setExtrude((java.lang.Boolean)false);
    java.lang.Boolean var8 = var3.isExtrude();
    var3.setExtrude((java.lang.Boolean)true);
    var0.setPoint(var3);
    var3.setTessellate((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + false+ "'", var8.equals(false));

  }

  public void test220() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test220");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var1 = var0.getSubPremiseNumberPrefix();
    var0.setType("");
    java.util.List var4 = var0.getSubPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var5 = var0.getSubPremise();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test221() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test221");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    java.util.List var3 = var2.getAddressLine();
    java.util.List var4 = var2.getLargeMailUserName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = var2.getPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var7 = var6.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var8 = var6.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var9 = var6.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var10 = var6.createThoroughfare();
    java.util.List var11 = var10.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var12 = var10.getPremise();
    var2.setThoroughfare(var10);
    var10.setDependentThoroughfaresType("geo.google.datamodel.GeoAddress@535811d6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test222() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test222");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    java.util.List var5 = var4.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var6 = var4.getThoroughfarePreDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var7 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    var4.setDependentThoroughfare(var7);
    java.lang.String var9 = var4.getDependentThoroughfaresIndicator();
    var4.setDependentThoroughfaresConnector("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var12 = var4.getThoroughfarePostDirection();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test223() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test223");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    var0.setSeparator("Uknown Status");
    java.lang.String var3 = var0.getIndicator();
    java.lang.String var4 = var0.getType();
    var0.setCode("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var7 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    var7.setNumberRangeOccurrence("geo.google.GeoException: geo.google.GeoException: ");
    var7.setType("Uknown Status");
    var7.setRangeType("");
    java.lang.String var14 = var7.getRangeType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var15 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo();
    java.util.List var16 = var15.getContent();
    java.util.Map var17 = var15.getOtherAttributes();
    var7.setThoroughfareNumberTo(var15);
    java.util.Map var19 = var15.getOtherAttributes();
    var0.setThoroughfareNumberTo(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);

  }

  public void test224() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test224");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    java.util.List var3 = var1.getAny();
    var1.setType("");
    var1.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var8 = var1.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var10 = var9.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var11 = var9.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var12 = var9.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var13 = var9.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var14 = var9.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var15 = var9.createFirmType();
    var1.setFirm(var15);
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var17 = var1.getMailStop();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var18 = var1.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var19 = var1.getPostalCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);

  }

  public void test225() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test225");


    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeName();
    java.lang.String var1 = var0.getContent();
    java.util.Map var2 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test226() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test226");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    var0.setType("");
    java.lang.String var3 = var0.getType();
    java.util.List var4 = var0.getThoroughfareName();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var5 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var5.setThoroughfarePostDirection(var6);
    java.util.List var8 = var5.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var9 = var5.getThoroughfareLeadingType();
    java.util.List var10 = var5.getThoroughfareNumberOrThoroughfareNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var12 = var11.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var13 = var11.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var14 = var11.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var15 = var11.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var16 = var15.getPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var17 = var15.getDependentLocalityNumber();
    var5.setDependentLocality(var15);
    java.lang.String var19 = var5.getType();
    java.util.Map var20 = var5.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var21 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var21.setType("hi!");
    var5.setThoroughfarePostDirection(var21);
    var21.setCode("UNKNOWN_LOCATION");
    var21.setType("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var21.setCode("geo.google.datamodel.GeoAddress@26f2d88c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setThoroughfarePostDirection(var21);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var32 = var0.getThoroughfarePreDirection();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);

  }

  public void test227() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test227");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode();
    java.lang.String var1 = var0.getType();
    java.lang.String var2 = var0.getContent();
    java.lang.String var3 = var0.getCode();
    java.lang.String var4 = var0.getContent();
    java.util.Map var5 = var0.getOtherAttributes();
    var0.setCode("geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test228() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test228");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var1 = var0.getSubPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var2 = var0.getPostalCode();
    java.util.List var3 = var0.getSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var4 = var0.getSubPremiseLocation();
    java.util.List var5 = var0.getSubPremiseNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test229() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test229");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    java.lang.Integer var2 = var0.getAccuracy();
    java.lang.String var3 = var0.getCode();
    var0.setCurrentStatus("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var6 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address();
    java.lang.String var7 = var6.getContent();
    var6.setCode("");
    var0.setAddress(var6);
    java.lang.String var11 = var6.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test230() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test230");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var3 = var0.createLargeMailUserTypeLargeMailUserIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var4 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var5 = var0.createBuildingNameType();
    var5.setContent("geo.google.datamodel.GeoAddress@16896f61[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test231() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test231");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var2 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var3 = var0.createBuildingNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var4 = var0.createXAL();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    var5.setSeparator("geo.google.datamodel.GeoUsAddress@18a6d06f[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@6fbe340d[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@304b7acb[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test232() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test232");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var1 = var0.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var3 = var2.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var4 = var2.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var5 = var2.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var6 = var5.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var7 = var5.getPostOffice();
    java.lang.String var8 = var5.getUsageType();
    java.util.List var9 = var5.getAddressLine();
    var0.setSubAdministrativeArea(var5);
    java.lang.String var11 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var12 = var0.getSubAdministrativeArea();
    var0.setType("geo.google.GeoException: hi!");
    java.lang.String var15 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "geo.google.GeoException: hi!"+ "'", var15.equals("geo.google.GeoException: hi!"));

  }

  public void test233() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test233");


    geo.google.mapping.XmlToUsAddressFunctor var0 = geo.google.mapping.XmlToUsAddressFunctor.getInstance();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.util.List var2 = var0.execute("UNKNOWN_LOCATION");
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var0);

  }

  public void test234() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test234");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    var5.setIndicator("geo.google.GeoException: ");
    var5.setRangeType("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo var10 = var5.getPremiseNumberRangeTo();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test235() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test235");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var2 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var3 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var4 = var0.createPostBox();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test236() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test236");


    com.google.earth.kml._2.ObjectFactory var0 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var1 = var0.createResponseType();
    com.google.earth.kml._2.PointType var2 = new com.google.earth.kml._2.PointType();
    var2.setTessellate((java.lang.Boolean)true);
    var2.setExtrude((java.lang.Boolean)false);
    java.lang.Boolean var7 = var2.isExtrude();
    var2.setCoordinates("Uknown Status");
    javax.xml.bind.JAXBElement var10 = var0.createPoint(var2);
    com.google.earth.kml._2.StatusType var11 = var0.createStatusType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + false+ "'", var7.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);

  }

  public void test237() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test237");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var6 = var0.createAddressDetailsPostalServiceElementsAddressLatitude();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var7 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberSuffix var8 = var0.createSubPremiseTypeSubPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var9 = var0.createAddressDetailsCountry();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test238() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test238");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber();
    var0.setNumberTypeOccurrence("hi!");
    var0.setIndicator("geo.google.GeoException: ");
    java.lang.String var5 = var0.getType();
    java.lang.String var6 = var0.getType();
    var0.setContent("geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setCode("geo.google.datamodel.GeoUsAddress@46478daa[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@3a5b7f2[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@74cf72bc[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setType("geo.google.datamodel.GeoAddress@2eda413f[\n  _coordinate=<null>\n  _addressDetails=oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails@7af1a720\n  _addressLine=geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var13 = var0.getNumberTypeOccurrence();
    var0.setType("geo.google.datamodel.GeoAddress@357d260d[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "hi!"+ "'", var13.equals("hi!"));

  }

  public void test239() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test239");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var3 = var0.createAddressDetailsCountry();
    java.util.List var4 = var3.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var5 = var3.getThoroughfare();
    java.util.List var6 = var3.getCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var7 = var3.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var8 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var8.setThoroughfarePostDirection(var9);
    java.util.List var11 = var8.getThoroughfareNumberSuffix();
    var8.setDependentThoroughfaresIndicator("hi!");
    var8.setDependentThoroughfaresType("");
    var3.setThoroughfare(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var17 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var18 = var17.getIndicator();
    var17.setUsageType("UNKNOWN_LOCATION");
    var3.setAdministrativeArea(var17);
    java.util.List var22 = var3.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var23 = var3.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var24 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var25 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    var24.setLocality(var25);
    var3.setLocality(var25);
    java.util.List var28 = var25.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);

  }

  public void test240() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test240");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData();
    var0.setContent("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var3 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var3.equals("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test241() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test241");


    geo.google.mapping.PointToCoordinateFunctor var0 = geo.google.mapping.PointToCoordinateFunctor.getInstance();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var1.createPremise();
    java.util.List var3 = var2.getAddressLine();
    geo.google.mapping.FunctionChain var4 = new geo.google.mapping.FunctionChain(var3);
    geo.google.mapping.FunctionChain var5 = new geo.google.mapping.FunctionChain((geo.google.mapping.Functor)var0, var4);
    geo.google.mapping.PointToCoordinateFunctor var6 = geo.google.mapping.PointToCoordinateFunctor.getInstance();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var8 = var7.createPremise();
    java.util.List var9 = var8.getAddressLine();
    geo.google.mapping.FunctionChain var10 = new geo.google.mapping.FunctionChain(var9);
    geo.google.mapping.FunctionChain var11 = new geo.google.mapping.FunctionChain((geo.google.mapping.Functor)var6, var10);
    var5.setHead((geo.google.mapping.Functor)var6);
    geo.google.mapping.PointToCoordinateFunctor var13 = geo.google.mapping.PointToCoordinateFunctor.getInstance();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var15 = var14.createPremise();
    java.util.List var16 = var15.getAddressLine();
    geo.google.mapping.FunctionChain var17 = new geo.google.mapping.FunctionChain(var16);
    geo.google.mapping.FunctionChain var18 = new geo.google.mapping.FunctionChain((geo.google.mapping.Functor)var13, var17);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var20 = var19.createPremise();
    java.util.List var21 = var20.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var22 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var23 = var22.createPremise();
    var20.setPremise(var23);
    var23.setPremiseThoroughfareConnector("hi!");
    java.util.List var27 = var23.getPremiseName();
    geo.google.mapping.FunctionChain var28 = new geo.google.mapping.FunctionChain(var27);
    var18.setTail(var28);
    geo.google.mapping.FunctionChain var30 = new geo.google.mapping.FunctionChain((geo.google.mapping.Functor)var6, var28);
    geo.google.mapping.Functor[] var31 = new geo.google.mapping.Functor[] { var6};
    geo.google.mapping.FunctionChain var32 = new geo.google.mapping.FunctionChain(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);

  }

  public void test242() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test242");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var2 = var0.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var4 = var0.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test243() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test243");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier();
    var0.setContent("G_GEO_UNKOWN_STATUS");
    var0.setCode("geo.google.GeoException: ");
    java.lang.String var5 = var0.getType();
    java.lang.String var6 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test244() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test244");


    geo.google.datamodel.GeoAddress var0 = new geo.google.datamodel.GeoAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var1 = var0.getAddressDetails();
    geo.google.datamodel.GeoCoordinate var2 = var0.getCoordinate();
    var0.setAddressLine("geo.google.datamodel.GeoAddress@2ea7c82[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    geo.google.datamodel.GeoAddressAccuracy var6 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    var0.setAccuracy(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test245() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test245");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var2 = var1.getCode();
    java.lang.String var3 = var1.getCode();
    var0.setThoroughfareTrailingType(var1);
    java.util.List var5 = var0.getAny();
    geo.google.mapping.FunctionChain var6 = new geo.google.mapping.FunctionChain(var5);
    geo.google.mapping.PointToCoordinateFunctor var7 = geo.google.mapping.PointToCoordinateFunctor.getInstance();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var9 = var8.createPremise();
    java.util.List var10 = var9.getAddressLine();
    geo.google.mapping.FunctionChain var11 = new geo.google.mapping.FunctionChain(var10);
    geo.google.mapping.FunctionChain var12 = new geo.google.mapping.FunctionChain((geo.google.mapping.Functor)var7, var11);
    geo.google.mapping.Functor var13 = var12.getHead();
    var6.setHead(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);

  }

  public void test246() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test246");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var1 = var0.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.getPostOffice();
    java.lang.String var3 = var0.getType();
    java.lang.String var4 = var0.getIndicator();
    java.lang.String var5 = var0.getType();
    java.lang.String var6 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test247() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test247");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumberExtension var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumberExtension();
    java.lang.String var1 = var0.getContent();
    var0.setNumberExtensionSeparator("geo.google.GeoException: geo.google.GeoException: ");
    var0.setCode("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setType("geo.google.datamodel.GeoAddress@41778a2e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);

  }

  public void test248() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test248");


    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var2 = var1.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var3 = var1.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var4 = var1.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var5 = var1.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var6 = var1.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var7 = var1.createFirmType();
    var0.setFirm(var7);
    var0.setType("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var11 = var0.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var13 = var12.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var14 = var12.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var15 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var16 = var15.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var17 = var15.createPostBoxPostBoxNumberExtension();
    var12.setPostBoxNumberExtension(var17);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var19 = var12.getPostBoxNumberExtension();
    java.util.List var20 = var12.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var21 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var22 = var21.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var23 = var21.createPostBoxPostBoxNumberExtension();
    java.lang.String var24 = var23.getNumberExtensionSeparator();
    java.lang.String var25 = var23.getNumberExtensionSeparator();
    var12.setPostBoxNumberExtension(var23);
    var0.setPostBoxNumberExtension(var23);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var28 = var0.getPostBoxNumberSuffix();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);

  }

  public void test249() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test249");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode();
    var0.setContent("geo.google.datamodel.GeoAddress@2c8fa0b9[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setScheme("geo.google.datamodel.GeoAddress@6921ddb6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");

  }

  public void test250() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test250");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var5 = var0.createAddressDetailsPostalServiceElementsBarcode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumber var6 = var0.createPostalCodePostalCodeNumber();
    java.lang.String var7 = var6.getContent();
    java.lang.String var8 = var6.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test251() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test251");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseName var3 = var0.createPremisePremiseName();
    java.lang.String var4 = var3.getTypeOccurrence();
    var3.setCode("hi!");
    java.lang.String var7 = var3.getContent();
    var3.setContent("geo.google.datamodel.GeoAddress@64b274a1[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var10 = var3.getOtherAttributes();
    var3.setTypeOccurrence("geo.google.datamodel.GeoAddress@3c53f765[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);

  }

  public void test252() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test252");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var6 = var5.getAddressLine();
    java.util.List var7 = var5.getAny();
    var4.setPostBox(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var10 = var9.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var11 = var9.createDependentLocalityTypeDependentLocalityNumber();
    var11.setCode("G_GEO_UNKOWN_STATUS");
    var4.setDependentLocalityNumber(var11);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var15 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var16 = var15.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var17 = var15.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var18 = var15.createDependentLocalityTypeDependentLocalityNumber();
    var18.setContent("");
    var18.setNameNumberOccurrence("");
    var18.setContent("hi!");
    var4.setDependentLocalityNumber(var18);
    var4.setConnector("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var28 = var4.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var29 = var4.getThoroughfare();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);

  }

  public void test253() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test253");


    geo.google.datamodel.GeoStatusCode var2 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    boolean var4 = var2.equals((java.lang.Object)10L);
    java.lang.String var5 = var2.name();
    int var6 = var2.getCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var8 = var7.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var9 = var7.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var10 = var7.createAddressDetailsCountry();
    boolean var11 = var2.equals((java.lang.Object)var10);
    java.lang.String var12 = var2.getDescription();
    geo.google.GeoException var13 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", var2);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var15 = var14.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var16 = var14.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var17 = var14.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var18 = var14.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var19 = var14.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var20 = var14.createPostBoxPostBoxNumber();
    boolean var21 = var2.equals((java.lang.Object)var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var5.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "Uknown Status"+ "'", var12.equals("Uknown Status"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == false);

  }

  public void test254() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test254");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var6 = var0.createXAL();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var7 = var0.createSubPremiseType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var8 = var7.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var9 = var7.getFirm();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test255() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test255");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var1 = var0.getSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var3 = var2.getAny();
    var0.setSubPremise(var2);
    java.util.List var5 = var0.getSubPremiseNumberSuffix();
    java.util.Map var6 = var0.getOtherAttributes();
    var0.setType("(default) Indicates to ignore an altitude specification");
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var9 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var10 = var9.getSubPremiseNumberPrefix();
    var9.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var14 = var13.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var15 = var14.getMailStopNumber();
    java.util.Map var16 = var14.getOtherAttributes();
    var9.setMailStop(var14);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var19 = var18.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var20 = var18.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var21 = var20.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var22 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var23 = var22.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var24 = var22.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var25 = var22.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var26 = var22.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var27 = var22.createLargeMailUserTypeLargeMailUserIdentifier();
    var20.setLargeMailUserIdentifier(var27);
    java.lang.String var29 = var20.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var30 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var30.setIndicator("G_GEO_UNKOWN_STATUS");
    var20.setPostBox(var30);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var34 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var35 = var34.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var36 = var34.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var37 = var34.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var38 = var34.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var39 = var34.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var40 = var34.createFirmType();
    var30.setFirm(var40);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var42 = var40.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var43 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    var40.setMailStop(var43);
    var9.setFirm(var40);
    java.lang.String var46 = var9.getType();
    var0.setSubPremise(var9);
    java.util.List var48 = var0.getSubPremiseNumberSuffix();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + ""+ "'", var46.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);

  }

  public void test256() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test256");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    var3.setCode("G_GEO_UNKOWN_STATUS");
    var3.setType("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test257() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test257");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var1 = var0.getIndicator();
    java.lang.String var2 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var4 = var3.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var5 = var3.createPostOffice();
    var0.setPostOffice(var5);
    java.util.List var7 = var5.getPostOfficeName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var8 = var5.getPostalCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test258() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test258");


    geo.google.GeoException var1 = new geo.google.GeoException("hi!");
    geo.google.datamodel.GeoStatusCode var4 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var5 = new geo.google.GeoException("", var4);
    java.lang.String var6 = var5.toString();
    geo.google.datamodel.GeoStatusCode var10 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var11 = new geo.google.GeoException("", var10);
    geo.google.datamodel.GeoStatusCode var14 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var15 = new geo.google.GeoException("", var14);
    geo.google.GeoException var16 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var11, var14);
    var5.addSuppressed((java.lang.Throwable)var16);
    var1.addSuppressed((java.lang.Throwable)var5);
    geo.google.GeoException var19 = new geo.google.GeoException((java.lang.Throwable)var5);
    geo.google.GeoException var20 = new geo.google.GeoException((java.lang.Throwable)var19);
    geo.google.GeoException var21 = new geo.google.GeoException((java.lang.Throwable)var19);
    java.lang.Throwable[] var22 = var19.getSuppressed();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "geo.google.GeoException: "+ "'", var6.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);

  }

  public void test259() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test259");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var6 = var0.createLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var7 = var6.getPremise();
    java.lang.String var8 = var6.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var9 = var6.getThoroughfare();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test260() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test260");


    oasis.names.tc.ciq.xsdschema.xal._2.Department.DepartmentName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Department.DepartmentName();
    java.lang.String var1 = var0.getType();
    var0.setContent("");
    var0.setCode("");
    java.lang.String var6 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + ""+ "'", var6.equals(""));

  }

  public void test261() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test261");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var2 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var3 = var0.createBuildingNameType();
    var3.setContent("geo.google.GeoException: ");
    java.lang.String var6 = var3.getContent();
    java.lang.String var7 = var3.getTypeOccurrence();
    var3.setType("geo.google.GeoException: geo.google.GeoException: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "geo.google.GeoException: "+ "'", var6.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test262() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test262");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var2 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var3 = var0.createBuildingNameType();
    var3.setType("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var6 = var3.getCode();
    var3.setCode("geo.google.datamodel.GeoUsAddress@46478daa[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@3a5b7f2[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@74cf72bc[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var9 = var3.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test263() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test263");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType();
    var0.setCode("geo.google.GeoException: ");
    var0.setCode("");
    java.lang.String var5 = var0.getContent();
    var0.setContent("G_GEO_UNKOWN_STATUS");
    java.lang.String var8 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var8.equals("G_GEO_UNKOWN_STATUS"));

  }

  public void test264() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test264");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var5 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var6 = var0.createThoroughfareNumberPrefix();
    java.lang.String var7 = var6.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test265() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test265");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix();
    var0.setNumberPrefixSeparator("G_GEO_UNKOWN_STATUS");
    java.lang.String var3 = var0.getCode();
    java.util.Map var4 = var0.getOtherAttributes();
    var0.setNumberPrefixSeparator("geo.google.datamodel.GeoUsAddress@46478daa[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@3a5b7f2[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@74cf72bc[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test266() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test266");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    var5.setType("geo.google.GeoException: ");
    java.lang.String var8 = var5.getIndicator();
    var5.setType("UNKNOWN_LOCATION");
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom var11 = new oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom();
    java.util.List var12 = var11.getPremiseNumber();
    java.util.List var13 = var11.getAddressLine();
    java.util.List var14 = var11.getPremiseNumberSuffix();
    java.util.List var15 = var11.getPremiseNumberPrefix();
    java.util.List var16 = var11.getPremiseNumberSuffix();
    java.util.List var17 = var11.getPremiseNumber();
    java.util.List var18 = var11.getAddressLine();
    var5.setPremiseNumberRangeFrom(var11);
    java.util.List var20 = var11.getPremiseNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);

  }

  public void test267() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test267");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    java.lang.String var4 = var3.getNumberSuffixSeparator();
    java.lang.String var5 = var3.getCode();
    var3.setContent("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var8 = var3.getNumberSuffixSeparator();
    var3.setContent("(default) Indicates to ignore an altitude specification");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test268() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test268");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    java.util.List var3 = var1.getAny();
    var1.setType("");
    var1.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var8 = var1.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var10 = var9.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var11 = var9.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var12 = var9.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var13 = var9.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var14 = var9.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var15 = var9.createFirmType();
    var1.setFirm(var15);
    java.util.List var17 = var15.getAddressLine();
    java.util.List var18 = var15.getFirmName();
    java.util.Map var19 = var15.getOtherAttributes();
    java.util.List var20 = var15.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);

  }

  public void test269() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test269");


    geo.google.GeoAddressStandardizer var1 = new geo.google.GeoAddressStandardizer("geo.google.GeoException: hi!");
    geo.google.datamodel.GeoCoordinate var9 = new geo.google.datamodel.GeoCoordinate();
    double var10 = var9.getLongitude();
    geo.google.datamodel.GeoCoordinate var11 = new geo.google.datamodel.GeoCoordinate();
    double var12 = var11.getLongitude();
    double var13 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var9, var11);
    geo.google.datamodel.GeoCoordinate var21 = new geo.google.datamodel.GeoCoordinate();
    double var22 = var21.getLongitude();
    geo.google.datamodel.GeoCoordinate var23 = new geo.google.datamodel.GeoCoordinate();
    double var24 = var23.getLongitude();
    double var25 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var21, var23);
    double var26 = var23.getLatitude();
    var23.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var30 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var31 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var23, var30);
    geo.google.datamodel.GeoUsAddress var32 = new geo.google.datamodel.GeoUsAddress("G_GEO_UNKOWN_STATUS", "geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", var9, var30);
    java.lang.String var33 = var32.toAddressLine();
    java.lang.String var34 = var32.getAddressLine1();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoUsAddress var35 = var1.standardizeToGeoUsAddress(var32);
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "G_GEO_UNKOWN_STATUS, geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n] geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var33.equals("G_GEO_UNKOWN_STATUS, geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n] geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var34.equals("G_GEO_UNKOWN_STATUS"));

  }

  public void test270() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test270");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var2 = var0.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var4 = var3.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var5 = var3.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var6 = var3.createAddressDetailsCountry();
    java.util.List var7 = var6.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var8 = var6.getThoroughfare();
    var0.setCountry(var6);
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var10 = var0.getAdministrativeArea();
    java.lang.String var11 = var0.getCurrentStatus();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var12 = var0.getCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var14 = var13.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var15 = var13.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var16 = var13.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var17 = var13.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var18 = var13.createAddressLinesType();
    java.util.List var19 = var18.getAny();
    java.util.List var20 = var18.getAddressLine();
    var0.setAddressLines(var18);
    java.util.Map var22 = var18.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);

  }

  public void test271() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test271");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName();
    java.util.Map var1 = var0.getOtherAttributes();
    java.lang.String var2 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);

  }

  public void test272() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test272");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressLine var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressLine();
    var0.setCode("G_GEO_UNKOWN_STATUS");
    java.lang.String var3 = var0.getContent();
    java.lang.String var4 = var0.getCode();
    var0.setContent("UNKNOWN_LOCATION");
    var0.setContent("geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var9 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var4.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test273() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test273");


    com.google.earth.kml._2.ObjectFactory var0 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var1 = var0.createResponseType();
    com.google.earth.kml._2.StatusType var2 = new com.google.earth.kml._2.StatusType();
    java.lang.String var3 = var2.getRequest();
    var1.setStatus(var2);
    java.lang.String var5 = var2.getRequest();
    java.lang.String var6 = var2.getRequest();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test274() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test274");


    com.google.earth.kml._2.PlacemarkType var0 = new com.google.earth.kml._2.PlacemarkType();
    com.google.earth.kml._2.PointType var1 = var0.getPoint();
    var0.setId("");
    java.lang.String var4 = var0.getId();
    java.lang.String var5 = var0.getId();
    var0.setAddress("geo.google.datamodel.GeoAddress@3c53f765[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=hi!\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + ""+ "'", var5.equals(""));

  }

  public void test275() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test275");


    oasis.names.tc.ciq.xsdschema.xal._2.Department var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Department();
    java.util.List var1 = var0.getDepartmentName();
    java.util.List var2 = var0.getDepartmentName();
    java.lang.String var3 = var0.getType();
    java.util.List var4 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var5 = var0.getMailStop();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test276() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test276");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    java.lang.String var11 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var12.setIndicator("G_GEO_UNKOWN_STATUS");
    var2.setPostBox(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var17 = var16.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var18 = var16.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var19 = var16.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var20 = var16.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var21 = var16.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var22 = var16.createFirmType();
    var12.setFirm(var22);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var24 = var22.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var25 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    var22.setMailStop(var25);
    java.lang.String var27 = var25.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var28 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName();
    var25.setMailStopName(var28);
    java.lang.String var30 = var25.getType();
    var25.setType("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);

  }

  public void test277() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test277");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var2 = var1.getCode();
    java.lang.String var3 = var1.getCode();
    var0.setThoroughfareTrailingType(var1);
    java.util.List var5 = var0.getAddressLine();
    java.util.List var6 = var0.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var7 = var0.getThoroughfarePostDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var9 = var8.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var10 = var8.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var11 = var8.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var12 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var12.setThoroughfarePostDirection(var13);
    java.util.List var15 = var12.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var16 = var12.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var17 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var19 = var18.getCode();
    java.lang.String var20 = var18.getCode();
    var17.setThoroughfareTrailingType(var18);
    var12.setDependentThoroughfare(var17);
    var11.setDependentThoroughfare(var17);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var24 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var25 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType();
    java.lang.String var26 = var25.getCode();
    var24.setThoroughfarePreDirection(var25);
    var25.setContent("geo.google.GeoException: geo.google.GeoException: ");
    var17.setThoroughfarePreDirection(var25);
    var0.setThoroughfarePreDirection(var25);
    java.lang.String var32 = var25.getType();
    java.util.Map var33 = var25.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);

  }

  public void test278() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test278");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeName var6 = var0.createPostOfficePostOfficeName();
    java.util.Map var7 = var6.getOtherAttributes();
    java.util.Map var8 = var6.getOtherAttributes();
    java.lang.String var9 = var6.getCode();
    java.lang.String var10 = var6.getContent();
    java.lang.String var11 = var6.getType();
    java.lang.String var12 = var6.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test279() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test279");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    var4.setCode("hi!");
    java.lang.String var7 = var4.getCode();
    var4.setCode("hi!");
    java.lang.String var10 = var4.getContent();
    var4.setType("geo.google.GeoException: ");
    java.lang.String var13 = var4.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test280() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test280");


    geo.google.datamodel.GeoStatusCode var5 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var6 = new geo.google.GeoException("", var5);
    geo.google.GeoException var7 = new geo.google.GeoException("geo.google.GeoException: ", var5);
    geo.google.GeoException var8 = new geo.google.GeoException("geo.google.GeoException: ", (java.lang.Throwable)var7);
    geo.google.GeoException var9 = new geo.google.GeoException((java.lang.Throwable)var7);
    geo.google.GeoException var10 = new geo.google.GeoException("geo.google.datamodel.GeoAddress@35e7c9a0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", (java.lang.Throwable)var9);
    geo.google.GeoException var14 = new geo.google.GeoException("hi!");
    geo.google.datamodel.GeoStatusCode var17 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var18 = new geo.google.GeoException("", var17);
    java.lang.String var19 = var18.toString();
    geo.google.datamodel.GeoStatusCode var23 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var24 = new geo.google.GeoException("", var23);
    geo.google.datamodel.GeoStatusCode var27 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var28 = new geo.google.GeoException("", var27);
    geo.google.GeoException var29 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var24, var27);
    var18.addSuppressed((java.lang.Throwable)var29);
    var14.addSuppressed((java.lang.Throwable)var18);
    geo.google.datamodel.GeoStatusCode var35 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var36 = new geo.google.GeoException("", var35);
    java.lang.String var37 = var36.toString();
    geo.google.datamodel.GeoStatusCode var41 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var42 = new geo.google.GeoException("", var41);
    geo.google.datamodel.GeoStatusCode var45 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var46 = new geo.google.GeoException("", var45);
    geo.google.GeoException var47 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var42, var45);
    var36.addSuppressed((java.lang.Throwable)var47);
    geo.google.datamodel.GeoStatusCode var50 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    boolean var52 = var50.equals((java.lang.Object)10L);
    java.lang.String var53 = var50.name();
    int var54 = var50.getCode();
    geo.google.GeoException var55 = new geo.google.GeoException("", (java.lang.Throwable)var36, var50);
    java.lang.String var56 = var50.getDescription();
    geo.google.GeoException var57 = new geo.google.GeoException("Uknown Status", (java.lang.Throwable)var14, var50);
    geo.google.GeoException var58 = new geo.google.GeoException("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", (java.lang.Throwable)var14);
    java.lang.Throwable[] var59 = var58.getSuppressed();
    var9.addSuppressed((java.lang.Throwable)var58);
    geo.google.datamodel.GeoStatusCode var63 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var64 = new geo.google.GeoException("", var63);
    geo.google.datamodel.GeoStatusCode var67 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var68 = new geo.google.GeoException("", var67);
    geo.google.GeoException var69 = new geo.google.GeoException((java.lang.Throwable)var68);
    var64.addSuppressed((java.lang.Throwable)var69);
    var9.addSuppressed((java.lang.Throwable)var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "geo.google.GeoException: "+ "'", var19.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "geo.google.GeoException: "+ "'", var37.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var52 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var53.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var56 + "' != '" + "Uknown Status"+ "'", var56.equals("Uknown Status"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);

  }

  public void test281() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test281");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var2 = var0.getAddressLines();
    var0.setUsage("");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var9 = var0.getLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var10 = var0.getPostalServiceElements();
    java.util.Map var11 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var12 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var14 = var13.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var15 = var13.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var16 = var15.getCode();
    java.util.Map var17 = var15.getOtherAttributes();
    var15.setCode("G_GEO_UNKOWN_STATUS");
    var12.setEndorsementLineCode(var15);
    var0.setPostalServiceElements(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var22 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var23 = var22.getAddressLatitudeDirection();
    var22.setType("geo.google.GeoException: geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var26 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var27 = var26.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var28 = var26.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var29 = var26.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var30 = var26.createThoroughfareTrailingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var31 = var26.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    var31.setType("geo.google.GeoException: ");
    var22.setAddressLatitudeDirection(var31);
    var12.setAddressLatitudeDirection(var31);
    java.lang.String var36 = var31.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var36 + "' != '" + "geo.google.GeoException: "+ "'", var36.equals("geo.google.GeoException: "));

  }

  public void test282() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test282");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var1 = var0.createCountryName();
    java.lang.String var2 = var1.getContent();
    var1.setCode("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var1.setContent("geo.google.datamodel.GeoAddress@730dc6d0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);

  }

  public void test283() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test283");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var2 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    java.lang.String var4 = var3.getType();
    var3.setContent("(default) Indicates to ignore an altitude specification");
    var3.setContent("Uknown Status");
    java.lang.String var9 = var3.getContent();
    var3.setType("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var3.setType("Uknown Status");
    java.lang.String var14 = var3.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "Uknown Status"+ "'", var9.equals("Uknown Status"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "Uknown Status"+ "'", var14.equals("Uknown Status"));

  }

  public void test284() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test284");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAny();
    var1.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var5.createPremise();
    java.util.List var7 = var6.getAny();
    var6.setType("");
    var1.setPremise(var6);
    java.lang.String var11 = var6.getPremiseDependencyType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var13 = var12.createPremise();
    java.util.List var14 = var13.getAddressLine();
    java.util.List var15 = var13.getAny();
    var13.setType("");
    var13.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var20 = var13.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var21 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var22 = var21.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var23 = var21.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var24 = var21.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var25 = var21.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var26 = var21.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var27 = var21.createFirmType();
    var13.setFirm(var27);
    var6.setFirm(var27);
    java.util.List var30 = var27.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);

  }

  public void test285() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test285");


    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.CountryName();
    var0.setCode("hi!");
    var0.setType("hi!");
    var0.setType("G_GEO_UNKOWN_STATUS");
    java.util.Map var7 = var0.getOtherAttributes();
    var0.setType("");
    var0.setContent("geo.google.datamodel.GeoAddress@730dc6d0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test286() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test286");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var3 = var0.createAddressDetailsCountry();
    java.util.List var4 = var3.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var5 = var3.getThoroughfare();
    java.util.List var6 = var3.getCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var7 = var3.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var8 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var8.setThoroughfarePostDirection(var9);
    java.util.List var11 = var8.getThoroughfareNumberSuffix();
    var8.setDependentThoroughfaresIndicator("hi!");
    var8.setDependentThoroughfaresType("");
    var3.setThoroughfare(var8);
    java.util.List var17 = var3.getCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var18 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var19 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var20 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var19.setThoroughfarePostDirection(var20);
    java.util.List var22 = var19.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var23 = var19.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var24 = var19.getPostalCode();
    var18.setThoroughfare(var19);
    var19.setDependentThoroughfares("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var3.setThoroughfare(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);

  }

  public void test287() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test287");


    geo.google.datamodel.GeoStatusCode var1 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    boolean var3 = var1.equals((java.lang.Object)10L);
    int var4 = var1.ordinal();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var6 = var5.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var7 = var5.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var8 = var5.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var9 = var5.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var10 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var11 = var10.getAddressLine();
    java.util.List var12 = var10.getAny();
    var9.setPostBox(var10);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var15 = var14.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var16 = var14.createDependentLocalityTypeDependentLocalityNumber();
    var16.setCode("G_GEO_UNKOWN_STATUS");
    var9.setDependentLocalityNumber(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var20 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var21 = var20.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var22 = var20.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var23 = var20.createDependentLocalityTypeDependentLocalityNumber();
    var23.setContent("");
    var23.setNameNumberOccurrence("");
    var23.setContent("hi!");
    var9.setDependentLocalityNumber(var23);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var31 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var32 = var31.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var33 = var31.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var34 = var31.createDependentLocalityTypeDependentLocalityNumber();
    var34.setContent("");
    var9.setDependentLocalityNumber(var34);
    boolean var38 = var1.equals((java.lang.Object)var9);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var39 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var40 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var39.setThoroughfarePostDirection(var40);
    java.util.List var42 = var39.getThoroughfareNumberSuffix();
    var9.setThoroughfare(var39);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var44 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var45 = var44.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var46 = var44.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var47 = var44.createThoroughfareLeadingTypeType();
    java.util.Map var48 = var47.getOtherAttributes();
    java.lang.String var49 = var47.getContent();
    var39.setThoroughfareLeadingType(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);

  }

  public void test288() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test288");


    com.google.earth.kml._2.PlacemarkType var0 = new com.google.earth.kml._2.PlacemarkType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var1 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var2 = var1.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var3 = var1.getAddressLines();
    var1.setUsage("");
    var1.setCode("G_GEO_UNKOWN_STATUS");
    var0.setAddressDetails(var1);
    java.util.Map var9 = var1.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var10 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var11 = var10.getAny();
    java.lang.String var12 = var10.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var13 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude();
    var10.setAddressLatitude(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var15 = var10.getAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var16 = var10.getAddressLatitude();
    var1.setPostalServiceElements(var10);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var18 = var10.getBarcode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);

  }

  public void test289() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test289");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var3 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var4 = var0.createPostBoxPostBoxNumberSuffix();
    var4.setCode("geo.google.datamodel.GeoAddress@25d14add[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var7 = var4.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test290() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test290");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var2 = var1.getCode();
    java.lang.String var3 = var1.getCode();
    var0.setThoroughfareTrailingType(var1);
    java.util.List var5 = var0.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var6 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var7 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var7.setThoroughfarePostDirection(var8);
    java.util.List var10 = var7.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var11 = var7.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var12 = var7.getPostalCode();
    var6.setThoroughfare(var7);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var14 = var7.getThoroughfarePostDirection();
    var0.setThoroughfarePostDirection(var14);
    java.util.Map var16 = var0.getOtherAttributes();
    java.lang.String var17 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var18 = var0.getThoroughfarePreDirection();
    java.lang.String var19 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);

  }

  public void test291() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test291");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var6 = var0.createMailStopTypeMailStopNumber();
    java.lang.String var7 = var6.getContent();
    java.util.Map var8 = var6.getOtherAttributes();
    var6.setContent("geo.google.GeoException: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test292() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test292");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber();
    var0.setContent("geo.google.GeoException: geo.google.GeoException: ");
    java.util.Map var3 = var0.getOtherAttributes();
    java.lang.String var4 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test293() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test293");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var2 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var4 = var0.createAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var5 = var0.createAddressDetailsAddress();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test294() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test294");


    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange();
    java.lang.String var1 = var0.getSeparator();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom var2 = new oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom();
    java.util.List var3 = var2.getPremiseNumber();
    java.util.List var4 = var2.getAddressLine();
    java.util.List var5 = var2.getPremiseNumberSuffix();
    var0.setPremiseNumberRangeFrom(var2);
    java.lang.String var7 = var0.getSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test295() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test295");


    geo.google.datamodel.GeoStatusCode var6 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var7 = new geo.google.GeoException("", var6);
    java.lang.String var8 = var7.toString();
    geo.google.datamodel.GeoStatusCode var12 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var13 = new geo.google.GeoException("", var12);
    geo.google.datamodel.GeoStatusCode var16 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var17 = new geo.google.GeoException("", var16);
    geo.google.GeoException var18 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var13, var16);
    var7.addSuppressed((java.lang.Throwable)var18);
    geo.google.datamodel.GeoStatusCode var21 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    boolean var23 = var21.equals((java.lang.Object)10L);
    java.lang.String var24 = var21.name();
    int var25 = var21.getCode();
    geo.google.GeoException var26 = new geo.google.GeoException("", (java.lang.Throwable)var7, var21);
    geo.google.GeoException var27 = new geo.google.GeoException("(default) Indicates to ignore an altitude specification", (java.lang.Throwable)var26);
    geo.google.GeoException var28 = new geo.google.GeoException((java.lang.Throwable)var26);
    geo.google.GeoException var29 = new geo.google.GeoException("geo.google.datamodel.GeoAddress@6f870497[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", (java.lang.Throwable)var26);
    geo.google.datamodel.GeoStatusCode var31 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    boolean var33 = var31.equals((java.lang.Object)10L);
    int var34 = var31.getCode();
    geo.google.GeoException var35 = new geo.google.GeoException("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", (java.lang.Throwable)var29, var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "geo.google.GeoException: "+ "'", var8.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var24.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var33 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == (-1));

  }

  public void test296() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test296");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    java.util.List var3 = var2.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var4 = var2.getPostOfficeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var5 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var6 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var6.setThoroughfarePostDirection(var7);
    java.util.List var9 = var6.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var10 = var6.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var11 = var6.getPostalCode();
    var5.setThoroughfare(var6);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var13 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var14 = var13.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var15 = var13.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var17 = var16.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var18 = var16.createPostBoxPostBoxNumberExtension();
    var13.setPostBoxNumberExtension(var18);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var20 = var13.getPostBoxNumberExtension();
    java.util.List var21 = var13.getAny();
    var5.setPostBox(var13);
    var2.setPostBox(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var24 = var2.getPostOfficeNumber();
    java.util.List var25 = var2.getPostOfficeName();
    java.util.Map var26 = var2.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var28 = var27.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var29 = var27.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var30 = var27.createPostalRouteType();
    java.lang.String var31 = var30.getType();
    java.lang.String var32 = var30.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var33 = var30.getPostBox();
    java.util.List var34 = var30.getAny();
    java.lang.String var35 = var30.getType();
    java.util.List var36 = var30.getAny();
    var2.setPostalRoute(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);

  }

  public void test297() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test297");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var2 = var0.createSubPremiseTypeSubPremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var3 = var0.createSubPremiseType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var4 = var0.createThoroughfareThoroughfareNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var5 = var0.createAddressLinesType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var6 = var0.createAddressDetailsPostalServiceElementsAddressLongitude();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityName var7 = var0.createDependentLocalityTypeDependentLocalityName();
    java.lang.String var8 = var7.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test298() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test298");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var1 = var0.getSubPremiseNumberPrefix();
    var0.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var5 = var4.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var6 = var4.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var7 = var6.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var9 = var8.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var10 = var8.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var11 = var8.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var12 = var8.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var13 = var8.createLargeMailUserTypeLargeMailUserIdentifier();
    var6.setLargeMailUserIdentifier(var13);
    java.lang.String var15 = var6.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var16 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var16.setIndicator("G_GEO_UNKOWN_STATUS");
    var6.setPostBox(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var20 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var21 = var20.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var22 = var20.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var23 = var20.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var24 = var20.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var25 = var20.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var26 = var20.createFirmType();
    var16.setFirm(var26);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var28 = var26.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var29 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    var26.setMailStop(var29);
    var0.setMailStop(var29);
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var32 = var0.getFirm();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);

  }

  public void test299() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test299");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var3 = var0.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var4 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var5 = var4.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var7 = var6.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var8 = var6.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var9 = var6.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var10 = var9.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var11 = var9.getPostOffice();
    java.lang.String var12 = var9.getUsageType();
    java.util.List var13 = var9.getAddressLine();
    var4.setSubAdministrativeArea(var9);
    java.lang.String var15 = var4.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var16 = var4.getPostalCode();
    var3.setAdministrativeArea(var4);
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var18 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var20 = var19.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var21 = var19.createPostOffice();
    java.util.List var22 = var21.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var23 = var21.getPostOfficeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var24 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var25 = var24.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var26 = var24.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var28 = var27.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var29 = var27.createPostBoxPostBoxNumberExtension();
    var24.setPostBoxNumberExtension(var29);
    var21.setPostBox(var24);
    var18.setPostOffice(var21);
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var33 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var34 = var33.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var35 = var33.getPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var36 = var33.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var37 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var38 = var37.getAddressLine();
    var33.setPostBox(var37);
    var18.setLocality(var33);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var41 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var42 = var41.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var43 = var41.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var44 = var41.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var45 = var41.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var46 = var41.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var47 = var41.createPostOffice();
    java.lang.String var48 = var47.getIndicator();
    java.util.List var49 = var47.getAny();
    var33.setPostOffice(var47);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var51 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var52 = var51.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var53 = var51.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var54 = var51.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var55 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var56 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var55.setThoroughfarePostDirection(var56);
    java.util.List var58 = var55.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var59 = var55.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var60 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var61 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var62 = var61.getCode();
    java.lang.String var63 = var61.getCode();
    var60.setThoroughfareTrailingType(var61);
    var55.setDependentThoroughfare(var60);
    var54.setDependentThoroughfare(var60);
    var33.setThoroughfare(var54);
    var3.setLocality(var33);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var69 = var33.getPostalRoute();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var69);

  }

  public void test300() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test300");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var2 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var3 = var0.createBuildingNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var4 = var0.createXAL();
    java.lang.String var5 = var4.getVersion();
    java.util.Map var6 = var4.getOtherAttributes();
    var4.setVersion("geo.google.datamodel.GeoUsAddress@68ed4414[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@3110b2dd[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@3f4ee455[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.List var9 = var4.getAddressDetails();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test301() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test301");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    var4.setCode("hi!");
    java.lang.String var7 = var4.getCode();
    java.lang.String var8 = var4.getCode();
    java.lang.String var9 = var4.getCode();
    java.util.Map var10 = var4.getOtherAttributes();
    java.lang.String var11 = var4.getNumberPrefixSeparator();
    java.lang.String var12 = var4.getCode();
    java.lang.String var13 = var4.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!"+ "'", var12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test302() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test302");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    geo.google.mapping.FunctionChain var3 = new geo.google.mapping.FunctionChain(var2);
    geo.google.mapping.FunctionChain var4 = var3.getTail();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var5.createPremise();
    java.util.List var7 = var6.getAddressLine();
    geo.google.mapping.FunctionChain var8 = new geo.google.mapping.FunctionChain(var7);
    var3.setTail(var8);
    geo.google.mapping.XmlToUsAddressFunctor var10 = geo.google.mapping.XmlToUsAddressFunctor.getInstance();
    var3.setHead((geo.google.mapping.Functor)var10);
    oasis.names.tc.ciq.xsdschema.xal._2.Department var12 = new oasis.names.tc.ciq.xsdschema.xal._2.Department();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var13 = var12.getMailStop();
    java.util.List var14 = var12.getAny();
    java.util.List var15 = var12.getAny();
    geo.google.mapping.FunctionChain var16 = new geo.google.mapping.FunctionChain(var15);
    var3.setTail(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);

  }

  public void test303() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test303");


    geo.google.GeoException var4 = new geo.google.GeoException("hi!");
    geo.google.datamodel.GeoStatusCode var7 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var8 = new geo.google.GeoException("", var7);
    java.lang.String var9 = var8.toString();
    geo.google.datamodel.GeoStatusCode var13 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var14 = new geo.google.GeoException("", var13);
    geo.google.datamodel.GeoStatusCode var17 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var18 = new geo.google.GeoException("", var17);
    geo.google.GeoException var19 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var14, var17);
    var8.addSuppressed((java.lang.Throwable)var19);
    var4.addSuppressed((java.lang.Throwable)var8);
    geo.google.datamodel.GeoStatusCode var25 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var26 = new geo.google.GeoException("", var25);
    java.lang.String var27 = var26.toString();
    geo.google.datamodel.GeoStatusCode var31 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var32 = new geo.google.GeoException("", var31);
    geo.google.datamodel.GeoStatusCode var35 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var36 = new geo.google.GeoException("", var35);
    geo.google.GeoException var37 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var32, var35);
    var26.addSuppressed((java.lang.Throwable)var37);
    geo.google.datamodel.GeoStatusCode var40 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    boolean var42 = var40.equals((java.lang.Object)10L);
    java.lang.String var43 = var40.name();
    int var44 = var40.getCode();
    geo.google.GeoException var45 = new geo.google.GeoException("", (java.lang.Throwable)var26, var40);
    java.lang.String var46 = var40.getDescription();
    geo.google.GeoException var47 = new geo.google.GeoException("Uknown Status", (java.lang.Throwable)var4, var40);
    geo.google.GeoException var48 = new geo.google.GeoException("UNKNOWN_LOCATION", (java.lang.Throwable)var47);
    geo.google.datamodel.GeoStatusCode var52 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var53 = new geo.google.GeoException("", var52);
    geo.google.datamodel.GeoStatusCode var56 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var57 = new geo.google.GeoException("", var56);
    geo.google.GeoException var58 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var53, var56);
    geo.google.GeoException var59 = new geo.google.GeoException("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", (java.lang.Throwable)var48, var56);
    java.lang.Throwable[] var60 = var59.getSuppressed();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "geo.google.GeoException: "+ "'", var9.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "geo.google.GeoException: "+ "'", var27.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var43.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "Uknown Status"+ "'", var46.equals("Uknown Status"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);

  }

  public void test304() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test304");


    geo.google.datamodel.GeoCoordinate var2 = new geo.google.datamodel.GeoCoordinate();
    double var3 = var2.getLongitude();
    geo.google.datamodel.GeoCoordinate var4 = new geo.google.datamodel.GeoCoordinate();
    double var5 = var4.getLongitude();
    double var6 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var2, var4);
    geo.google.datamodel.GeoCoordinate var7 = new geo.google.datamodel.GeoCoordinate();
    double var8 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var2, var7);
    geo.google.datamodel.GeoStatusCode var11 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var12 = new geo.google.GeoException("", var11);
    boolean var13 = var2.equals((java.lang.Object)var11);
    geo.google.datamodel.GeoAltitude var15 = new geo.google.datamodel.GeoAltitude(0.0d);
    var2.setAltitude(var15);
    java.lang.String var17 = var15.toString();
    geo.google.datamodel.GeoCoordinate var18 = new geo.google.datamodel.GeoCoordinate(1.0d, 69.08999999999311d, var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);

  }

  public void test305() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test305");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var1 = var0.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var3 = var2.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var4 = var2.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var5 = var2.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var6 = var5.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var7 = var5.getPostOffice();
    java.lang.String var8 = var5.getUsageType();
    java.util.List var9 = var5.getAddressLine();
    var0.setSubAdministrativeArea(var5);
    java.lang.String var11 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var12 = var0.getSubAdministrativeArea();
    var12.setType("geo.google.datamodel.GeoAddress@12dfb6a6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test306() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test306");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var2 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var4 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber var5 = var0.createThoroughfareNumber();
    java.lang.String var6 = var5.getIndicatorOccurrence();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test307() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test307");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var5 = var0.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumber var6 = var0.createPostalCodePostalCodeNumber();
    var6.setContent("geo.google.datamodel.GeoUsAddress@49269587[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@422f796[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@13ac9af9[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test308() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test308");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var2 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var3 = var0.createBuildingNameType();
    java.lang.String var4 = var3.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test309() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test309");


    geo.google.GeoAddressStandardizer var1 = new geo.google.GeoAddressStandardizer("G_GEO_UNKOWN_STATUS");
    var1.setApiKey("geo.google.GeoException: ");
    long var4 = var1.getRateLimitInterval();
    long var5 = var1.getRateLimitInterval();
    geo.google.datamodel.GeoCoordinate var13 = new geo.google.datamodel.GeoCoordinate();
    double var14 = var13.getLongitude();
    geo.google.datamodel.GeoCoordinate var15 = new geo.google.datamodel.GeoCoordinate();
    double var16 = var15.getLongitude();
    double var17 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var13, var15);
    double var18 = var15.getLatitude();
    var15.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var22 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var23 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var15, var22);
    java.lang.String var24 = var23.toAddressLine();
    var23.setCountry("geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var23.setCounty("geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    geo.google.datamodel.GeoAddressAccuracy var29 = var23.getAccuracy();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.util.List var30 = var1.standardizeToGeoUsAddresses(var23);
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 5769L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 5769L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "geo.google.GeoException: , geo.google.GeoException: hi!,  UNKNOWN_LOCATION"+ "'", var24.equals("geo.google.GeoException: , geo.google.GeoException: hi!,  UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);

  }

  public void test310() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test310");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType();
    java.lang.String var1 = var0.getType();
    java.util.List var2 = var0.getPostalRouteName();
    java.util.List var3 = var0.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test311() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test311");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    java.lang.String var11 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var12.setIndicator("G_GEO_UNKOWN_STATUS");
    var2.setPostBox(var12);
    java.util.Map var16 = var2.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var17 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var18 = var2.getLargeMailUserIdentifier();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);

  }

  public void test312() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test312");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var2 = var0.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom var4 = var0.createPremisePremiseNumberRangePremiseNumberRangeFrom();
    java.util.List var5 = var4.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test313() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test313");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    var0.setNumberRangeOccurrence("geo.google.GeoException: geo.google.GeoException: ");
    var0.setType("Uknown Status");
    java.lang.String var5 = var0.getCode();
    java.lang.String var6 = var0.getSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test314() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test314");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    java.util.List var3 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var5 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var7 = var6.getCode();
    java.lang.String var8 = var6.getCode();
    var5.setThoroughfareTrailingType(var6);
    var0.setDependentThoroughfare(var5);
    var0.setDependentThoroughfaresType("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var14 = var13.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var15 = var13.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var16 = var13.createThoroughfareLeadingTypeType();
    java.lang.String var17 = var16.getType();
    var0.setThoroughfareLeadingType(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var19 = var0.getDependentLocality();
    java.lang.String var20 = var0.getDependentThoroughfaresIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var21 = var0.getThoroughfarePostDirection();
    var0.setDependentThoroughfaresType("geo.google.datamodel.GeoAddress@2c8fa0b9[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);

  }

  public void test315() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test315");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressLine var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressLine();
    var0.setContent("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var3 = var0.getContent();
    var0.setCode("G_GEO_UNKOWN_STATUS");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var3.equals("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test316() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test316");


    geo.google.datamodel.GeoStatusCode var6 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var7 = new geo.google.GeoException("", var6);
    java.lang.String var8 = var7.toString();
    geo.google.datamodel.GeoStatusCode var12 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var13 = new geo.google.GeoException("", var12);
    geo.google.datamodel.GeoStatusCode var16 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var17 = new geo.google.GeoException("", var16);
    geo.google.GeoException var18 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var13, var16);
    var7.addSuppressed((java.lang.Throwable)var18);
    geo.google.datamodel.GeoStatusCode var21 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    boolean var23 = var21.equals((java.lang.Object)10L);
    java.lang.String var24 = var21.name();
    int var25 = var21.getCode();
    geo.google.GeoException var26 = new geo.google.GeoException("", (java.lang.Throwable)var7, var21);
    geo.google.GeoException var27 = new geo.google.GeoException("(default) Indicates to ignore an altitude specification", (java.lang.Throwable)var26);
    geo.google.datamodel.GeoStatusCode var31 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var32 = new geo.google.GeoException("", var31);
    geo.google.datamodel.GeoStatusCode var35 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var36 = new geo.google.GeoException("", var35);
    geo.google.GeoException var37 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var32, var35);
    geo.google.GeoException var38 = new geo.google.GeoException((java.lang.Throwable)var37);
    geo.google.datamodel.GeoStatusCode var39 = var37.getStatus();
    geo.google.GeoException var40 = new geo.google.GeoException("hi!", (java.lang.Throwable)var26, var39);
    geo.google.GeoException var41 = new geo.google.GeoException("(default) Indicates to ignore an altitude specification", var39);
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var42 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var43 = var42.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var44 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var45 = var44.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var46 = var44.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var47 = var44.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var48 = var47.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var49 = var47.getPostOffice();
    java.lang.String var50 = var47.getUsageType();
    java.util.List var51 = var47.getAddressLine();
    var42.setSubAdministrativeArea(var47);
    boolean var53 = var39.equals((java.lang.Object)var47);
    var47.setUsageType("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "geo.google.GeoException: "+ "'", var8.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var24.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == false);

  }

  public void test317() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test317");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    java.lang.String var1 = var0.getDependentThoroughfaresIndicator();
    java.util.List var2 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var3 = var0.getDependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var4 = var0.getFirm();
    java.util.List var5 = var0.getThoroughfareNumberSuffix();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test318() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test318");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var2 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var3 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var4 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var5 = var0.createCountryName();
    var5.setCode("geo.google.datamodel.GeoAddress@76a0b14e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var8 = var5.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test319() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test319");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var2 = var1.getCode();
    java.lang.String var3 = var1.getCode();
    var0.setThoroughfareTrailingType(var1);
    var1.setCode("geo.google.datamodel.GeoUsAddress@46478daa[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@3a5b7f2[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@74cf72bc[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test320() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test320");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName();
    java.util.Map var1 = var0.getOtherAttributes();
    java.lang.String var2 = var0.getContent();
    java.util.Map var3 = var0.getOtherAttributes();
    java.lang.String var4 = var0.getType();
    var0.setType("geo.google.GeoException: , geo.google.GeoException: hi!,  UNKNOWN_LOCATION");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test321() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test321");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    var3.setNameNumberOccurrence("geo.google.GeoException: ");
    var3.setContent("hi!");
    var3.setNameNumberOccurrence("geo.google.GeoException: ");
    var3.setContent("geo.google.datamodel.GeoUsAddress@541af6ab[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@36387fb0[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@3747179f[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    var3.setNameNumberOccurrence("UNKNOWN_LOCATION");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test322() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test322");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var2 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var3 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var4 = var0.createAddressDetailsPostalServiceElementsKeyLineCode();
    var4.setContent("geo.google.datamodel.GeoUsAddress@2fec0f69[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@32e7cf13[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@10cc0281[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test323() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test323");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var1 = var0.getSubPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var2 = var0.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var3 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    java.util.Map var4 = var3.getOtherAttributes();
    var3.setType("G_GEO_UNKOWN_STATUS");
    var0.setMailStop(var3);
    java.util.List var8 = var0.getAddressLine();
    java.util.Map var9 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test324() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test324");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode();
    var0.setCode("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setContent("geo.google.datamodel.GeoUsAddress@1add92c3[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@48ce4dfc[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@606200bb[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");

  }

  public void test325() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test325");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoAltitude.GeoAltitudeMode var1 = geo.google.datamodel.GeoAltitude.GeoAltitudeMode.valueOf("geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test326() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test326");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var1 = var0.getSubPremiseNumberPrefix();
    var0.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var4 = var0.getSubPremiseLocation();
    java.util.List var5 = var0.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test327() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test327");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.earth.kml._2.AltitudeModeType var1 = com.google.earth.kml._2.AltitudeModeType.fromValue("geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test328() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test328");


    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var1 = var0.getMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var3 = var2.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var4 = var2.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var5 = var2.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var6 = var2.createPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var7 = var2.createAddressDetailsPostalServiceElementsAddressLongitude();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var8 = var2.createFirmType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var9 = var2.createPostBoxPostBoxNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var10 = var2.createMailStopTypeMailStopNumber();
    var0.setMailStopNumber(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);

  }

  public void test329() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test329");


    com.google.earth.kml._2.StatusType var0 = new com.google.earth.kml._2.StatusType();
    java.lang.String var1 = var0.getRequest();
    int var2 = var0.getCode();
    var0.setCode((-1));
    var0.setRequest("geo.google.GeoException: ");
    var0.setCode(0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == 0);

  }

  public void test330() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test330");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    java.util.List var3 = var1.getAny();
    var1.setType("");
    var1.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var8 = var1.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var10 = var9.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var11 = var9.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var12 = var9.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var13 = var9.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var14 = var9.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var15 = var9.createFirmType();
    var1.setFirm(var15);
    java.lang.String var17 = var1.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + ""+ "'", var17.equals(""));

  }

  public void test331() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test331");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var2 = var0.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var4 = var0.createPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitude();
    var5.setContent("UNKNOWN_LOCATION");
    var5.setContent("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var10 = var5.getType();
    java.util.Map var11 = var5.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);

  }

  public void test332() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test332");


    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName();
    java.lang.String var1 = var0.getCode();
    java.util.Map var2 = var0.getOtherAttributes();
    var0.setContent("(default) Indicates to ignore an altitude specification");
    java.lang.String var5 = var0.getType();
    java.util.Map var6 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test333() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test333");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeName var6 = var0.createPostOfficePostOfficeName();
    java.util.Map var7 = var6.getOtherAttributes();
    java.lang.String var8 = var6.getContent();
    java.lang.String var9 = var6.getContent();
    var6.setContent("geo.google.datamodel.GeoAddress@49e11d13[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var12 = var6.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test334() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test334");


    oasis.names.tc.ciq.xsdschema.xal._2.Department var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Department();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.getMailStop();
    var0.setType("");
    java.util.Map var4 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var5 = var0.getMailStop();
    var0.setType("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var9 = var8.createPremise();
    java.util.List var10 = var9.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var11 = var9.getFirm();
    var9.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var15 = var14.createPremise();
    java.lang.String var16 = var15.getPremiseThoroughfareConnector();
    var9.setPremise(var15);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var19 = var18.createPremise();
    java.lang.String var20 = var19.getPremiseThoroughfareConnector();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var21 = new oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation();
    var19.setPremiseLocation(var21);
    var9.setPremiseLocation(var21);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var24 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var25 = var24.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var26 = var24.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var27 = var26.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var28 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var29 = var28.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var30 = var28.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var31 = var28.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var32 = var28.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var33 = var28.createLargeMailUserTypeLargeMailUserIdentifier();
    var26.setLargeMailUserIdentifier(var33);
    java.lang.String var35 = var26.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var36 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var36.setIndicator("G_GEO_UNKOWN_STATUS");
    var26.setPostBox(var36);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var40 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var41 = var40.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var42 = var40.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var43 = var40.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var44 = var40.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var45 = var40.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var46 = var40.createFirmType();
    var36.setFirm(var46);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var48 = var46.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var49 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    var46.setMailStop(var49);
    java.util.List var51 = var49.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var52 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var53 = var52.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var54 = var52.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var55 = var52.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var56 = var52.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var57 = var52.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var58 = var52.createMailStopTypeMailStopNumber();
    var49.setMailStopNumber(var58);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var60 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var61 = var60.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var62 = var60.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var63 = var62.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var64 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var65 = var64.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var66 = var64.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var67 = var64.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var68 = var64.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var69 = var64.createLargeMailUserTypeLargeMailUserIdentifier();
    var62.setLargeMailUserIdentifier(var69);
    java.lang.String var71 = var62.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var72 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var72.setIndicator("G_GEO_UNKOWN_STATUS");
    var62.setPostBox(var72);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var76 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var77 = var76.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var78 = var76.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var79 = var76.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var80 = var76.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var81 = var76.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var82 = var76.createFirmType();
    var72.setFirm(var82);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var84 = var82.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var85 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    var82.setMailStop(var85);
    java.lang.String var87 = var85.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var88 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName();
    java.lang.String var89 = var88.getContent();
    var88.setContent("(default) Indicates to ignore an altitude specification");
    var85.setMailStopName(var88);
    java.util.Map var93 = var88.getOtherAttributes();
    var49.setMailStopName(var88);
    var9.setMailStop(var49);
    var0.setMailStop(var49);
    java.util.List var97 = var49.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var97);

  }

  public void test335() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test335");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var2 = var0.getAddressLines();
    var0.setUsage("");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var9 = var0.getLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var10 = var0.getPostalServiceElements();
    java.util.Map var11 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var12 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var14 = var13.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var15 = var13.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var16 = var15.getCode();
    java.util.Map var17 = var15.getOtherAttributes();
    var15.setCode("G_GEO_UNKOWN_STATUS");
    var12.setEndorsementLineCode(var15);
    var0.setPostalServiceElements(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var22 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address();
    java.lang.String var23 = var22.getContent();
    var22.setCode("");
    var0.setAddress(var22);
    java.lang.String var27 = var22.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);

  }

  public void test336() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test336");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var6 = var0.createLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var7 = var6.getPremise();
    var6.setType("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var10 = var6.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var11 = var6.getDependentLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var13 = var12.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var14 = var12.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var15 = var12.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var16 = var12.createPostalRouteType();
    var6.setPostalRoute(var16);
    java.util.Map var18 = var16.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);

  }

  public void test337() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test337");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    var5.setType("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var8 = var5.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test338() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test338");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.util.List var1 = var0.getAny();
    var0.setUsageType("geo.google.datamodel.GeoAddress@6f870497[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);

  }

  public void test339() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test339");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var3 = var0.getThoroughfarePostDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var5 = var4.getCode();
    java.lang.String var6 = var4.getCode();
    var0.setThoroughfareTrailingType(var4);
    java.util.List var8 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var10 = var9.getCode();
    java.lang.String var11 = var9.getCode();
    var0.setThoroughfareTrailingType(var9);
    java.lang.String var13 = var9.getContent();
    var9.setCode("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test340() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test340");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var6 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var7 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var8 = var0.createPostalCodePostTown();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var9 = var0.createPostOfficePostOfficeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var10 = var0.createAddressDetailsPostalServiceElements();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);

  }

  public void test341() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test341");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    var5.setIndicator("G_GEO_UNKOWN_STATUS");
    var5.setType("hi!");
    var5.setType("geo.google.GeoException: ");
    var5.setIndicatorOccurence("hi!");
    var5.setSeparator("geo.google.GeoException: ");
    var5.setRangeType("(default) Indicates to ignore an altitude specification");
    java.lang.String var18 = var5.getNumberRangeOccurence();
    java.lang.String var19 = var5.getNumberRangeOccurence();
    java.lang.String var20 = var5.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "geo.google.GeoException: "+ "'", var20.equals("geo.google.GeoException: "));

  }

  public void test342() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test342");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var2 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var3 = var0.createAddressDetailsPostalServiceElementsAddressLatitude();
    var3.setCode("geo.google.GeoException: ");
    java.lang.String var6 = var3.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test343() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test343");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var4 = var3.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var5 = var3.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var6 = var3.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var7 = var3.createLargeMailUserTypeLargeMailUserIdentifier();
    java.lang.String var8 = var7.getIndicator();
    var2.setLargeMailUserIdentifier(var7);
    java.lang.String var10 = var7.getType();
    java.lang.String var11 = var7.getContent();
    java.lang.String var12 = var7.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test344() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test344");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var5 = var0.createAddressDetailsPostalServiceElementsBarcode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumber var6 = var0.createPostalCodePostalCodeNumber();
    java.util.Map var7 = var6.getOtherAttributes();
    var6.setCode("geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    var6.setType("geo.google.datamodel.GeoAddress@3cce2b1c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var12 = var6.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test345() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test345");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var1 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var3 = var2.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var4 = var2.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var5 = var4.getCode();
    java.util.Map var6 = var4.getOtherAttributes();
    var4.setCode("G_GEO_UNKOWN_STATUS");
    var0.setEndorsementLineCode(var4);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var10 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var11 = var10.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var13 = var12.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var14 = var12.createAddressDetailsPostalServiceElementsSortingCode();
    var10.setSortingCode(var14);
    var0.setSortingCode(var14);
    java.util.List var17 = var0.getAny();
    java.lang.String var18 = var0.getType();
    java.util.List var19 = var0.getSupplementaryPostalServiceData();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);

  }

  public void test346() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test346");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var3 = var0.createSubPremiseTypeSubPremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var4 = var0.createPostalRouteType();
    java.util.List var5 = var4.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test347() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test347");


    com.google.earth.kml._2.PlacemarkType var0 = new com.google.earth.kml._2.PlacemarkType();
    var0.setAddress("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var3 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    java.lang.String var4 = var3.getValidToDate();
    var3.setAddressDetailsKey("hi!");
    var0.setAddressDetails(var3);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var8 = var0.getAddressDetails();
    com.google.earth.kml._2.PointType var9 = new com.google.earth.kml._2.PointType();
    var9.setTessellate((java.lang.Boolean)true);
    var9.setExtrude((java.lang.Boolean)false);
    var0.setPoint(var9);
    java.lang.String var15 = var0.getAddress();
    com.google.earth.kml._2.PointType var16 = var0.getPoint();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "geo.google.GeoException: "+ "'", var15.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);

  }

  public void test348() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test348");


    geo.google.GeoAddressStandardizer var1 = new geo.google.GeoAddressStandardizer("G_GEO_UNKOWN_STATUS");
    long var2 = var1.getRateLimitInterval();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoAddress var4 = var1.standardizeToGeoAddress("geo.google.datamodel.GeoAddress@4244bb8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == 5769L);

  }

  public void test349() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test349");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var5 = var0.createAddressDetailsPostalServiceElementsBarcode();
    var5.setType("G_GEO_UNKOWN_STATUS");
    java.lang.String var8 = var5.getCode();
    java.lang.String var9 = var5.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test350() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test350");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData();
    java.util.Map var1 = var0.getOtherAttributes();
    java.lang.String var2 = var0.getType();
    java.util.Map var3 = var0.getOtherAttributes();
    var0.setCode("geo.google.GeoException: ");
    java.util.Map var6 = var0.getOtherAttributes();
    var0.setCode("geo.google.GeoException: ");
    java.lang.String var9 = var0.getCode();
    java.lang.String var10 = var0.getCode();
    java.lang.String var11 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "geo.google.GeoException: "+ "'", var9.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "geo.google.GeoException: "+ "'", var10.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test351() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test351");


    geo.google.mapping.PointToCoordinateFunctor var0 = new geo.google.mapping.PointToCoordinateFunctor();
    com.google.earth.kml._2.PointType var1 = new com.google.earth.kml._2.PointType();
    var1.setTessellate((java.lang.Boolean)true);
    var1.setExtrude((java.lang.Boolean)false);
    geo.google.datamodel.GeoCoordinate var6 = var0.execute(var1);
    com.google.earth.kml._2.PointType var7 = new com.google.earth.kml._2.PointType();
    var7.setTessellate((java.lang.Boolean)true);
    java.lang.Boolean var10 = var7.isTessellate();
    geo.google.datamodel.GeoCoordinate var11 = var0.execute(var7);
    com.google.earth.kml._2.AltitudeModeType var12 = var7.getAltitudeMode();
    var7.setExtrude((java.lang.Boolean)false);
    java.lang.Boolean var15 = var7.isExtrude();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + true+ "'", var10.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + false+ "'", var15.equals(false));

  }

  public void test352() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test352");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var2 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    java.lang.String var4 = var3.getType();
    var3.setContent("(default) Indicates to ignore an altitude specification");
    var3.setContent("Uknown Status");
    java.lang.String var9 = var3.getContent();
    var3.setType("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var12 = var3.getOtherAttributes();
    var3.setCode("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "Uknown Status"+ "'", var9.equals("Uknown Status"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test353() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test353");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var2 = var0.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var3 = var0.createPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var4 = var3.getPostTown();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test354() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test354");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var2 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    var3.setCode("G_GEO_UNKOWN_STATUS");
    java.lang.String var6 = var3.getCode();
    var3.setCode("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var6.equals("G_GEO_UNKOWN_STATUS"));

  }

  public void test355() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test355");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var6 = var5.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var7 = var5.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var9 = var8.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var10 = var8.createPostBoxPostBoxNumberExtension();
    var5.setPostBoxNumberExtension(var10);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var12 = var5.getPostBoxNumberExtension();
    java.util.List var13 = var5.getAny();
    var4.setPostBox(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var15 = var4.getLargeMailUser();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var16 = var4.getDependentLocalityNumber();
    java.util.List var17 = var4.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);

  }

  public void test356() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test356");


    oasis.names.tc.ciq.xsdschema.xal._2.Locality var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var2 = var1.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var3 = var1.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var4 = var1.createPostalCode();
    var0.setPostalCode(var4);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var6 = var4.getPostTown();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test357() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test357");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var6 = var0.createLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var7 = var6.getPremise();
    var6.setType("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var11 = var10.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var12 = var10.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var13 = var12.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var15 = var14.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var16 = var14.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var17 = var14.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var18 = var14.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var19 = var14.createLargeMailUserTypeLargeMailUserIdentifier();
    var12.setLargeMailUserIdentifier(var19);
    java.lang.String var21 = var12.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var22 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var22.setIndicator("G_GEO_UNKOWN_STATUS");
    var12.setPostBox(var22);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var26 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var27 = var26.getAddressLine();
    var12.setPostBox(var26);
    var6.setLargeMailUser(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var30 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var31 = var30.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var32 = var30.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var33 = var30.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var34 = var30.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var35 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var36 = var35.getAddressLine();
    java.util.List var37 = var35.getAny();
    var34.setPostBox(var35);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var39 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var34.setPostBox(var39);
    java.lang.String var41 = var34.getConnector();
    java.util.List var42 = var34.getAny();
    var6.setDependentLocality(var34);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var44 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var45 = var44.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var46 = var44.getAddressLines();
    var44.setUsage("");
    var44.setUsage("hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var51 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var52 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var51.setThoroughfarePostDirection(var52);
    java.util.List var54 = var51.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var55 = var51.getThoroughfareLeadingType();
    var44.setThoroughfare(var51);
    var6.setThoroughfare(var51);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var58 = var6.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var59 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var60 = var59.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var61 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var62 = var61.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var63 = var61.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var64 = var61.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var65 = var64.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var66 = var64.getPostOffice();
    java.lang.String var67 = var64.getUsageType();
    java.util.List var68 = var64.getAddressLine();
    var59.setSubAdministrativeArea(var64);
    java.lang.String var70 = var59.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var71 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var72 = var71.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var73 = var71.createPostOffice();
    java.util.List var74 = var73.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var75 = var73.getPostOfficeNumber();
    var73.setType("G_GEO_UNKOWN_STATUS");
    java.util.List var78 = var73.getAny();
    java.util.List var79 = var73.getPostOfficeName();
    var59.setPostOffice(var73);
    var6.setPostOffice(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var73);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);

  }

  public void test358() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test358");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var6 = var0.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var7 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityName var8 = var0.createDependentLocalityTypeDependentLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var9 = var0.createXAL();
    java.lang.String var10 = var9.getVersion();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test359() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test359");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var6 = var0.createXAL();
    java.util.List var7 = var6.getAddressDetails();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test360() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test360");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var2 = var0.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var4 = var0.createLargeMailUserTypeLargeMailUserIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var5 = var0.createMailStopType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test361() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test361");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseName var3 = var0.createPremisePremiseName();
    var3.setContent("");
    var3.setTypeOccurrence("Uknown Status");
    java.lang.String var8 = var3.getContent();
    java.lang.String var9 = var3.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test362() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test362");


    geo.google.datamodel.GeoCoordinate var0 = new geo.google.datamodel.GeoCoordinate();
    double var1 = var0.getLongitude();
    geo.google.datamodel.GeoCoordinate var2 = new geo.google.datamodel.GeoCoordinate();
    double var3 = var2.getLongitude();
    double var4 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var0, var2);
    geo.google.datamodel.GeoCoordinate var5 = new geo.google.datamodel.GeoCoordinate();
    double var6 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var0, var5);
    geo.google.datamodel.GeoStatusCode var9 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var10 = new geo.google.GeoException("", var9);
    boolean var11 = var0.equals((java.lang.Object)var9);
    var0.setLatitude(69.09332413987235d);
    double var14 = var0.getLongitude();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == (-1.0d));

  }

  public void test363() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test363");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    java.lang.String var2 = var0.getValidToDate();
    java.lang.String var3 = var0.getAddressDetailsKey();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.getThoroughfare();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test364() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test364");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier();
    java.lang.String var1 = var0.getContent();
    java.util.Map var2 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test365() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test365");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAny();
    var1.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var5.createPremise();
    java.util.List var7 = var6.getAny();
    var6.setType("");
    var1.setPremise(var6);
    java.lang.String var11 = var6.getPremiseDependencyType();
    var6.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var14 = var6.getFirm();
    java.util.List var15 = var6.getPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var16 = var6.getPremiseNumberRange();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);

  }

  public void test366() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test366");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var1 = var0.getPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var3 = var2.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var4 = var2.createPostalCodePostTownPostTownSuffix();
    var4.setContent("G_GEO_UNKOWN_STATUS");
    java.util.Map var7 = var4.getOtherAttributes();
    java.lang.String var8 = var4.getCode();
    java.lang.String var9 = var4.getContent();
    var0.setPostTownSuffix(var4);
    java.util.List var11 = var0.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var9.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);

  }

  public void test367() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test367");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var3 = var1.getFirm();
    var1.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var7 = var6.createPremise();
    java.lang.String var8 = var7.getPremiseThoroughfareConnector();
    var1.setPremise(var7);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var11 = var10.createPremise();
    java.lang.String var12 = var11.getPremiseThoroughfareConnector();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var13 = new oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation();
    var11.setPremiseLocation(var13);
    var1.setPremiseLocation(var13);
    var13.setContent("Uknown Status");
    java.util.Map var18 = var13.getOtherAttributes();
    java.lang.String var19 = var13.getCode();
    var13.setContent("geo.google.datamodel.GeoAddress@6921ddb6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var22 = var13.getOtherAttributes();
    java.lang.String var23 = var13.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "geo.google.datamodel.GeoAddress@6921ddb6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var23.equals("geo.google.datamodel.GeoAddress@6921ddb6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test368() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test368");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName();
    java.util.Map var1 = var0.getOtherAttributes();
    java.lang.String var2 = var0.getContent();
    java.util.Map var3 = var0.getOtherAttributes();
    var0.setContent("");
    java.lang.String var6 = var0.getType();
    java.util.Map var7 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test369() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test369");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var6 = var0.createDependentLocalityTypeDependentLocalityNumber();
    java.lang.String var7 = var6.getNameNumberOccurrence();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test370() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test370");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var3 = var0.createAddressDetailsCountry();
    java.util.List var4 = var3.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var5 = var3.getLocality();
    java.util.List var6 = var3.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test371() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test371");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAny();
    var1.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var5.createPremise();
    java.util.List var7 = var6.getAny();
    var6.setType("");
    var1.setPremise(var6);
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var11 = var6.getPremiseNumberRange();
    var6.setPremiseDependency("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test372() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test372");


    com.google.earth.kml._2.PlacemarkType var0 = new com.google.earth.kml._2.PlacemarkType();
    var0.setAddress("geo.google.GeoException: ");
    com.google.earth.kml._2.PointType var3 = new com.google.earth.kml._2.PointType();
    var3.setTessellate((java.lang.Boolean)true);
    var3.setExtrude((java.lang.Boolean)false);
    var0.setPoint(var3);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var9 = var0.getAddressDetails();
    java.lang.String var10 = var0.getAddress();
    com.google.earth.kml._2.PointType var11 = var0.getPoint();
    com.google.earth.kml._2.AltitudeModeType var12 = var11.getAltitudeMode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "geo.google.GeoException: "+ "'", var10.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test373() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test373");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var4 = var3.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var5 = var3.getPostOffice();
    java.lang.String var6 = var3.getUsageType();
    java.util.List var7 = var3.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var8 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var9 = var8.getSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var10 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var11 = var10.getAny();
    var8.setSubPremise(var10);
    java.util.List var13 = var8.getSubPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var15 = var14.createPremise();
    java.util.List var16 = var15.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var17 = var15.getFirm();
    var15.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var20 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var21 = var20.createPremise();
    java.lang.String var22 = var21.getPremiseThoroughfareConnector();
    var15.setPremise(var21);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var24 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var25 = var24.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var26 = var24.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var27 = var24.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var28 = var27.getType();
    java.util.List var29 = var27.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var30 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var31 = var30.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var32 = var30.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var33 = var30.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var34 = var30.createThoroughfare();
    java.util.List var35 = var34.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var36 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var37 = var36.getPostTown();
    var34.setPostalCode(var36);
    var27.setPostalCode(var36);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var40 = var27.getPostalCode();
    var15.setPostalCode(var40);
    var8.setPostalCode(var40);
    var3.setPostalCode(var40);
    var3.setType("(default) Indicates to ignore an altitude specification");
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var46 = var3.getPostalCode();
    var3.setType("CLAMP_TO_GROUND");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);

  }

  public void test374() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test374");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var3 = var0.getThoroughfarePostDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var5 = var4.getCode();
    java.lang.String var6 = var4.getCode();
    var0.setThoroughfareTrailingType(var4);
    java.util.List var8 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var10 = var9.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var11 = var9.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var12 = var9.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var13 = var9.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var14 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var15 = var14.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var16 = var14.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var18 = var17.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var19 = var17.createPostBoxPostBoxNumberExtension();
    var14.setPostBoxNumberExtension(var19);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var21 = var14.getPostBoxNumberExtension();
    java.util.List var22 = var14.getAny();
    var13.setPostBox(var14);
    var13.setType("");
    var0.setDependentLocality(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var28 = var27.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var29 = var27.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var30 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var31 = var30.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var32 = var30.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var33 = var30.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var34 = var30.createLargeMailUserTypeLargeMailUserIdentifier();
    java.lang.String var35 = var34.getIndicator();
    var29.setLargeMailUserIdentifier(var34);
    java.util.List var37 = var29.getLargeMailUserName();
    var13.setLargeMailUser(var29);
    java.util.Map var39 = var29.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var40 = var29.getThoroughfare();
    java.util.List var41 = var29.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);

  }

  public void test375() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test375");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var5 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var5.setThoroughfarePostDirection(var6);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var8 = var5.getThoroughfarePostDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var10 = var9.getCode();
    java.lang.String var11 = var9.getCode();
    var5.setThoroughfareTrailingType(var9);
    java.util.List var13 = var5.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var15 = var14.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var16 = var14.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var17 = var14.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var18 = var14.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var19 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var20 = var19.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var21 = var19.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var22 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var23 = var22.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var24 = var22.createPostBoxPostBoxNumberExtension();
    var19.setPostBoxNumberExtension(var24);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var26 = var19.getPostBoxNumberExtension();
    java.util.List var27 = var19.getAny();
    var18.setPostBox(var19);
    var18.setType("");
    var5.setDependentLocality(var18);
    var4.setDependentLocality(var18);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var33 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var34 = var33.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var35 = var33.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var36 = var33.createPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var37 = var33.createAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var38 = var33.createPostalCode();
    var4.setPostalCode(var38);
    java.util.List var40 = var4.getThoroughfareNumberPrefix();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);

  }

  public void test376() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test376");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var3 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName var4 = var0.createAdministrativeAreaSubAdministrativeAreaSubAdministrativeAreaName();
    var4.setType("(default) Indicates to ignore an altitude specification");
    var4.setCode("geo.google.GeoException: geo.google.GeoException: ");
    var4.setType("geo.google.datamodel.GeoUsAddress@2fec0f69[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@32e7cf13[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@10cc0281[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var11 = var4.getType();
    var4.setCode("geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "geo.google.datamodel.GeoUsAddress@2fec0f69[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@32e7cf13[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@10cc0281[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var11.equals("geo.google.datamodel.GeoUsAddress@2fec0f69[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@32e7cf13[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@10cc0281[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test377() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test377");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var4 = var0.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var5 = var0.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var6 = var0.createAddressDetailsPostalServiceElementsKeyLineCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownName var7 = var0.createPostalCodePostTownPostTownName();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var8 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var9 = var0.createThoroughfareNumberSuffix();
    java.lang.String var10 = var9.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test378() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test378");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberSuffix var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberSuffix();
    java.lang.String var1 = var0.getContent();
    java.lang.String var2 = var0.getNumberSuffixSeparator();
    java.lang.String var3 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test379() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test379");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var2 = var0.createPostalCodePostTownPostTownSuffix();
    var2.setContent("G_GEO_UNKOWN_STATUS");
    java.util.Map var5 = var2.getOtherAttributes();
    java.lang.String var6 = var2.getCode();
    java.lang.String var7 = var2.getContent();
    var2.setCode("geo.google.datamodel.GeoAddress@3cce2b1c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var2.setContent("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var7.equals("G_GEO_UNKOWN_STATUS"));

  }

  public void test380() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test380");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeName var6 = var0.createPostOfficePostOfficeName();
    var6.setCode("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var6.setCode("CLAMP_TO_GROUND");
    var6.setType("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var6.setContent("geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test381() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test381");


    geo.google.datamodel.GeoAltitude var3 = new geo.google.datamodel.GeoAltitude(10.0d);
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var4 = var3.getMode();
    geo.google.datamodel.GeoCoordinate var5 = new geo.google.datamodel.GeoCoordinate(0.0d, 1.0d, var3);
    double var6 = var5.getLongitude();
    geo.google.datamodel.GeoCoordinate var7 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoAltitude var9 = new geo.google.datamodel.GeoAltitude(0.0d);
    var9.setAltitude(10.0d);
    var7.setAltitude(var9);
    var9.setAltitude(1.0d);
    double var15 = var9.getAltitude();
    var5.setAltitude(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 1.0d);

  }

  public void test382() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test382");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var5 = var0.createLargeMailUserTypeLargeMailUserIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var6 = var0.createAddressDetailsPostalServiceElementsAddressLongitude();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test383() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test383");


    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var2 = var1.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var3 = var1.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var4 = var1.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var5 = var1.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var6 = var1.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var7 = var1.createFirmType();
    var0.setFirm(var7);
    var0.setType("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var11 = var0.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber();
    var0.setPostBoxNumber(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var14 = var0.getFirm();
    java.lang.String var15 = var0.getIndicator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);

  }

  public void test384() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test384");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType();
    java.lang.String var1 = var0.getType();
    var0.setType("(default) Indicates to ignore an altitude specification");
    java.util.Map var4 = var0.getOtherAttributes();
    java.lang.String var5 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test385() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test385");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var3 = var0.getThoroughfarePostDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var5 = var4.getCode();
    java.lang.String var6 = var4.getCode();
    var0.setThoroughfareTrailingType(var4);
    java.util.List var8 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var10 = var9.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var11 = var9.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var12 = var9.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var13 = var9.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var14 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var15 = var14.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var16 = var14.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var18 = var17.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var19 = var17.createPostBoxPostBoxNumberExtension();
    var14.setPostBoxNumberExtension(var19);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var21 = var14.getPostBoxNumberExtension();
    java.util.List var22 = var14.getAny();
    var13.setPostBox(var14);
    var13.setType("");
    var0.setDependentLocality(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var28 = var27.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var29 = var27.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var30 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var31 = var30.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var32 = var30.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var33 = var30.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var34 = var30.createLargeMailUserTypeLargeMailUserIdentifier();
    java.lang.String var35 = var34.getIndicator();
    var29.setLargeMailUserIdentifier(var34);
    java.util.List var37 = var29.getLargeMailUserName();
    var13.setLargeMailUser(var29);
    java.util.Map var39 = var29.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var40 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var41 = var40.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var42 = var40.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var43 = var40.createThoroughfare();
    var43.setDependentThoroughfares("geo.google.datamodel.GeoAddress@3cce2b1c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var43.setDependentThoroughfares("geo.google.datamodel.GeoAddress@26f2d88c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var29.setThoroughfare(var43);
    var43.setDependentThoroughfares("geo.google.datamodel.GeoAddress@2eda413f[\n  _coordinate=<null>\n  _addressDetails=oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails@7af1a720\n  _addressLine=geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);

  }

  public void test386() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test386");


    oasis.names.tc.ciq.xsdschema.xal._2.Locality var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var1 = var0.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.getPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var3 = var0.getPostOffice();
    java.util.List var4 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var5 = var0.getThoroughfare();
    java.lang.String var6 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var7 = var0.getPremise();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test387() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test387");


    geo.google.GeoAddressStandardizer var2 = new geo.google.GeoAddressStandardizer("G_GEO_UNKOWN_STATUS", 100L);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.util.List var4 = var2.standardizeToGeoAddresses("geo.google.GeoException: geo.google.GeoException: ");
      fail("Expected exception of type java.lang.RuntimeException");
    } catch (java.lang.RuntimeException e) {
      // Expected exception.
    }

  }

  public void test388() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test388");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber var4 = var0.createPremiseNumber();
    var4.setType("hi!");
    var4.setType("geo.google.GeoException: ");
    java.lang.String var9 = var4.getIndicatorOccurrence();
    var4.setType("geo.google.GeoException: ");
    var4.setNumberTypeOccurrence("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var14 = var4.getOtherAttributes();
    java.util.Map var15 = var4.getOtherAttributes();
    java.lang.String var16 = var4.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);

  }

  public void test389() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test389");


    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber();
    var0.setIndicator("hi!");
    var0.setIndicator("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var5 = var0.getIndicator();
    var0.setCode("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "geo.google.GeoException: geo.google.GeoException: "+ "'", var5.equals("geo.google.GeoException: geo.google.GeoException: "));

  }

  public void test390() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test390");


    com.google.earth.kml._2.StatusType var0 = new com.google.earth.kml._2.StatusType();
    java.lang.String var1 = var0.getRequest();
    int var2 = var0.getCode();
    var0.setCode((-1));
    var0.setRequest("geo.google.GeoException: ");
    int var7 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == (-1));

  }

  public void test391() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test391");


    geo.google.datamodel.GeoStatusCode var4 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var5 = new geo.google.GeoException("", var4);
    geo.google.GeoException var6 = new geo.google.GeoException("geo.google.GeoException: ", var4);
    geo.google.datamodel.GeoStatusCode var7 = var6.getStatus();
    geo.google.GeoException var8 = new geo.google.GeoException("hi!", var7);
    geo.google.datamodel.GeoStatusCode var12 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var13 = new geo.google.GeoException("", var12);
    geo.google.datamodel.GeoStatusCode var16 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var17 = new geo.google.GeoException("", var16);
    geo.google.GeoException var18 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var13, var16);
    geo.google.GeoException var19 = new geo.google.GeoException((java.lang.Throwable)var18);
    var8.addSuppressed((java.lang.Throwable)var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);

  }

  public void test392() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test392");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var5 = var0.createAddressDetailsPostalServiceElementsBarcode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumber var6 = var0.createPostalCodePostalCodeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var7 = var0.createPostalRouteType();
    var7.setType("geo.google.datamodel.GeoUsAddress@aae93c6[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@4b67b1a4[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@4bfaca9[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test393() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test393");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var2 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var4 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var5 = var0.createSubPremiseTypeSubPremiseNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName var6 = var0.createAdministrativeAreaAdministrativeAreaName();
    var6.setType("geo.google.datamodel.GeoAddress@62c859b5[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var9 = var6.getContent();
    var6.setCode("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test394() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test394");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    java.util.List var1 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var3 = var2.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var4 = var2.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var5 = var2.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var6 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var6.setThoroughfarePostDirection(var7);
    java.util.List var9 = var6.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var10 = var6.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var11 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var13 = var12.getCode();
    java.lang.String var14 = var12.getCode();
    var11.setThoroughfareTrailingType(var12);
    var6.setDependentThoroughfare(var11);
    var5.setDependentThoroughfare(var11);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var19 = var18.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var20 = var18.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var21 = var18.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var22 = var18.createThoroughfareLeadingTypeType();
    var11.setThoroughfareLeadingType(var22);
    var0.setThoroughfareLeadingType(var22);
    java.util.Map var25 = var0.getOtherAttributes();
    java.lang.String var26 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);

  }

  public void test395() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test395");


    geo.google.GeoAddressStandardizer var2 = new geo.google.GeoAddressStandardizer("G_GEO_UNKOWN_STATUS", 100L);
    var2.setApiKey("Uknown Status");
    org.apache.commons.httpclient.params.HttpClientParams var5 = var2.getHttpClientParams();
    var2.setRateLimitInterval(1L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test396() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test396");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var5 = var0.createAddressDetailsPostalServiceElementsBarcode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownName var6 = var0.createPostalCodePostTownPostTownName();
    java.lang.String var7 = var6.getType();
    java.util.Map var8 = var6.getOtherAttributes();
    var6.setCode("geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var6.setCode("geo.google.datamodel.GeoUsAddress@56cc18ee[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@7178ddc6[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@36282c5d[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    var6.setContent("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test397() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test397");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    java.lang.String var2 = var0.getValidToDate();
    java.lang.String var3 = var0.getCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var4 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var5 = var4.getIndicator();
    java.lang.String var6 = var4.getType();
    java.lang.String var7 = var4.getUsageType();
    var0.setAdministrativeArea(var4);
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var9 = var4.getLocality();
    java.util.Map var10 = var4.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);

  }

  public void test398() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test398");


    com.google.earth.kml._2.ObjectFactory var0 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var1 = var0.createResponseType();
    com.google.earth.kml._2.PointType var2 = new com.google.earth.kml._2.PointType();
    var2.setTessellate((java.lang.Boolean)true);
    var2.setExtrude((java.lang.Boolean)false);
    java.lang.Boolean var7 = var2.isExtrude();
    var2.setCoordinates("Uknown Status");
    javax.xml.bind.JAXBElement var10 = var0.createPoint(var2);
    com.google.earth.kml._2.KmlType var11 = var0.createKmlType();
    com.google.earth.kml._2.ObjectFactory var12 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var13 = var12.createResponseType();
    com.google.earth.kml._2.PointType var14 = new com.google.earth.kml._2.PointType();
    var14.setTessellate((java.lang.Boolean)true);
    var14.setExtrude((java.lang.Boolean)false);
    java.lang.Boolean var19 = var14.isExtrude();
    var14.setCoordinates("Uknown Status");
    javax.xml.bind.JAXBElement var22 = var12.createPoint(var14);
    com.google.earth.kml._2.KmlType var23 = var12.createKmlType();
    com.google.earth.kml._2.PointType var24 = var12.createPointType();
    com.google.earth.kml._2.ObjectFactory var25 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.KmlType var26 = new com.google.earth.kml._2.KmlType();
    javax.xml.bind.JAXBElement var27 = var25.createKml(var26);
    com.google.earth.kml._2.ObjectFactory var28 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var29 = var28.createResponseType();
    com.google.earth.kml._2.ResponseType var30 = var28.createResponseType();
    javax.xml.bind.JAXBElement var31 = var25.createResponse(var30);
    java.util.List var32 = var30.getPlacemark();
    javax.xml.bind.JAXBElement var33 = var12.createResponse(var30);
    var11.setResponse(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + false+ "'", var7.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + false+ "'", var19.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);

  }

  public void test399() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test399");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    var0.setNumberRangeOccurrence("geo.google.GeoException: geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var4 = var3.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var5 = var3.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var3.createPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var7 = var3.createAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var8 = var3.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberFrom var9 = var3.createThoroughfareThoroughfareNumberRangeThoroughfareNumberFrom();
    var0.setThoroughfareNumberFrom(var9);
    java.util.Map var11 = var9.getOtherAttributes();
    java.util.List var12 = var9.getContent();
    java.util.List var13 = var9.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);

  }

  public void test400() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test400");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var3 = var0.createAddressDetailsCountry();
    java.util.List var4 = var3.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var5 = var3.getThoroughfare();
    java.util.List var6 = var3.getCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var7 = var3.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var8 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var8.setThoroughfarePostDirection(var9);
    java.util.List var11 = var8.getThoroughfareNumberSuffix();
    var8.setDependentThoroughfaresIndicator("hi!");
    var8.setDependentThoroughfaresType("");
    var3.setThoroughfare(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var17 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var18 = var17.getIndicator();
    var17.setUsageType("UNKNOWN_LOCATION");
    var3.setAdministrativeArea(var17);
    var17.setIndicator("hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);

  }

  public void test401() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test401");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    var5.setIdentifierType("geo.google.GeoException: geo.google.GeoException: ");
    var5.setContent("CLAMP_TO_GROUND");
    java.lang.String var10 = var5.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test402() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test402");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    var5.setIndicator("G_GEO_UNKOWN_STATUS");
    var5.setType("hi!");
    var5.setType("geo.google.GeoException: ");
    var5.setIndicatorOccurence("hi!");
    var5.setSeparator("geo.google.GeoException: ");
    java.lang.String var16 = var5.getIndicatorOccurence();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo var17 = new oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo();
    var5.setPremiseNumberRangeTo(var17);
    java.lang.String var19 = var5.getSeparator();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom var20 = var5.getPremiseNumberRangeFrom();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!"+ "'", var16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "geo.google.GeoException: "+ "'", var19.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);

  }

  public void test403() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test403");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var2 = var0.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var4 = var0.createPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var5 = var0.createXAL();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var6 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var8 = var7.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var9 = var7.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var10 = var7.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom var11 = var7.createPremisePremiseNumberRangePremiseNumberRangeFrom();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var12 = var7.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var13 = var7.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var14 = var7.createPostalCode();
    var6.setPostalCode(var14);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var17 = var16.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var18 = var16.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var19 = var16.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var20 = var16.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var21 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var22 = var21.getAddressLine();
    java.util.List var23 = var21.getAny();
    var20.setPostBox(var21);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var25 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var20.setPostBox(var25);
    java.util.List var27 = var25.getAddressLine();
    var25.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var30 = var25.getPostBoxNumberExtension();
    var6.setPostBox(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);

  }

  public void test404() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test404");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    java.lang.String var1 = var0.getValidToDate();
    var0.setAddressDetailsKey("hi!");
    java.util.Map var4 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var6 = var5.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var7 = var5.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var8 = var5.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var9 = var5.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var10 = var5.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var11 = var5.createLocality();
    var0.setLocality(var11);
    var11.setIndicator("UNKNOWN_LOCATION");
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var15 = var11.getLargeMailUser();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var16 = var11.getLargeMailUser();
    java.util.List var17 = var11.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var18 = var11.getPostalCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);

  }

  public void test405() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test405");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var1 = var0.getAny();
    java.util.List var2 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var3 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var4 = var3.getAny();
    java.lang.String var5 = var3.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var6 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude();
    var3.setAddressLatitude(var6);
    var6.setCode("Uknown Status");
    var0.setAddressLatitude(var6);
    var6.setContent("geo.google.GeoException: ");
    java.util.Map var13 = var6.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);

  }

  public void test406() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test406");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var3 = var0.createLocalityLocalityName();
    var3.setCode("geo.google.GeoException: ");
    java.lang.String var6 = var3.getType();
    java.lang.String var7 = var3.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test407() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test407");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var1 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var1.setThoroughfarePostDirection(var2);
    java.util.List var4 = var1.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var5 = var1.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var1.getPostalCode();
    var0.setThoroughfare(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var9 = var8.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var10 = var8.createDependentLocalityTypeDependentLocalityNumber();
    var0.setDependentLocalityNumber(var10);
    java.util.Map var12 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var13 = var0.getPremise();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test408() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test408");


    geo.google.mapping.XmlToAddressFunctor var0 = new geo.google.mapping.XmlToAddressFunctor();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.util.List var2 = var0.execute("geo.google.datamodel.GeoAddress@bb4d8b3[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type java.lang.RuntimeException");
    } catch (java.lang.RuntimeException e) {
      // Expected exception.
    }

  }

  public void test409() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test409");


    com.google.earth.kml._2.PlacemarkType var0 = new com.google.earth.kml._2.PlacemarkType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var1 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var2 = var1.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var3 = var1.getAddressLines();
    var1.setUsage("");
    var1.setCode("G_GEO_UNKOWN_STATUS");
    var0.setAddressDetails(var1);
    var0.setAddress("geo.google.GeoException: ");
    com.google.earth.kml._2.PointType var11 = var0.getPoint();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var12 = var0.getAddressDetails();
    java.lang.String var13 = var0.getAddress();
    var0.setId("geo.google.datamodel.GeoUsAddress@1add92c3[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@48ce4dfc[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@606200bb[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setId("geo.google.datamodel.GeoAddress@439373c0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var18 = var0.getAddress();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "geo.google.GeoException: "+ "'", var13.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "geo.google.GeoException: "+ "'", var18.equals("geo.google.GeoException: "));

  }

  public void test410() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test410");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var1 = var0.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var3 = var2.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var4 = var2.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var5 = var2.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var6 = var5.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var7 = var5.getPostOffice();
    java.lang.String var8 = var5.getUsageType();
    java.util.List var9 = var5.getAddressLine();
    var0.setSubAdministrativeArea(var5);
    java.util.Map var11 = var0.getOtherAttributes();
    var0.setUsageType("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.List var14 = var0.getAdministrativeAreaName();
    java.util.Map var15 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);

  }

  public void test411() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test411");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var2 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var4 = var0.createSubPremiseTypeSubPremiseName();
    var4.setCode("geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test412() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test412");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix();
    java.lang.String var1 = var0.getNumberPrefixSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);

  }

  public void test413() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test413");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var1 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var1.setThoroughfarePostDirection(var2);
    java.util.List var4 = var1.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var5 = var1.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var1.getPostalCode();
    var0.setThoroughfare(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var8 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var9 = var8.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var10 = var8.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var12 = var11.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var13 = var11.createPostBoxPostBoxNumberExtension();
    var8.setPostBoxNumberExtension(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var15 = var8.getPostBoxNumberExtension();
    java.util.List var16 = var8.getAny();
    var0.setPostBox(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var19 = var18.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var20 = var18.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var21 = var18.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var22 = var18.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var23 = var18.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var24 = var18.createFirmType();
    java.util.List var25 = var24.getFirmName();
    var8.setFirm(var24);
    java.util.List var27 = var8.getAddressLine();
    java.util.List var28 = var8.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberPrefix var29 = var8.getPostBoxNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var30 = var8.getPostBoxNumberSuffix();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);

  }

  public void test414() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test414");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    java.lang.String var6 = var5.getType();
    var5.setIndicatorOccurence("geo.google.datamodel.GeoAddress@6921ddb6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test415() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test415");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    var0.setUsageType("geo.google.GeoException: geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.getSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var5 = var4.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var6 = var4.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var7 = var4.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var8 = var7.getType();
    java.util.List var9 = var7.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var11 = var10.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var12 = var10.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var13 = var10.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var14 = var10.createThoroughfare();
    java.util.List var15 = var14.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var16 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var17 = var16.getPostTown();
    var14.setPostalCode(var16);
    var7.setPostalCode(var16);
    var0.setSubAdministrativeArea(var7);
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var21 = var7.getPostOffice();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);

  }

  public void test416() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test416");


    geo.google.datamodel.GeoAltitude var0 = new geo.google.datamodel.GeoAltitude();
    geo.google.datamodel.GeoAltitude var1 = new geo.google.datamodel.GeoAltitude();
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var2 = var1.getMode();
    boolean var3 = var0.equals((java.lang.Object)var1);
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var4 = var1.getMode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == true);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test417() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test417");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    var3.setContent("");
    java.lang.String var6 = var3.getNameNumberOccurrence();
    java.util.Map var7 = var3.getOtherAttributes();
    java.lang.String var8 = var3.getCode();
    java.util.Map var9 = var3.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test418() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test418");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var1 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var2 = var0.createSubPremiseTypeSubPremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var3 = var0.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var4 = var0.createPostalCodePostTownPostTownSuffix();
    var4.setContent("geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test419() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test419");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    java.lang.String var1 = var0.getIndicator();
    var0.setType("(default) Indicates to ignore an altitude specification");
    java.util.List var4 = var0.getAddressLine();
    var0.setType("hi!");
    var0.setIndicatorOccurrence("geo.google.datamodel.GeoAddress@77278fe3[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test420() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test420");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber var4 = var0.createPremiseNumber();
    java.lang.String var5 = var4.getIndicator();
    java.lang.String var6 = var4.getIndicator();
    java.lang.String var7 = var4.getNumberTypeOccurrence();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test421() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test421");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName var2 = var0.createAdministrativeAreaAdministrativeAreaName();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    var3.setType("G_GEO_UNKOWN_STATUS");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test422() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test422");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    java.util.List var4 = var3.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var6 = var5.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var7 = var5.createPostOffice();
    java.util.List var8 = var7.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var9 = var7.getPostOfficeNumber();
    var7.setType("G_GEO_UNKOWN_STATUS");
    java.util.List var12 = var7.getPostOfficeName();
    var3.setPostOffice(var7);
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var14 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var15 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var16 = var15.createPremise();
    java.util.List var17 = var16.getAddressLine();
    java.util.List var18 = var16.getAny();
    var16.setType("");
    var16.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var23 = var16.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var24 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var25 = var24.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var26 = var24.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var27 = var24.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var28 = var24.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var29 = var24.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var30 = var24.createFirmType();
    var16.setFirm(var30);
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var32 = var16.getMailStop();
    var16.setType("hi!");
    var14.setPremise(var16);
    var3.setLocality(var14);
    java.util.List var37 = var14.getAddressLine();
    java.util.Map var38 = var14.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var39 = var14.getPostOffice();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);

  }

  public void test423() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test423");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var2 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var4.setThoroughfarePostDirection(var5);
    java.util.List var7 = var4.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var8 = var4.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var9 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var11 = var10.getCode();
    java.lang.String var12 = var10.getCode();
    var9.setThoroughfareTrailingType(var10);
    var4.setDependentThoroughfare(var9);
    var3.setDependentThoroughfare(var9);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var16 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType();
    java.lang.String var18 = var17.getCode();
    var16.setThoroughfarePreDirection(var17);
    var17.setContent("geo.google.GeoException: geo.google.GeoException: ");
    var9.setThoroughfarePreDirection(var17);
    var17.setCode("geo.google.datamodel.GeoAddress@6921ddb6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);

  }

  public void test424() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test424");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var5 = var0.createAddressDetailsPostalServiceElementsBarcode();
    var5.setType("G_GEO_UNKOWN_STATUS");
    java.lang.String var8 = var5.getContent();
    var5.setType("geo.google.datamodel.GeoAddress@2eda413f[\n  _coordinate=<null>\n  _addressDetails=oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails@7af1a720\n  _addressLine=geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test425() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test425");


    geo.google.datamodel.GeoAltitude var0 = new geo.google.datamodel.GeoAltitude();
    geo.google.datamodel.GeoAltitude var2 = new geo.google.datamodel.GeoAltitude(10.0d);
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var3 = var2.getMode();
    var0.setMode(var3);
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var5 = var0.getMode();
    java.lang.String var7 = var5.getDescription("geo.google.datamodel.GeoAddress@25d14add[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var8 = var5.getName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "(default) Indicates to ignore an altitude specification"+ "'", var7.equals("(default) Indicates to ignore an altitude specification"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "CLAMP_TO_GROUND"+ "'", var8.equals("CLAMP_TO_GROUND"));

  }

  public void test426() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test426");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix();
    java.util.Map var1 = var0.getOtherAttributes();
    var0.setType("hi!");
    java.util.Map var4 = var0.getOtherAttributes();
    java.util.Map var5 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test427() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test427");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber();
    var0.setCode("");
    var0.setType("G_GEO_UNKOWN_STATUS");
    java.lang.String var5 = var0.getIndicator();
    java.util.Map var6 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test428() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test428");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    var3.setContent("");
    java.lang.String var6 = var3.getNameNumberOccurrence();
    java.util.Map var7 = var3.getOtherAttributes();
    var3.setContent("geo.google.datamodel.GeoAddress@49e11d13[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var10 = var3.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);

  }

  public void test429() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test429");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var2 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var3 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var4 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    java.util.Map var5 = var4.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test430() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test430");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    java.util.List var3 = var0.getThoroughfareNumberSuffix();
    var0.setDependentThoroughfaresIndicator("geo.google.datamodel.GeoAddress@77278fe3[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test431() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test431");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var3 = var0.createAddressDetailsCountry();
    java.util.List var4 = var3.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var5 = var3.getThoroughfare();
    java.util.List var6 = var3.getCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var7 = var3.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var8 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var8.setThoroughfarePostDirection(var9);
    java.util.List var11 = var8.getThoroughfareNumberSuffix();
    var8.setDependentThoroughfaresIndicator("hi!");
    var8.setDependentThoroughfaresType("");
    var3.setThoroughfare(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var17 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var18 = var17.getIndicator();
    var17.setUsageType("UNKNOWN_LOCATION");
    var3.setAdministrativeArea(var17);
    java.util.List var22 = var3.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var23 = var3.getThoroughfare();
    java.lang.String var24 = var23.getDependentThoroughfares();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);

  }

  public void test432() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test432");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var3 = var0.createLocalityLocalityName();
    var3.setContent("G_GEO_UNKOWN_STATUS");
    java.util.Map var6 = var3.getOtherAttributes();
    java.lang.String var7 = var3.getContent();
    java.lang.String var8 = var3.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var7.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test433() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test433");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var2 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var4 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var5 = var0.createSubPremiseTypeSubPremiseNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName var6 = var0.createAdministrativeAreaAdministrativeAreaName();
    var6.setType("geo.google.datamodel.GeoAddress@62c859b5[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var9 = var6.getContent();
    java.lang.String var10 = var6.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test434() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test434");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var1 = var0.getSubPremiseNumberPrefix();
    var0.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var4 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var5 = var4.getSubPremiseNumberPrefix();
    var4.setType("");
    java.util.List var8 = var4.getSubPremiseNumberSuffix();
    var0.setSubPremise(var4);
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var10 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var11 = var10.getSubPremiseNumberPrefix();
    java.util.List var12 = var10.getAny();
    var4.setSubPremise(var10);
    java.util.List var14 = var4.getSubPremiseName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);

  }

  public void test435() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test435");


    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix();
    var0.setCode("hi!");
    var0.setCode("Uknown Status");
    var0.setNumberSuffixSeparator("hi!");
    java.lang.String var7 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test436() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test436");


    geo.google.datamodel.GeoAddress var0 = new geo.google.datamodel.GeoAddress();
    var0.setAddressLine("UNKNOWN_LOCATION");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var3 = var0.getAddressDetails();
    geo.google.datamodel.GeoCoordinate var11 = new geo.google.datamodel.GeoCoordinate();
    double var12 = var11.getLongitude();
    geo.google.datamodel.GeoCoordinate var13 = new geo.google.datamodel.GeoCoordinate();
    double var14 = var13.getLongitude();
    double var15 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var11, var13);
    geo.google.datamodel.GeoCoordinate var16 = new geo.google.datamodel.GeoCoordinate();
    double var17 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var11, var16);
    geo.google.datamodel.GeoStatusCode var20 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var21 = new geo.google.GeoException("", var20);
    boolean var22 = var11.equals((java.lang.Object)var20);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var23 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var24 = var23.createPremise();
    java.util.List var25 = var24.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var26 = var24.getFirm();
    var24.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var29 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var30 = var29.createPremise();
    java.lang.String var31 = var30.getPremiseThoroughfareConnector();
    var24.setPremise(var30);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var33 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var34 = var33.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var35 = var33.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var36 = var33.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var37 = var36.getType();
    java.util.List var38 = var36.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var39 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var40 = var39.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var41 = var39.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var42 = var39.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var43 = var39.createThoroughfare();
    java.util.List var44 = var43.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var45 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var46 = var45.getPostTown();
    var43.setPostalCode(var45);
    var36.setPostalCode(var45);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var49 = var36.getPostalCode();
    var24.setPostalCode(var49);
    boolean var51 = var11.equals((java.lang.Object)var24);
    geo.google.datamodel.GeoCoordinate var52 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var53 = new geo.google.datamodel.GeoCoordinate();
    double var54 = var53.getLongitude();
    double var55 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var52, var53);
    geo.google.datamodel.GeoAltitude var56 = var53.getAltitude();
    geo.google.datamodel.GeoCoordinate var57 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var58 = new geo.google.datamodel.GeoCoordinate();
    double var59 = var58.getLongitude();
    double var60 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var57, var58);
    double var61 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var53, var58);
    double var62 = geo.google.datamodel.GeoUtils.distanceBetweenInMiles(var11, var58);
    geo.google.datamodel.GeoCoordinate var63 = var11.clone();
    double var64 = var63.getLatitude();
    geo.google.datamodel.GeoCoordinate var79 = new geo.google.datamodel.GeoCoordinate();
    double var80 = var79.getLongitude();
    geo.google.datamodel.GeoCoordinate var81 = new geo.google.datamodel.GeoCoordinate();
    double var82 = var81.getLongitude();
    double var83 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var79, var81);
    double var84 = var81.getLatitude();
    var81.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var88 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var89 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var81, var88);
    geo.google.datamodel.GeoAddressAccuracy var91 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var92 = var91.getName();
    geo.google.datamodel.GeoUsAddress var93 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: hi!", "(default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.GeoException: ", "", "UNKNOWN_LOCATION", var81, var91);
    geo.google.datamodel.GeoAddressAccuracy var94 = var93.getAccuracy();
    geo.google.datamodel.GeoUsAddress var95 = new geo.google.datamodel.GeoUsAddress("geo.google.datamodel.GeoAddress@6921ddb6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@535811d6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "hi!", "geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  (default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoUsAddress@541af6ab[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@36387fb0[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@3747179f[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@70027021[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@357d260d[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]", var63, var94);
    var0.setAccuracy(var94);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var54 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var62 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var80 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var82 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var83 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var92 + "' != '" + "UNKNOWN_LOCATION"+ "'", var92.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var94);

  }

  public void test437() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test437");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    java.util.List var5 = var4.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var6 = var4.getThoroughfarePreDirection();
    java.util.List var7 = var4.getThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType();
    java.lang.String var9 = var8.getType();
    var4.setThoroughfareLeadingType(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var12 = var11.createPremise();
    java.util.List var13 = var12.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var15 = var14.createPremise();
    var12.setPremise(var15);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var17 = var15.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var18 = var15.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var20 = var19.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var21 = var19.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var22 = var19.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var23 = var19.createPremisePremiseLocation();
    var15.setPremiseLocation(var23);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var25 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var26 = var25.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var27 = var25.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var28 = var25.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var29 = var28.getType();
    java.util.List var30 = var28.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var31 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var32 = var31.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var33 = var31.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var34 = var31.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var35 = var31.createThoroughfare();
    java.util.List var36 = var35.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var37 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var38 = var37.getPostTown();
    var35.setPostalCode(var37);
    var28.setPostalCode(var37);
    var37.setType("(default) Indicates to ignore an altitude specification");
    var15.setPostalCode(var37);
    java.util.List var44 = var15.getPremiseNumberSuffix();
    var4.setPremise(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);

  }

  public void test438() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test438");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    java.util.List var3 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var5 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var7 = var6.getCode();
    java.lang.String var8 = var6.getCode();
    var5.setThoroughfareTrailingType(var6);
    var0.setDependentThoroughfare(var5);
    var0.setDependentThoroughfaresType("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var14 = var13.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var15 = var13.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var16 = var13.createThoroughfareLeadingTypeType();
    java.lang.String var17 = var16.getType();
    var0.setThoroughfareLeadingType(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var19 = var0.getDependentLocality();
    java.lang.String var20 = var0.getDependentThoroughfaresIndicator();
    java.util.List var21 = var0.getThoroughfareName();
    java.util.Map var22 = var0.getOtherAttributes();
    java.lang.String var23 = var0.getDependentThoroughfaresIndicator();
    java.util.List var24 = var0.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var25 = var0.getThoroughfarePreDirection();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);

  }

  public void test439() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test439");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    java.lang.String var4 = var3.getType();
    java.lang.String var5 = var3.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var6 = var3.getPostBox();
    java.util.List var7 = var3.getAny();
    java.lang.String var8 = var3.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber var9 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber();
    var9.setContent("geo.google.GeoException: geo.google.GeoException: ");
    var9.setContent("(default) Indicates to ignore an altitude specification");
    var3.setPostalRouteNumber(var9);
    java.lang.String var15 = var9.getContent();
    java.util.Map var16 = var9.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "(default) Indicates to ignore an altitude specification"+ "'", var15.equals("(default) Indicates to ignore an altitude specification"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);

  }

  public void test440() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test440");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var2 = var0.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var4 = var0.createPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitude();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var6 = var0.createFirmType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var7 = var0.createPostBoxPostBoxNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var8 = var0.createPostOfficePostOfficeNumber();
    java.lang.String var9 = var8.getIndicatorOccurrence();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test441() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test441");


    oasis.names.tc.ciq.xsdschema.xal._2.Department var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Department();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.getMailStop();
    var0.setType("");
    java.util.Map var4 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var5 = var0.getMailStop();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var7 = var6.createPremise();
    java.util.List var8 = var7.getAddressLine();
    java.util.List var9 = var7.getAny();
    var7.setType("");
    var7.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var14 = var7.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var15 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var16 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName();
    var15.setMailStopName(var16);
    var7.setMailStop(var15);
    var0.setMailStop(var15);
    java.util.List var20 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var21 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var22 = var21.createMailStopType();
    java.lang.String var23 = var22.getType();
    var0.setMailStop(var22);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var25 = var0.getPostalCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);

  }

  public void test442() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test442");


    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var2 = var1.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var3 = var1.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var4 = var1.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var5 = var1.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var6 = var1.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var7 = var1.createFirmType();
    var0.setFirm(var7);
    var0.setType("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var11 = var0.getPostalCode();
    java.lang.String var12 = var0.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var13 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var15 = var14.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var16 = var14.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var17 = var14.createPostalCode();
    var13.setPostalCode(var17);
    var0.setPostalCode(var17);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var20 = var0.getPostBoxNumber();
    var0.setIndicator("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var23 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var24 = var23.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var25 = var23.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var26 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var27 = var26.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var28 = var26.createPostBoxPostBoxNumberExtension();
    var23.setPostBoxNumberExtension(var28);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var30 = var23.getPostBoxNumberExtension();
    var30.setContent("");
    var30.setContent("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setPostBoxNumberExtension(var30);
    java.util.Map var36 = var30.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);

  }

  public void test443() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test443");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var2 = var1.getCode();
    java.lang.String var3 = var1.getCode();
    var0.setThoroughfareTrailingType(var1);
    java.util.List var5 = var0.getAddressLine();
    java.util.List var6 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var7 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var9 = var8.getCode();
    java.lang.String var10 = var8.getCode();
    var7.setThoroughfareTrailingType(var8);
    java.lang.String var12 = var8.getCode();
    java.util.Map var13 = var8.getOtherAttributes();
    java.lang.String var14 = var8.getCode();
    var0.setThoroughfareTrailingType(var8);
    var8.setCode("geo.google.datamodel.GeoAddress@25d14add[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);

  }

  public void test444() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test444");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var2 = var1.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var3 = var1.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var4 = var3.getCode();
    java.util.Map var5 = var3.getOtherAttributes();
    var3.setCode("G_GEO_UNKOWN_STATUS");
    var0.setEndorsementLineCode(var3);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var9 = var0.getAddressLatitude();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var10 = var0.getAddressLatitudeDirection();
    java.lang.String var11 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var12 = var0.getEndorsementLineCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test445() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test445");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressLine var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressLine();
    var0.setCode("G_GEO_UNKOWN_STATUS");
    java.lang.String var3 = var0.getContent();
    java.lang.String var4 = var0.getCode();
    var0.setContent("UNKNOWN_LOCATION");
    java.lang.String var7 = var0.getType();
    var0.setType("geo.google.datamodel.GeoUsAddress@54eece10[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@a1aa800[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@5c0b9d2e[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var4.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test446() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test446");


    geo.google.GeoAddressStandardizer var1 = new geo.google.GeoAddressStandardizer("geo.google.datamodel.GeoUsAddress@2e935a48[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@4c0c44db[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@397cacde[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    geo.google.datamodel.GeoCoordinate var16 = new geo.google.datamodel.GeoCoordinate();
    double var17 = var16.getLongitude();
    geo.google.datamodel.GeoCoordinate var18 = new geo.google.datamodel.GeoCoordinate();
    double var19 = var18.getLongitude();
    double var20 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var16, var18);
    double var21 = var18.getLatitude();
    var18.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var25 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var26 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var18, var25);
    geo.google.datamodel.GeoAddressAccuracy var28 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var29 = var28.getName();
    geo.google.datamodel.GeoUsAddress var30 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: hi!", "(default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.GeoException: ", "", "UNKNOWN_LOCATION", var18, var28);
    var30.setPostalCode("(default) Indicates to ignore an altitude specification");
    geo.google.datamodel.GeoAddressAccuracy var34 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(0);
    var30.setAccuracy(var34);
    var30.setAddressLine2("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoAddress var38 = var1.standardizeToGeoAddress(var30);
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "UNKNOWN_LOCATION"+ "'", var29.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);

  }

  public void test447() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test447");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var1 = var0.getAny();
    java.lang.String var2 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var3 = var0.getBarcode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var4 = var0.getAddressLatitudeDirection();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test448() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test448");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    java.lang.String var6 = var5.getSeparator();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom var7 = var5.getPremiseNumberRangeFrom();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test449() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test449");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName();
    var0.setType("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var3 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test450() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test450");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var2 = var0.getCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var3 = var0.getAddress();
    java.lang.String var4 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test451() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test451");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var2 = var0.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    var2.setContent("geo.google.GeoException: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test452() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test452");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var3 = var2.getPostBox();
    java.util.List var4 = var2.getAddressLine();
    java.util.List var5 = var2.getBuildingName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test453() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test453");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var2 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var3 = var0.createAddressDetailsPostalServiceElementsBarcode();
    var3.setCode("geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var6 = var3.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test454() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test454");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    java.lang.String var2 = var0.getValidToDate();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var3 = var0.getPostalServiceElements();
    java.lang.String var4 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test455() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test455");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    java.lang.String var1 = var0.getIndicator();
    var0.setType("(default) Indicates to ignore an altitude specification");
    java.util.List var4 = var0.getAddressLine();
    var0.setNumberRangeOccurrence("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setIndicatorOccurrence("G_GEO_UNKOWN_STATUS");
    var0.setSeparator("geo.google.datamodel.GeoUsAddress@49269587[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@422f796[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@13ac9af9[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test456() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test456");


    geo.google.GeoException var4 = new geo.google.GeoException("hi!");
    geo.google.datamodel.GeoStatusCode var7 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var8 = new geo.google.GeoException("", var7);
    java.lang.String var9 = var8.toString();
    geo.google.datamodel.GeoStatusCode var13 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var14 = new geo.google.GeoException("", var13);
    geo.google.datamodel.GeoStatusCode var17 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var18 = new geo.google.GeoException("", var17);
    geo.google.GeoException var19 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var14, var17);
    var8.addSuppressed((java.lang.Throwable)var19);
    var4.addSuppressed((java.lang.Throwable)var8);
    geo.google.datamodel.GeoStatusCode var25 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var26 = new geo.google.GeoException("", var25);
    java.lang.String var27 = var26.toString();
    geo.google.datamodel.GeoStatusCode var31 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var32 = new geo.google.GeoException("", var31);
    geo.google.datamodel.GeoStatusCode var35 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var36 = new geo.google.GeoException("", var35);
    geo.google.GeoException var37 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var32, var35);
    var26.addSuppressed((java.lang.Throwable)var37);
    geo.google.datamodel.GeoStatusCode var40 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    boolean var42 = var40.equals((java.lang.Object)10L);
    java.lang.String var43 = var40.name();
    int var44 = var40.getCode();
    geo.google.GeoException var45 = new geo.google.GeoException("", (java.lang.Throwable)var26, var40);
    java.lang.String var46 = var40.getDescription();
    geo.google.GeoException var47 = new geo.google.GeoException("Uknown Status", (java.lang.Throwable)var4, var40);
    geo.google.GeoException var48 = new geo.google.GeoException("UNKNOWN_LOCATION", (java.lang.Throwable)var47);
    geo.google.datamodel.GeoStatusCode var52 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var53 = new geo.google.GeoException("", var52);
    geo.google.datamodel.GeoStatusCode var56 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var57 = new geo.google.GeoException("", var56);
    geo.google.GeoException var58 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var53, var56);
    geo.google.GeoException var59 = new geo.google.GeoException("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", (java.lang.Throwable)var48, var56);
    java.lang.String var60 = var56.getDescription();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "geo.google.GeoException: "+ "'", var9.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "geo.google.GeoException: "+ "'", var27.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var43.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "Uknown Status"+ "'", var46.equals("Uknown Status"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var60 + "' != '" + "Uknown Status"+ "'", var60.equals("Uknown Status"));

  }

  public void test457() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test457");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    java.lang.String var11 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var12.setIndicator("G_GEO_UNKOWN_STATUS");
    var2.setPostBox(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var17 = var16.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var18 = var16.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var19 = var16.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var20 = var16.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var21 = var16.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var22 = var16.createFirmType();
    var12.setFirm(var22);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var24 = var22.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var25 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    var22.setMailStop(var25);
    java.util.Map var27 = var22.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);

  }

  public void test458() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test458");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var6 = var0.createLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var7 = var6.getPremise();
    java.lang.String var8 = var6.getType();
    java.util.List var9 = var6.getAddressLine();
    var6.setType("Uknown Status");
    java.lang.String var12 = var6.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var13 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var14 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var15 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var14.setThoroughfarePostDirection(var15);
    java.util.List var17 = var14.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var18 = var14.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var19 = var14.getPostalCode();
    var13.setThoroughfare(var14);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var21 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var22 = var21.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var23 = var21.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var24 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var25 = var24.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var26 = var24.createPostBoxPostBoxNumberExtension();
    var21.setPostBoxNumberExtension(var26);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var28 = var21.getPostBoxNumberExtension();
    java.util.List var29 = var21.getAny();
    var13.setPostBox(var21);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var31 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var32 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var33 = var32.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var34 = var32.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var35 = var32.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var36 = var32.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var37 = var32.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var38 = var32.createFirmType();
    var31.setFirm(var38);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var40 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var41 = var40.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var42 = var40.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var43 = var40.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var44 = var40.createThoroughfare();
    java.util.List var45 = var44.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var46 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var47 = var46.getPostTown();
    var44.setPostalCode(var46);
    var38.setPostalCode(var46);
    var21.setFirm(var38);
    var38.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var53 = var38.getPostalCode();
    var6.setPostalCode(var53);
    java.util.List var55 = var6.getLocalityName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);

  }

  public void test459() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test459");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var1 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberPrefix var2 = var0.createPostBoxPostBoxNumberPrefix();
    var2.setContent("Uknown Status");
    var2.setNumberPrefixSeparator("geo.google.datamodel.GeoUsAddress@1add92c3[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@48ce4dfc[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@606200bb[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test460() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test460");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseName var3 = var0.createPremisePremiseName();
    var3.setCode("");
    java.util.Map var6 = var3.getOtherAttributes();
    java.lang.String var7 = var3.getContent();
    java.lang.String var8 = var3.getType();
    java.lang.String var9 = var3.getCode();
    java.lang.String var10 = var3.getCode();
    java.lang.String var11 = var3.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));

  }

  public void test461() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test461");


    oasis.names.tc.ciq.xsdschema.xal._2.XAL var0 = new oasis.names.tc.ciq.xsdschema.xal._2.XAL();
    java.util.List var1 = var0.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);

  }

  public void test462() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test462");


    geo.google.GeoAddressStandardizer var2 = new geo.google.GeoAddressStandardizer("G_GEO_UNKOWN_STATUS", 100L);
    org.apache.commons.httpclient.params.HttpClientParams var3 = var2.getHttpClientParams();
    geo.google.datamodel.GeoCoordinate var18 = new geo.google.datamodel.GeoCoordinate();
    double var19 = var18.getLongitude();
    geo.google.datamodel.GeoCoordinate var20 = new geo.google.datamodel.GeoCoordinate();
    double var21 = var20.getLongitude();
    double var22 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var18, var20);
    double var23 = var20.getLatitude();
    var20.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var27 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var28 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var20, var27);
    geo.google.datamodel.GeoAddressAccuracy var30 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var31 = var30.getName();
    geo.google.datamodel.GeoUsAddress var32 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: hi!", "(default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.GeoException: ", "", "UNKNOWN_LOCATION", var20, var30);
    var32.setPostalCode("(default) Indicates to ignore an altitude specification");
    java.lang.String var35 = var32.getAddressLine2();
    geo.google.datamodel.GeoAddressAccuracy var36 = var32.getAccuracy();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.util.List var37 = var2.standardizeToGeoAddresses(var32);
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "UNKNOWN_LOCATION"+ "'", var31.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "(default) Indicates to ignore an altitude specification"+ "'", var35.equals("(default) Indicates to ignore an altitude specification"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);

  }

  public void test463() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test463");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var2 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var3 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var4 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var6 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test464() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test464");


    com.google.earth.kml._2.ObjectFactory var0 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var1 = var0.createResponseType();
    com.google.earth.kml._2.PointType var2 = new com.google.earth.kml._2.PointType();
    var2.setTessellate((java.lang.Boolean)true);
    var2.setExtrude((java.lang.Boolean)false);
    java.lang.Boolean var7 = var2.isExtrude();
    var2.setCoordinates("Uknown Status");
    javax.xml.bind.JAXBElement var10 = var0.createPoint(var2);
    com.google.earth.kml._2.KmlType var11 = var0.createKmlType();
    com.google.earth.kml._2.PointType var12 = var0.createPointType();
    var12.setTessellate((java.lang.Boolean)false);
    var12.setExtrude((java.lang.Boolean)false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + false+ "'", var7.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test465() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test465");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var1 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var1.setThoroughfarePostDirection(var2);
    java.util.List var4 = var1.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var5 = var1.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var1.getPostalCode();
    var0.setThoroughfare(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var8 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var9 = var8.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var10 = var8.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var12 = var11.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var13 = var11.createPostBoxPostBoxNumberExtension();
    var8.setPostBoxNumberExtension(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var15 = var8.getPostBoxNumberExtension();
    java.util.List var16 = var8.getAny();
    var0.setPostBox(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var19 = var18.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var20 = var18.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var21 = var18.createLargeMailUserType();
    var0.setLargeMailUser(var21);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var23 = var0.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var24 = var0.getPostOffice();
    java.util.List var25 = var0.getDependentLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var26 = var0.getDependentLocality();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);

  }

  public void test466() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test466");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    java.lang.String var11 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var12.setIndicator("G_GEO_UNKOWN_STATUS");
    var2.setPostBox(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var17 = var16.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var18 = var16.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var19 = var16.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var20 = var16.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var21 = var16.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var22 = var16.createFirmType();
    var12.setFirm(var22);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var24 = var22.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var25 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    var22.setMailStop(var25);
    java.lang.String var27 = var25.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var28 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName();
    var25.setMailStopName(var28);
    java.lang.String var30 = var28.getType();
    java.lang.String var31 = var28.getCode();
    java.lang.String var32 = var28.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);

  }

  public void test467() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test467");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude();
    java.util.Map var1 = var0.getOtherAttributes();
    java.lang.String var2 = var0.getContent();
    java.lang.String var3 = var0.getCode();
    java.util.Map var4 = var0.getOtherAttributes();
    var0.setCode("geo.google.datamodel.GeoAddress@2c8fa0b9[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var7 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test468() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test468");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude();
    var0.setContent("G_GEO_UNKOWN_STATUS");
    java.util.Map var3 = var0.getOtherAttributes();
    var0.setCode("geo.google.datamodel.GeoAddress@6f870497[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var6 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var6.equals("G_GEO_UNKOWN_STATUS"));

  }

  public void test469() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test469");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName();
    java.lang.String var1 = var0.getType();
    java.lang.String var2 = var0.getCode();
    java.lang.String var3 = var0.getCode();
    java.lang.String var4 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test470() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test470");


    geo.google.mapping.PointToCoordinateFunctor var0 = new geo.google.mapping.PointToCoordinateFunctor();
    com.google.earth.kml._2.PointType var1 = new com.google.earth.kml._2.PointType();
    var1.setTessellate((java.lang.Boolean)true);
    var1.setExtrude((java.lang.Boolean)false);
    geo.google.datamodel.GeoCoordinate var6 = var0.execute(var1);
    com.google.earth.kml._2.PointType var7 = new com.google.earth.kml._2.PointType();
    var7.setTessellate((java.lang.Boolean)true);
    java.lang.Boolean var10 = var7.isTessellate();
    geo.google.datamodel.GeoCoordinate var11 = var0.execute(var7);
    geo.google.mapping.Functor[] var12 = new geo.google.mapping.Functor[] { var0};
    geo.google.mapping.FunctionChain var13 = new geo.google.mapping.FunctionChain(var12);
    geo.google.mapping.FunctionChain var14 = new geo.google.mapping.FunctionChain(var12);
    geo.google.mapping.PointToCoordinateFunctor var15 = geo.google.mapping.PointToCoordinateFunctor.getInstance();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var17 = var16.createPremise();
    java.util.List var18 = var17.getAddressLine();
    geo.google.mapping.FunctionChain var19 = new geo.google.mapping.FunctionChain(var18);
    geo.google.mapping.FunctionChain var20 = new geo.google.mapping.FunctionChain((geo.google.mapping.Functor)var15, var19);
    geo.google.mapping.PointToCoordinateFunctor var21 = geo.google.mapping.PointToCoordinateFunctor.getInstance();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var22 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var23 = var22.createPremise();
    java.util.List var24 = var23.getAddressLine();
    geo.google.mapping.FunctionChain var25 = new geo.google.mapping.FunctionChain(var24);
    geo.google.mapping.FunctionChain var26 = new geo.google.mapping.FunctionChain((geo.google.mapping.Functor)var21, var25);
    var20.setHead((geo.google.mapping.Functor)var21);
    geo.google.mapping.FunctionChain var28 = geo.google.mapping.FunctionChain.getChain((geo.google.mapping.Functor)var21);
    var14.setTail(var28);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var30 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    java.lang.String var31 = var30.getDependentThoroughfaresIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var32 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var33 = var32.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var34 = var32.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var35 = var32.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var36 = var32.createThoroughfarePostDirectionType();
    java.lang.String var37 = var36.getType();
    var36.setCode("Uknown Status");
    var30.setThoroughfarePostDirection(var36);
    java.lang.String var41 = var30.getDependentThoroughfaresType();
    var30.setDependentThoroughfaresIndicator("geo.google.GeoException: hi!");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var44 = var14.execute((java.lang.Object)"geo.google.GeoException: hi!");
      fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + true+ "'", var10.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);

  }

  public void test471() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test471");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var1 = var0.getAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var2 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude();
    java.util.Map var3 = var2.getOtherAttributes();
    var0.setAddressLongitude(var2);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var5 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var6 = var5.getAny();
    java.lang.String var7 = var5.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var8 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude();
    var5.setAddressLatitude(var8);
    var0.setAddressLatitude(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var12 = var11.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var13 = var11.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var14 = var11.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var15 = var11.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var16 = var11.createAddressDetailsPostalServiceElementsBarcode();
    var16.setType("G_GEO_UNKOWN_STATUS");
    var0.setBarcode(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var20 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var21 = var20.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var22 = var20.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var23 = var20.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var24 = var20.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    var0.setEndorsementLineCode(var24);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var26 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var27 = var26.getAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var28 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude();
    java.util.Map var29 = var28.getOtherAttributes();
    var26.setAddressLongitude(var28);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var31 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var32 = var31.getAny();
    java.lang.String var33 = var31.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var34 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude();
    var31.setAddressLatitude(var34);
    var26.setAddressLatitude(var34);
    java.lang.String var37 = var34.getCode();
    var0.setAddressLatitude(var34);
    var34.setContent("(default) Indicates to ignore an altitude specification");
    var34.setType("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);

  }

  public void test472() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test472");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var1 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var1.setThoroughfarePostDirection(var2);
    java.util.List var4 = var1.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var5 = var1.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var1.getPostalCode();
    var0.setThoroughfare(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var8 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var9 = var8.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var10 = var8.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var12 = var11.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var13 = var11.createPostBoxPostBoxNumberExtension();
    var8.setPostBoxNumberExtension(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var15 = var8.getPostBoxNumberExtension();
    java.util.List var16 = var8.getAny();
    var0.setPostBox(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var18 = var8.getPostBoxNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var19 = var8.getPostalCode();
    java.lang.String var20 = var8.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var21 = var8.getPostBoxNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);

  }

  public void test473() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test473");


    com.google.earth.kml._2.PointType var0 = new com.google.earth.kml._2.PointType();
    var0.setTessellate((java.lang.Boolean)true);
    var0.setExtrude((java.lang.Boolean)false);
    java.lang.Boolean var5 = var0.isExtrude();
    var0.setCoordinates("Uknown Status");
    java.lang.Boolean var8 = var0.isExtrude();
    var0.setExtrude((java.lang.Boolean)false);
    var0.setCoordinates("geo.google.datamodel.GeoAddress@3cce2b1c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + false+ "'", var5.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + false+ "'", var8.equals(false));

  }

  public void test474() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test474");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    var3.setNameNumberOccurrence("G_GEO_UNKOWN_STATUS");
    var3.setCode("geo.google.datamodel.GeoAddress@123ed715[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test475() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test475");


    geo.google.datamodel.GeoStatusCode var3 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var4 = new geo.google.GeoException("", var3);
    geo.google.GeoException var5 = new geo.google.GeoException("geo.google.GeoException: ", var3);
    java.lang.Class var6 = var3.getDeclaringClass();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Enum var8 = java.lang.Enum.<java.lang.Enum>valueOf(var6, "(default) Indicates to ignore an altitude specification");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test476() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test476");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    java.util.List var3 = var1.getAny();
    var1.setType("");
    var1.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var8 = var1.getPremiseName();
    java.util.List var9 = var1.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test477() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test477");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var1 = var0.getAny();
    java.lang.String var2 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var3 = var0.getAddressLongitude();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var4 = var0.getEndorsementLineCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test478() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test478");


    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo();
    java.util.List var1 = var0.getAddressLine();
    java.util.List var2 = var0.getPremiseNumber();
    java.util.List var3 = var0.getPremiseNumberSuffix();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test479() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test479");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var6 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var7 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var8 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    java.util.Map var9 = var8.getOtherAttributes();
    java.lang.String var10 = var8.getContent();
    var8.setNumberPrefixSeparator("geo.google.datamodel.GeoAddress@35e7c9a0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test480() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test480");


    geo.google.datamodel.GeoCoordinate var0 = new geo.google.datamodel.GeoCoordinate();
    double var1 = var0.getLongitude();
    geo.google.datamodel.GeoCoordinate var2 = new geo.google.datamodel.GeoCoordinate();
    double var3 = var2.getLongitude();
    double var4 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var0, var2);
    geo.google.datamodel.GeoCoordinate var5 = new geo.google.datamodel.GeoCoordinate();
    double var6 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var0, var5);
    geo.google.datamodel.GeoStatusCode var9 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var10 = new geo.google.GeoException("", var9);
    boolean var11 = var0.equals((java.lang.Object)var9);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var13 = var12.createPremise();
    java.util.List var14 = var13.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var15 = var13.getFirm();
    var13.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var19 = var18.createPremise();
    java.lang.String var20 = var19.getPremiseThoroughfareConnector();
    var13.setPremise(var19);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var22 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var23 = var22.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var24 = var22.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var25 = var22.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var26 = var25.getType();
    java.util.List var27 = var25.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var28 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var29 = var28.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var30 = var28.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var31 = var28.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var32 = var28.createThoroughfare();
    java.util.List var33 = var32.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var34 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var35 = var34.getPostTown();
    var32.setPostalCode(var34);
    var25.setPostalCode(var34);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var38 = var25.getPostalCode();
    var13.setPostalCode(var38);
    boolean var40 = var0.equals((java.lang.Object)var13);
    geo.google.datamodel.GeoCoordinate var41 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var42 = new geo.google.datamodel.GeoCoordinate();
    double var43 = var42.getLongitude();
    double var44 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var41, var42);
    geo.google.datamodel.GeoAltitude var45 = var42.getAltitude();
    geo.google.datamodel.GeoCoordinate var46 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var47 = new geo.google.datamodel.GeoCoordinate();
    double var48 = var47.getLongitude();
    double var49 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var46, var47);
    double var50 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var42, var47);
    double var51 = geo.google.datamodel.GeoUtils.distanceBetweenInMiles(var0, var47);
    geo.google.datamodel.GeoCoordinate var52 = var0.clone();
    double var53 = var52.getLatitude();
    geo.google.datamodel.GeoCoordinate var54 = new geo.google.datamodel.GeoCoordinate();
    double var55 = var54.getLongitude();
    geo.google.datamodel.GeoCoordinate var56 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var57 = new geo.google.datamodel.GeoCoordinate();
    double var58 = var57.getLongitude();
    double var59 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var56, var57);
    geo.google.datamodel.GeoCoordinate var60 = var56.clone();
    double var61 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var54, var60);
    var54.setLongitude((-1.0d));
    double var64 = var54.getLatitude();
    double var65 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var52, var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var43 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var48 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var49 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var53 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var59 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var61 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var65 == 0.0d);

  }

  public void test481() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test481");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    java.lang.String var11 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var12.setIndicator("G_GEO_UNKOWN_STATUS");
    var2.setPostBox(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var16 = var2.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var17 = var2.getPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var19 = var18.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var20 = var18.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var21 = var18.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var22 = var18.createPostBoxPostBoxNumberSuffix();
    java.lang.String var23 = var22.getNumberSuffixSeparator();
    java.lang.String var24 = var22.getNumberSuffixSeparator();
    var17.setPostBoxNumberSuffix(var22);
    java.util.List var26 = var17.getAny();
    java.util.List var27 = var17.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);

  }

  public void test482() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test482");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    var5.setIndicator("G_GEO_UNKOWN_STATUS");
    var5.setNumberRangeOccurence("");
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo var10 = new oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo();
    var5.setPremiseNumberRangeTo(var10);
    java.lang.String var12 = var5.getType();
    java.lang.String var13 = var5.getNumberRangeOccurence();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));

  }

  public void test483() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test483");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var4 = var3.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var5 = var3.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var6 = var3.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var7 = var3.createLargeMailUserTypeLargeMailUserIdentifier();
    java.lang.String var8 = var7.getIndicator();
    var2.setLargeMailUserIdentifier(var7);
    java.lang.String var10 = var7.getType();
    java.lang.String var11 = var7.getContent();
    java.lang.String var12 = var7.getCode();
    java.lang.String var13 = var7.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test484() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test484");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var3 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName var4 = var0.createAdministrativeAreaSubAdministrativeAreaSubAdministrativeAreaName();
    java.lang.String var5 = var4.getCode();
    java.util.Map var6 = var4.getOtherAttributes();
    var4.setContent("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var9 = var4.getOtherAttributes();
    var4.setContent("geo.google.datamodel.GeoUsAddress@68ed4414[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@3110b2dd[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@3f4ee455[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test485() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test485");


    oasis.names.tc.ciq.xsdschema.xal._2.Department var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Department();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.getMailStop();
    var0.setType("");
    java.util.Map var4 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var5 = var0.getMailStop();
    var0.setType("Uknown Status");
    java.util.List var8 = var0.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test486() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test486");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var6 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var7 = var0.createDependentLocalityTypeDependentLocalityNumber();
    java.lang.String var8 = var7.getNameNumberOccurrence();
    java.lang.String var9 = var7.getCode();
    var7.setCode("geo.google.datamodel.GeoAddress@26f2d88c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test487() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test487");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    java.util.List var3 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.getThoroughfareLeadingType();
    java.util.List var5 = var0.getThoroughfareNumberOrThoroughfareNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var7 = var6.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var8 = var6.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var9 = var6.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var10 = var6.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var11 = var10.getPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var12 = var10.getDependentLocalityNumber();
    var0.setDependentLocality(var10);
    java.lang.String var14 = var0.getDependentThoroughfaresIndicator();
    var0.setDependentThoroughfaresIndicator("geo.google.datamodel.GeoAddress@77278fe3[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);

  }

  public void test488() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test488");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude();
    java.util.Map var1 = var0.getOtherAttributes();
    java.util.Map var2 = var0.getOtherAttributes();
    var0.setType("geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setContent("geo.google.datamodel.GeoUsAddress@541af6ab[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@36387fb0[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@3747179f[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test489() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test489");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityName();
    java.lang.String var1 = var0.getCode();
    java.lang.String var2 = var0.getCode();
    var0.setCode("hi!");
    var0.setContent("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var7 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test490() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test490");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var5 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var6 = var5.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var7 = var5.getAddressLines();
    var5.setUsage("");
    javax.xml.bind.JAXBElement var10 = var0.createAddressDetails(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var11 = var0.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber var12 = var0.createPostalRouteTypePostalRouteNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test491() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test491");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var3 = new oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var3);
    oasis.names.tc.ciq.xsdschema.xal._2.Department var5 = var2.getDepartment();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test492() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test492");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var6 = var0.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var7 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData var8 = var0.createAddressDetailsPostalServiceElementsSupplementaryPostalServiceData();
    var8.setCode("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var11 = var8.getContent();
    java.lang.String var12 = var8.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var12.equals("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test493() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test493");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode();
    java.lang.String var1 = var0.getType();
    java.lang.String var2 = var0.getType();
    var0.setCode("geo.google.datamodel.GeoAddress@12dfb6a6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setCode("geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);

  }

  public void test494() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test494");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityName();
    java.lang.String var1 = var0.getCode();
    java.lang.String var2 = var0.getType();
    java.lang.String var3 = var0.getType();
    var0.setType("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var6 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test495() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test495");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    java.util.List var1 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var3 = var2.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var4 = var2.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var5 = var2.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber var6 = var5.getPostalRouteNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber var7 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber();
    var7.setContent("geo.google.GeoException: geo.google.GeoException: ");
    var7.setContent("(default) Indicates to ignore an altitude specification");
    java.lang.String var12 = var7.getContent();
    var5.setPostalRouteNumber(var7);
    var0.setPostalRoute(var5);
    java.util.Map var15 = var5.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var17 = var16.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var18 = var16.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var19 = var16.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var20 = var16.createPostBoxPostBoxNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserName var21 = var16.createLargeMailUserTypeLargeMailUserName();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var22 = var16.createXAL();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo var23 = var16.createPremisePremiseNumberRangePremiseNumberRangeTo();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var24 = var16.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber var25 = var16.createPostalRouteTypePostalRouteNumber();
    var25.setContent("geo.google.GeoException: geo.google.GeoException: ");
    var5.setPostalRouteNumber(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "(default) Indicates to ignore an altitude specification"+ "'", var12.equals("(default) Indicates to ignore an altitude specification"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);

  }

  public void test496() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test496");


    geo.google.GeoAddressStandardizer var1 = new geo.google.GeoAddressStandardizer("G_GEO_UNKOWN_STATUS");
    var1.setApiKey("geo.google.GeoException: ");
    geo.google.datamodel.GeoCoordinate var18 = new geo.google.datamodel.GeoCoordinate();
    double var19 = var18.getLongitude();
    geo.google.datamodel.GeoCoordinate var20 = new geo.google.datamodel.GeoCoordinate();
    double var21 = var20.getLongitude();
    double var22 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var18, var20);
    double var23 = var20.getLatitude();
    var20.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var27 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var28 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var20, var27);
    geo.google.datamodel.GeoAddressAccuracy var30 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var31 = var30.getName();
    geo.google.datamodel.GeoUsAddress var32 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: hi!", "(default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.GeoException: ", "", "UNKNOWN_LOCATION", var20, var30);
    java.lang.String var33 = var32.toAddressLine();
    java.lang.String var34 = var32.getState();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoUsAddress var35 = var1.standardizeToGeoUsAddress(var32);
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "UNKNOWN_LOCATION"+ "'", var31.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  "+ "'", var33.equals("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "geo.google.GeoException: "+ "'", var34.equals("geo.google.GeoException: "));

  }

  public void test497() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test497");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    java.lang.String var1 = var0.getDependentThoroughfaresIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var2 = var0.getThoroughfareLeadingType();
    java.lang.String var3 = var0.getDependentThoroughfaresConnector();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test498() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test498");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseName var3 = var0.createPremisePremiseName();
    var3.setCode("");
    java.util.Map var6 = var3.getOtherAttributes();
    java.util.Map var7 = var3.getOtherAttributes();
    var3.setType("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var10 = var3.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var10.equals("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test499() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test499");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var3 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var4 = var0.createPostBoxPostBoxNumberSuffix();
    var4.setCode("geo.google.datamodel.GeoAddress@25d14add[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var7 = var4.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test500() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest2.test500");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    java.lang.String var11 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var12.setIndicator("G_GEO_UNKOWN_STATUS");
    var2.setPostBox(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var17 = var16.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var18 = var16.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var19 = var16.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var20 = var16.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var21 = var16.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var22 = var16.createFirmType();
    var12.setFirm(var22);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var24 = var22.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var25 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    var22.setMailStop(var25);
    java.lang.String var27 = var25.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var28 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName();
    java.lang.String var29 = var28.getContent();
    var28.setContent("(default) Indicates to ignore an altitude specification");
    var25.setMailStopName(var28);
    var28.setType("");
    var28.setType("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var28.setCode("geo.google.datamodel.GeoAddress@2ea7c82[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);

  }

}
