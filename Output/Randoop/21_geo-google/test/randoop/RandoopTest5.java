package randoop;

import junit.framework.*;

public class RandoopTest5 extends TestCase {

  public static boolean debug = false;

  public void test1() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test1");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var2 = var0.getAddressLines();
    var0.setUsage("");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var9 = var0.getLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var10 = var0.getPostalServiceElements();
    java.util.Map var11 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var12 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var12.setThoroughfarePostDirection(var13);
    var12.setType("hi!");
    var12.setDependentThoroughfaresIndicator("geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setThoroughfare(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var20 = var12.getPremise();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);

  }

  public void test2() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test2");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    java.lang.String var6 = var5.getSeparator();
    java.lang.String var7 = var5.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test3() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test3");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    java.lang.String var11 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var12.setIndicator("G_GEO_UNKOWN_STATUS");
    var2.setPostBox(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var16 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var17 = var16.getAddressLine();
    var2.setPostBox(var16);
    java.lang.String var19 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var20 = var2.getLargeMailUserIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var21 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    java.lang.String var22 = var21.getDependentThoroughfaresIndicator();
    java.util.List var23 = var21.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var24 = var21.getDependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var25 = var21.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var26 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var28 = var27.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var29 = var27.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var30 = var27.createPostalCode();
    var26.setPostalCode(var30);
    var21.setPostalCode(var30);
    var2.setPostalCode(var30);
    java.util.List var34 = var2.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);

  }

  public void test4() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test4");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    java.util.List var4 = var3.getSubAdministrativeAreaName();
    java.lang.String var5 = var3.getType();
    var3.setIndicator("");
    java.util.List var8 = var3.getSubAdministrativeAreaName();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var9 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    java.lang.String var10 = var9.getValidToDate();
    var9.setAddressDetailsKey("hi!");
    java.util.Map var13 = var9.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var15 = var14.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var16 = var14.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var17 = var14.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var18 = var14.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var19 = var14.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var20 = var14.createLocality();
    var9.setLocality(var20);
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var22 = var20.getLargeMailUser();
    var3.setLocality(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);

  }

  public void test5() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test5");


    geo.google.datamodel.GeoStatusCode var2 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var3 = new geo.google.GeoException("", var2);
    geo.google.datamodel.GeoStatusCode var4 = var3.getStatus();
    java.lang.String var5 = var4.getDescription();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "Uknown Status"+ "'", var5.equals("Uknown Status"));

  }

  public void test6() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test6");


    geo.google.datamodel.GeoAltitude var1 = new geo.google.datamodel.GeoAltitude(10.0d);
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var2 = var1.getMode();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var4 = var3.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var5 = var3.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var6 = var3.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var7 = var3.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var8 = var3.createPremisePremiseNumberRange();
    java.lang.String var9 = var8.getSeparator();
    var8.setSeparator("geo.google.GeoException: ");
    boolean var12 = var1.equals((java.lang.Object)var8);
    java.lang.String var13 = var8.getIndicator();
    var8.setIndicator("geo.google.datamodel.GeoAddress@16896f61[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test7() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test7");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var6 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var7 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var8 = var0.createPostalCodePostTown();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLine var9 = var0.createAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var10 = var0.createThoroughfare();
    var10.setDependentThoroughfaresType("hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var14 = var13.createPremise();
    java.util.List var15 = var14.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var16 = var14.getFirm();
    var14.setType("(default) Indicates to ignore an altitude specification");
    oasis.names.tc.ciq.xsdschema.xal._2.Department var19 = new oasis.names.tc.ciq.xsdschema.xal._2.Department();
    java.util.List var20 = var19.getDepartmentName();
    java.util.List var21 = var19.getDepartmentName();
    java.lang.String var22 = var19.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var23 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var24 = var23.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var25 = var23.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var26 = var25.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var28 = var27.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var29 = var27.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var30 = var27.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var31 = var27.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var32 = var27.createLargeMailUserTypeLargeMailUserIdentifier();
    var25.setLargeMailUserIdentifier(var32);
    java.lang.String var34 = var25.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var35 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var35.setIndicator("G_GEO_UNKOWN_STATUS");
    var25.setPostBox(var35);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var39 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var40 = var39.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var41 = var39.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var42 = var39.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var43 = var39.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var44 = var39.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var45 = var39.createFirmType();
    var35.setFirm(var45);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var47 = var45.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var48 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    var45.setMailStop(var48);
    var19.setMailStop(var48);
    java.util.List var51 = var48.getAddressLine();
    var14.setMailStop(var48);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var53 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var54 = var53.createPremise();
    java.util.List var55 = var54.getAny();
    var14.setPremise(var54);
    var10.setPremise(var54);
    java.util.Map var58 = var54.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);

  }

  public void test8() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test8");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var1 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberPrefix var2 = var0.createPostBoxPostBoxNumberPrefix();
    java.lang.String var3 = var2.getContent();
    java.lang.String var4 = var2.getContent();
    java.lang.String var5 = var2.getNumberPrefixSeparator();
    java.lang.String var6 = var2.getContent();
    java.lang.String var7 = var2.getCode();
    java.lang.String var8 = var2.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test9() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test9");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var2 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var3 = var0.createBuildingNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var4 = var0.createPostalCodePostTown();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom var5 = var0.createPremisePremiseNumberRangePremiseNumberRangeFrom();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var6 = var0.createLargeMailUserTypeLargeMailUserIdentifier();
    java.lang.String var7 = var6.getIndicator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test10() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test10");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var4 = var0.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var6 = var5.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var7 = var5.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var8 = var5.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var9 = var5.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var11 = var10.createPremise();
    java.lang.String var12 = var11.getPremiseThoroughfareConnector();
    java.util.List var13 = var11.getAny();
    java.util.List var14 = var11.getPremiseName();
    var9.setPremise(var11);
    var4.setThoroughfare(var9);
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var17 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    var17.setIndicator("geo.google.GeoException: geo.google.GeoException: ");
    var4.setAdministrativeArea(var17);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var21 = var4.getThoroughfare();
    var21.setDependentThoroughfaresIndicator("geo.google.datamodel.GeoAddress@2ea7c82[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var24 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var25 = var24.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var26 = var24.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var27 = var24.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var28 = var24.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType.FirmName var29 = var24.createFirmTypeFirmName();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var30 = var24.createDependentLocalityType();
    var30.setConnector("");
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var33 = var30.getPostBox();
    var21.setDependentLocality(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);

  }

  public void test11() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test11");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var5 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var6 = var5.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var7 = var5.getAddressLines();
    var5.setUsage("");
    javax.xml.bind.JAXBElement var10 = var0.createAddressDetails(var5);
    java.lang.Integer var11 = var5.getAccuracy();
    var5.setAccuracy((java.lang.Integer)0);
    java.lang.String var14 = var5.getCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var15 = var5.getLocality();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);

  }

  public void test12() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test12");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var3 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var4 = var0.createPostBoxPostBoxNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserName var5 = var0.createLargeMailUserTypeLargeMailUserName();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var6 = var0.createXAL();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo var7 = var0.createPremisePremiseNumberRangePremiseNumberRangeTo();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var8 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var9 = var0.createMailStopType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test13() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test13");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var3 = var0.createAddressDetailsPostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var4 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode();
    var4.setType("hi!");
    var3.setKeyLineCode(var4);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var8 = var3.getAddressLatitude();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var10 = var9.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var11 = var9.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var12 = var9.createAddressDetailsPostalServiceElementsBarcode();
    var3.setBarcode(var12);
    var12.setContent("geo.google.datamodel.GeoAddress@535811d6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test14() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test14");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var2 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var3 = var0.createPostOfficePostOfficeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var4 = var0.createAddressLinesType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var5 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var6 = var0.createThoroughfarePreDirectionType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test15() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test15");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    java.lang.String var1 = var0.getIndicator();
    var0.setType("(default) Indicates to ignore an altitude specification");
    java.util.List var4 = var0.getAddressLine();
    var0.setType("hi!");
    var0.setIndicator("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var9 = var0.getIndicator();
    var0.setRangeType("geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var9.equals("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test16() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test16");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var2 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var3 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var4 = var0.createAdministrativeArea();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test17() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test17");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection();
    java.util.Map var1 = var0.getOtherAttributes();
    var0.setType("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var4 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test18() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test18");


    com.google.earth.kml._2.StatusType var0 = new com.google.earth.kml._2.StatusType();
    java.lang.String var1 = var0.getRequest();
    int var2 = var0.getCode();
    var0.setCode((-1));
    var0.setCode(100);
    java.lang.String var7 = var0.getRequest();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test19() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test19");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    java.lang.String var4 = var3.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test20() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test20");


    geo.google.datamodel.GeoAddress var0 = new geo.google.datamodel.GeoAddress();
    java.lang.String var1 = var0.toString();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var3 = var2.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var4 = var2.createSubPremiseTypeSubPremiseNumberPrefix();
    java.lang.String var5 = var4.getType();
    var4.setCode("G_GEO_UNKOWN_STATUS");
    var4.setCode("G_GEO_UNKOWN_STATUS");
    var4.setCode("geo.google.GeoException: geo.google.GeoException: ");
    var4.setType("");
    boolean var14 = var0.equals((java.lang.Object)"");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var15 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var16 = var15.getAddress();
    java.lang.String var17 = var15.getValidToDate();
    java.lang.String var18 = var15.getAddressDetailsKey();
    var0.setAddressDetails(var15);
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var20 = var15.getAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var21 = var15.getAddressLines();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var22 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var23 = var22.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var24 = var22.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var25 = var22.createAddressDetailsPostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var26 = var25.getSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var27 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var28 = var27.getAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var29 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude();
    java.util.Map var30 = var29.getOtherAttributes();
    var27.setAddressLongitude(var29);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var32 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var33 = var32.getAny();
    java.lang.String var34 = var32.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var35 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude();
    var32.setAddressLatitude(var35);
    var27.setAddressLatitude(var35);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var38 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var39 = var38.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var40 = var38.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var41 = var38.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var42 = var38.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var43 = var38.createAddressDetailsPostalServiceElementsBarcode();
    var43.setType("G_GEO_UNKOWN_STATUS");
    var27.setBarcode(var43);
    var25.setBarcode(var43);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var48 = var25.getAddressLatitudeDirection();
    java.util.List var49 = var25.getAny();
    var15.setPostalServiceElements(var25);
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var51 = var15.getAdministrativeArea();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "geo.google.datamodel.GeoAddress@62e22a31[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var1.equals("geo.google.datamodel.GeoAddress@62e22a31[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);

  }

  public void test21() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test21");


    geo.google.datamodel.GeoAddress var2 = new geo.google.datamodel.GeoAddress();
    geo.google.datamodel.GeoCoordinate var3 = var2.getCoordinate();
    geo.google.datamodel.GeoCoordinate var4 = new geo.google.datamodel.GeoCoordinate();
    double var5 = var4.getLongitude();
    geo.google.datamodel.GeoCoordinate var6 = new geo.google.datamodel.GeoCoordinate();
    double var7 = var6.getLongitude();
    double var8 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var4, var6);
    double var9 = var6.getLatitude();
    var6.setLatitude(0.0d);
    var2.setCoordinate(var6);
    geo.google.datamodel.GeoCoordinate var13 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var14 = new geo.google.datamodel.GeoCoordinate();
    double var15 = var14.getLongitude();
    double var16 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var13, var14);
    double var17 = var13.getLatitude();
    geo.google.datamodel.GeoCoordinate var18 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var19 = new geo.google.datamodel.GeoCoordinate();
    double var20 = var19.getLongitude();
    double var21 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var18, var19);
    geo.google.datamodel.GeoCoordinate var22 = var18.clone();
    double var23 = geo.google.datamodel.GeoUtils.distanceBetweenInMiles(var13, var22);
    double var24 = var6.distanceTo(var22);
    geo.google.datamodel.GeoAltitude var26 = new geo.google.datamodel.GeoAltitude(1.0d);
    var22.setAltitude(var26);
    geo.google.datamodel.GeoCoordinate var28 = new geo.google.datamodel.GeoCoordinate(1.0d, 759.9899999999997d, var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 69.08999999999311d);

  }

  public void test22() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test22");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownName var2 = var0.createPostalCodePostTownPostTownName();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType.FirmName var3 = var0.createFirmTypeFirmName();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var4 = var0.createBuildingNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var5 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var6 = var0.createPostBoxPostBoxNumberSuffix();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test23() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test23");


    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    java.util.Map var1 = var0.getOtherAttributes();
    var0.setType("G_GEO_UNKOWN_STATUS");
    java.util.List var4 = var0.getAddressLine();
    var0.setType("geo.google.datamodel.GeoAddress@35952ba9[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test24() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test24");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var2 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var4 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var5 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var6 = var0.createSubPremiseType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var7 = var6.getMailStop();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var8 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var9 = var8.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var10 = var8.getAddressLines();
    var8.setUsage("");
    var8.setUsage("hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var15 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var15.setThoroughfarePostDirection(var16);
    java.util.List var18 = var15.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var19 = var15.getThoroughfareLeadingType();
    var8.setThoroughfare(var15);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var21 = var15.getThoroughfarePreDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var22 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var23 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var24 = var23.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var25 = var23.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var26 = var23.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var27 = var23.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var28 = var23.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var29 = var23.createFirmType();
    var22.setFirm(var29);
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var31 = var22.getFirm();
    var15.setFirm(var31);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var33 = var31.getPostalCode();
    var6.setFirm(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);

  }

  public void test25() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test25");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var6 = var0.createBuildingNameType();
    var6.setTypeOccurrence("geo.google.datamodel.GeoUsAddress@54eece10[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@a1aa800[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@5c0b9d2e[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var9 = var6.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test26() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test26");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.getMailStop();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var3 = var2.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var4 = var2.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var5 = var4.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var7 = var6.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var8 = var6.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var9 = var6.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var10 = var6.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var11 = var6.createLargeMailUserTypeLargeMailUserIdentifier();
    var4.setLargeMailUserIdentifier(var11);
    java.lang.String var13 = var4.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var14 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var14.setIndicator("G_GEO_UNKOWN_STATUS");
    var4.setPostBox(var14);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var19 = var18.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var20 = var18.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var21 = var18.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var22 = var18.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var23 = var18.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var24 = var18.createFirmType();
    var14.setFirm(var24);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var26 = var24.getPostalCode();
    java.util.List var27 = var24.getAddressLine();
    java.util.Map var28 = var24.getOtherAttributes();
    var0.setFirm(var24);
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var30 = var0.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var31 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var32 = var31.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var33 = var31.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var34 = var31.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var35 = var31.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var36 = var31.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var37 = var31.createBuildingNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var38 = var31.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var39 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var40 = var39.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var41 = var39.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var42 = var39.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var43 = var39.createThoroughfare();
    java.util.List var44 = var43.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var45 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var46 = var45.getPostTown();
    var43.setPostalCode(var45);
    java.util.List var48 = var45.getAny();
    var38.setPostalCode(var45);
    var0.setPostalCode(var45);
    java.util.List var51 = var0.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);

  }

  public void test27() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test27");


    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var2 = var1.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var3 = var1.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var4 = var1.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var5 = var1.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var6 = var1.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var7 = var1.createFirmType();
    var0.setFirm(var7);
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var9 = var0.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var11 = var10.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var12 = var10.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var13 = var10.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var14 = var13.getType();
    java.util.List var15 = var13.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var17 = var16.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var18 = var16.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var19 = var16.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var20 = var16.createThoroughfare();
    java.util.List var21 = var20.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var22 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var23 = var22.getPostTown();
    var20.setPostalCode(var22);
    var13.setPostalCode(var22);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var26 = var13.getPostalCode();
    var9.setPostalCode(var26);
    java.util.List var28 = var9.getDepartment();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);

  }

  public void test28() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test28");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownName var2 = var0.createPostalCodePostTownPostTownName();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType.FirmName var3 = var0.createFirmTypeFirmName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var4 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var6 = var5.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var7 = var5.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var8 = var5.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var9 = var5.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var10 = var5.createLargeMailUserTypeLargeMailUserIdentifier();
    java.lang.String var11 = var10.getCode();
    java.lang.String var12 = var10.getContent();
    var10.setIndicator("");
    var4.setLargeMailUserIdentifier(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test29() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test29");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseName var3 = var0.createPremisePremiseName();
    java.lang.String var4 = var3.getTypeOccurrence();
    java.lang.String var5 = var3.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test30() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test30");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    java.lang.String var11 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var12.setIndicator("G_GEO_UNKOWN_STATUS");
    var2.setPostBox(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var16 = var2.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Department var17 = var2.getDepartment();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);

  }

  public void test31() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test31");


    geo.google.GeoAddressStandardizer var1 = new geo.google.GeoAddressStandardizer("G_GEO_UNKOWN_STATUS");
    var1.setApiKey("geo.google.GeoException: ");
    var1.setRateLimitInterval(100L);
    geo.google.datamodel.GeoCoordinate var20 = new geo.google.datamodel.GeoCoordinate();
    double var21 = var20.getLongitude();
    geo.google.datamodel.GeoCoordinate var22 = new geo.google.datamodel.GeoCoordinate();
    double var23 = var22.getLongitude();
    double var24 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var20, var22);
    double var25 = var22.getLatitude();
    var22.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var29 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var30 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var22, var29);
    geo.google.datamodel.GeoAddressAccuracy var32 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var33 = var32.getName();
    geo.google.datamodel.GeoUsAddress var34 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: hi!", "(default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.GeoException: ", "", "UNKNOWN_LOCATION", var22, var32);
    var34.setPostalCode("(default) Indicates to ignore an altitude specification");
    java.lang.String var37 = var34.getAddressLine2();
    java.lang.String var38 = var34.toAddressLine();
    var34.setAddressLine1("geo.google.datamodel.GeoAddress@65bbaf75[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoAddress var41 = var1.standardizeToGeoAddress(var34);
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "UNKNOWN_LOCATION"+ "'", var33.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "(default) Indicates to ignore an altitude specification"+ "'", var37.equals("(default) Indicates to ignore an altitude specification"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var38 + "' != '" + "geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  (default) Indicates to ignore an altitude specification"+ "'", var38.equals("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  (default) Indicates to ignore an altitude specification"));

  }

  public void test32() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test32");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var2 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var4 = var0.createSubPremiseTypeSubPremiseNumber();
    var4.setIndicator("hi!");
    java.lang.String var7 = var4.getIndicatorOccurrence();
    java.lang.String var8 = var4.getPremiseNumberSeparator();
    var4.setNumberTypeOccurrence("geo.google.datamodel.GeoAddress@2c8fa0b9[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var11 = var4.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test33() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test33");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var5 = var0.createLargeMailUserTypeLargeMailUserIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var6 = var0.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var7 = var0.createLargeMailUserTypeLargeMailUserIdentifier();
    java.util.Map var8 = var7.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test34() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test34");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    var0.setNumberRangeOccurrence("geo.google.GeoException: geo.google.GeoException: ");
    var0.setType("Uknown Status");
    var0.setRangeType("");
    java.lang.String var7 = var0.getIndicatorOccurrence();
    var0.setNumberRangeOccurrence("geo.google.datamodel.GeoAddress@730dc6d0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test35() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test35");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var4 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var5 = var4.getPostOffice();
    var4.setIndicator("geo.google.datamodel.GeoUsAddress@2e935a48[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@4c0c44db[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@397cacde[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test36() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test36");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address();
    java.lang.String var1 = var0.getCode();
    var0.setContent("Uknown Status");
    java.lang.String var4 = var0.getCode();
    var0.setCode("geo.google.GeoException: , geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n],  UNKNOWN_LOCATION");
    var0.setType("geo.google.datamodel.GeoAddress@2eda413f[\n  _coordinate=<null>\n  _addressDetails=oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails@7af1a720\n  _addressLine=geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test37() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test37");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection();
    java.util.Map var1 = var0.getOtherAttributes();
    var0.setType("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setType("geo.google.datamodel.GeoUsAddress@7fee135b[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@6738fcfa[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@4e68b607[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);

  }

  public void test38() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test38");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier();
    var0.setContent("G_GEO_UNKOWN_STATUS");
    var0.setCode("geo.google.GeoException: ");
    java.lang.String var5 = var0.getCode();
    var0.setContent("geo.google.datamodel.GeoAddress@daa49d[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "geo.google.GeoException: "+ "'", var5.equals("geo.google.GeoException: "));

  }

  public void test39() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test39");


    geo.google.datamodel.GeoAltitude var3 = new geo.google.datamodel.GeoAltitude(10.0d);
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var4 = var3.getMode();
    geo.google.datamodel.GeoCoordinate var5 = new geo.google.datamodel.GeoCoordinate(0.0d, 1.0d, var3);
    geo.google.datamodel.GeoCoordinate var6 = new geo.google.datamodel.GeoCoordinate();
    double var7 = var6.getLongitude();
    geo.google.datamodel.GeoCoordinate var8 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var9 = new geo.google.datamodel.GeoCoordinate();
    double var10 = var9.getLongitude();
    double var11 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var8, var9);
    geo.google.datamodel.GeoCoordinate var12 = var8.clone();
    double var13 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var6, var12);
    double var14 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var5, var6);
    double var15 = var5.getLongitude();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == 230.36359592033764d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == 0.0d);

  }

  public void test40() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test40");


    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var2 = var1.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var3 = var1.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var4 = var1.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var5 = var1.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var6 = var1.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var7 = var1.createFirmType();
    var0.setFirm(var7);
    var0.setType("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var11 = var0.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber();
    var0.setPostBoxNumber(var12);
    java.lang.String var14 = var12.getCode();
    java.util.Map var15 = var12.getOtherAttributes();
    java.lang.String var16 = var12.getCode();
    java.lang.String var17 = var12.getCode();
    java.util.Map var18 = var12.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);

  }

  public void test41() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test41");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    var5.setIndicator("G_GEO_UNKOWN_STATUS");
    var5.setNumberRangeOccurence("");
    var5.setNumberRangeOccurence("(default) Indicates to ignore an altitude specification");
    java.lang.String var12 = var5.getSeparator();
    var5.setType("geo.google.datamodel.GeoAddress@3a720269[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test42() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test42");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName var2 = var0.createAdministrativeAreaAdministrativeAreaName();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    java.lang.String var4 = var3.getContent();
    var3.setContent("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var7 = var3.getCode();
    java.util.Map var8 = var3.getOtherAttributes();
    var3.setCode("geo.google.datamodel.GeoAddress@357d260d[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test43() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test43");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var2 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var4 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var5 = var0.createSubPremiseTypeSubPremiseNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var6 = var0.createAddressDetailsPostalServiceElementsBarcode();
    java.lang.String var7 = var6.getType();
    java.util.Map var8 = var6.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test44() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test44");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var1 = var0.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var4 = var3.getPostalCode();
    java.util.List var5 = var3.getAny();
    var0.setSubAdministrativeArea(var3);
    java.util.List var7 = var3.getSubAdministrativeAreaName();
    var3.setIndicator("geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var11 = var10.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var12 = var10.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var13 = var10.createAdministrativeAreaSubAdministrativeArea();
    java.util.List var14 = var13.getSubAdministrativeAreaName();
    java.lang.String var15 = var13.getType();
    var13.setIndicator("G_GEO_UNKOWN_STATUS");
    java.lang.String var18 = var13.getUsageType();
    var13.setUsageType("UNKNOWN_LOCATION");
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var21 = var13.getLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var22 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var23 = var22.getPostOffice();
    java.util.List var24 = var22.getAny();
    java.util.List var25 = var22.getAny();
    var13.setLocality(var22);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var28 = var27.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var29 = var27.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var30 = var27.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var31 = var27.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var32 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var33 = var32.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var34 = var32.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var35 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var36 = var35.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var37 = var35.createPostBoxPostBoxNumberExtension();
    var32.setPostBoxNumberExtension(var37);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var39 = var32.getPostBoxNumberExtension();
    java.util.List var40 = var32.getAny();
    var31.setPostBox(var32);
    var31.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var44 = var31.getDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var45 = var31.getDependentLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var46 = var31.getPostBox();
    java.util.List var47 = var46.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var48 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var49 = var48.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var50 = var48.createPostOffice();
    java.util.List var51 = var50.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var52 = var50.getPostOfficeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var53 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var54 = var53.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var55 = var53.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var56 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var57 = var56.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var58 = var56.createPostBoxPostBoxNumberExtension();
    var53.setPostBoxNumberExtension(var58);
    var50.setPostBox(var53);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var61 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber();
    var53.setPostBoxNumber(var61);
    var46.setPostBoxNumber(var61);
    var22.setPostBox(var46);
    var3.setLocality(var22);
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var66 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var67 = var66.getPostOffice();
    java.lang.String var68 = var66.getUsageType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var69 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var70 = var69.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var71 = var69.createPostOffice();
    java.util.List var72 = var71.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var73 = new oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber();
    var73.setIndicator("hi!");
    java.lang.String var76 = var73.getContent();
    var71.setPostOfficeNumber(var73);
    var66.setPostOffice(var71);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var79 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var80 = var79.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var81 = var79.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var82 = var79.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var83 = var79.createPostOfficePostOfficeNumber();
    java.lang.String var84 = var83.getCode();
    var83.setContent("geo.google.GeoException: hi!");
    var83.setContent("geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var71.setPostOfficeNumber(var83);
    var22.setPostOffice(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var84);

  }

  public void test45() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test45");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName();
    var0.setType("");
    java.lang.String var3 = var0.getCode();
    java.lang.String var4 = var0.getCode();
    java.lang.String var5 = var0.getCode();
    java.lang.String var6 = var0.getContent();
    java.lang.String var7 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test46() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test46");


    oasis.names.tc.ciq.xsdschema.xal._2.Locality var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var2 = var1.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var3 = var1.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var4 = var1.createPostalCode();
    var0.setPostalCode(var4);
    var0.setIndicator("geo.google.GeoException: hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var8 = var0.getPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var9 = var0.getThoroughfare();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test47() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test47");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var6 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var7 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var8 = var0.createPostalCodePostTown();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLine var9 = var0.createAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var10 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var11 = var0.createAddressDetailsAddress();
    var11.setContent("geo.google.datamodel.GeoUsAddress@56cc18ee[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@7178ddc6[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@36282c5d[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);

  }

  public void test48() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test48");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var3 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var4 = var0.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var5 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var6 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var7 = var0.createXAL();
    java.util.List var8 = var7.getAddressDetails();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test49() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test49");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var1 = var0.getAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var2 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude();
    java.util.Map var3 = var2.getOtherAttributes();
    var0.setAddressLongitude(var2);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var6 = var5.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var7 = var5.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var8 = var5.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var9 = var5.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var10 = var5.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var11 = var5.createBuildingNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var12 = var5.createAddressDetailsPostalServiceElementsSortingCode();
    java.lang.String var13 = var12.getCode();
    var0.setSortingCode(var12);
    java.lang.String var15 = var12.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);

  }

  public void test50() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test50");


    geo.google.mapping.PointToCoordinateFunctor var0 = geo.google.mapping.PointToCoordinateFunctor.getInstance();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var1.createPremise();
    java.util.List var3 = var2.getAddressLine();
    geo.google.mapping.FunctionChain var4 = new geo.google.mapping.FunctionChain(var3);
    geo.google.mapping.FunctionChain var5 = new geo.google.mapping.FunctionChain((geo.google.mapping.Functor)var0, var4);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var7 = var6.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var8 = var6.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Department var9 = var8.getDepartment();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var10 = var5.execute((java.lang.Object)var8);
      fail("Expected exception of type java.lang.ClassCastException");
    } catch (java.lang.ClassCastException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test51() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test51");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    java.lang.String var2 = var0.getValidToDate();
    java.lang.String var3 = var0.getAddressDetailsKey();
    var0.setValidFromDate("geo.google.datamodel.GeoAddress@64b274a1[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setCode("geo.google.datamodel.GeoAddress@4244bb8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var8 = var0.getAddressDetailsKey();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test52() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test52");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var2 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var3 = var0.createBuildingNameType();
    var3.setContent("geo.google.GeoException: ");
    java.lang.String var6 = var3.getContent();
    java.lang.String var7 = var3.getType();
    java.lang.String var8 = var3.getType();
    java.util.Map var9 = var3.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "geo.google.GeoException: "+ "'", var6.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test53() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test53");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber();
    var0.setContent("geo.google.GeoException: geo.google.GeoException: ");
    var0.setContent("G_GEO_UNKOWN_STATUS");
    var0.setContent("hi!");
    var0.setContent("geo.google.GeoException: ");
    java.util.Map var9 = var0.getOtherAttributes();
    java.lang.String var10 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test54() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test54");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var5 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var6 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var7 = var0.createMailStopTypeMailStopName();
    var7.setCode("geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test55() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test55");


    com.google.earth.kml._2.PlacemarkType var0 = new com.google.earth.kml._2.PlacemarkType();
    var0.setAddress("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var3 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var4 = var3.getAddress();
    java.lang.String var5 = var3.getValidToDate();
    java.lang.String var6 = var3.getAddressDetailsKey();
    var3.setCurrentStatus("UNKNOWN_LOCATION");
    var0.setAddressDetails(var3);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var10 = var0.getAddressDetails();
    java.lang.String var11 = var0.getAddress();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "geo.google.GeoException: "+ "'", var11.equals("geo.google.GeoException: "));

  }

  public void test56() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test56");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var4 = var3.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var5 = var3.getPostOffice();
    java.lang.String var6 = var3.getUsageType();
    java.util.List var7 = var3.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var8 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var9 = var8.getSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var10 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var11 = var10.getAny();
    var8.setSubPremise(var10);
    java.util.List var13 = var8.getSubPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var15 = var14.createPremise();
    java.util.List var16 = var15.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var17 = var15.getFirm();
    var15.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var20 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var21 = var20.createPremise();
    java.lang.String var22 = var21.getPremiseThoroughfareConnector();
    var15.setPremise(var21);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var24 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var25 = var24.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var26 = var24.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var27 = var24.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var28 = var27.getType();
    java.util.List var29 = var27.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var30 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var31 = var30.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var32 = var30.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var33 = var30.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var34 = var30.createThoroughfare();
    java.util.List var35 = var34.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var36 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var37 = var36.getPostTown();
    var34.setPostalCode(var36);
    var27.setPostalCode(var36);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var40 = var27.getPostalCode();
    var15.setPostalCode(var40);
    var8.setPostalCode(var40);
    var3.setPostalCode(var40);
    var3.setType("(default) Indicates to ignore an altitude specification");
    java.util.List var46 = var3.getAddressLine();
    java.lang.String var47 = var3.getUsageType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var48 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var49 = var48.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var50 = var48.createPostOffice();
    java.util.List var51 = var50.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var52 = var50.getPostOfficeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var53 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var54 = var53.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var55 = var53.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var56 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var57 = var56.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var58 = var56.createPostBoxPostBoxNumberExtension();
    var53.setPostBoxNumberExtension(var58);
    var50.setPostBox(var53);
    java.lang.String var61 = var50.getIndicator();
    java.lang.String var62 = var50.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var63 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType();
    java.util.List var64 = var63.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var65 = var63.getPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var66 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var67 = var66.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var68 = var66.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var69 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var70 = var69.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var71 = var69.createPostBoxPostBoxNumberExtension();
    var66.setPostBoxNumberExtension(var71);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var73 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var74 = var73.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var75 = var73.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var76 = var73.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var77 = var73.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var78 = var73.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var79 = var73.createFirmType();
    java.util.List var80 = var79.getFirmName();
    var66.setFirm(var79);
    var66.setIndicator("hi!");
    var63.setPostBox(var66);
    var50.setPostalRoute(var63);
    java.util.List var86 = var50.getPostOfficeName();
    var3.setPostOffice(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var70);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);

  }

  public void test57() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test57");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var2 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var4.setThoroughfarePostDirection(var5);
    java.util.List var7 = var4.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var8 = var4.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var9 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var11 = var10.getCode();
    java.lang.String var12 = var10.getCode();
    var9.setThoroughfareTrailingType(var10);
    var4.setDependentThoroughfare(var9);
    var3.setDependentThoroughfare(var9);
    oasis.names.tc.ciq.xsdschema.xal._2.Department var16 = new oasis.names.tc.ciq.xsdschema.xal._2.Department();
    java.util.List var17 = var16.getDepartmentName();
    java.util.List var18 = var16.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var19 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var20 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    var19.setMailStop(var20);
    var16.setMailStop(var20);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var23 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var24 = var23.getPostTown();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var25 = var23.getPostTown();
    var16.setPostalCode(var23);
    var3.setPostalCode(var23);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var28 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown();
    var28.setType("hi!");
    java.util.Map var31 = var28.getOtherAttributes();
    java.util.List var32 = var28.getAddressLine();
    java.util.Map var33 = var28.getOtherAttributes();
    java.lang.String var34 = var28.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var35 = var28.getPostTownSuffix();
    var23.setPostTown(var28);
    java.util.List var37 = var23.getPostalCodeNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "hi!"+ "'", var34.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);

  }

  public void test58() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test58");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix();
    var0.setNumberPrefixSeparator("G_GEO_UNKOWN_STATUS");
    java.lang.String var3 = var0.getCode();
    var0.setContent("Uknown Status");
    var0.setNumberPrefixSeparator("geo.google.datamodel.GeoUsAddress@1a4a00a5[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@70705e1e[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@61333d3d[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test59() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test59");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    var4.setCode("hi!");
    java.lang.String var7 = var4.getCode();
    java.lang.String var8 = var4.getCode();
    var4.setContent("hi!");
    var4.setContent("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var13 = var4.getContent();
    java.util.Map var14 = var4.getOtherAttributes();
    var4.setType("geo.google.datamodel.GeoUsAddress@49269587[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@422f796[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@13ac9af9[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "geo.google.GeoException: geo.google.GeoException: "+ "'", var13.equals("geo.google.GeoException: geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);

  }

  public void test60() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test60");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var6 = var5.getAddressLine();
    java.util.List var7 = var5.getAny();
    var4.setPostBox(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var9 = var4.getPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var10 = var4.getDependentLocalityNumber();
    var4.setUsageType("hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var14 = var13.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var15 = var13.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var16 = var15.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var18 = var17.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var19 = var17.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var20 = var17.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var21 = var17.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var22 = var17.createLargeMailUserTypeLargeMailUserIdentifier();
    var15.setLargeMailUserIdentifier(var22);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var24 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var25 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var24.setThoroughfarePostDirection(var25);
    java.util.List var27 = var24.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var28 = var24.getThoroughfareLeadingType();
    java.util.List var29 = var24.getThoroughfareNumberOrThoroughfareNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var30 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var31 = var30.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var32 = var30.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var33 = var30.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var34 = var30.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var35 = var34.getPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var36 = var34.getDependentLocalityNumber();
    var24.setDependentLocality(var34);
    var15.setThoroughfare(var24);
    java.lang.String var39 = var24.getDependentThoroughfaresType();
    var4.setThoroughfare(var24);
    java.util.List var41 = var24.getThoroughfareNumberOrThoroughfareNumberRange();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);

  }

  public void test61() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test61");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAny();
    var1.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var5 = var1.getMailStop();
    var1.setPremiseDependencyType("");
    java.lang.String var8 = var1.getPremiseDependency();
    java.lang.String var9 = var1.getType();
    java.lang.String var10 = var1.getPremiseDependencyType();
    java.lang.String var11 = var1.getPremiseDependency();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test62() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test62");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var2 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var3 = var0.createBuildingNameType();
    var3.setContent("geo.google.GeoException: ");
    java.lang.String var6 = var3.getContent();
    java.lang.String var7 = var3.getType();
    var3.setType("(default) Indicates to ignore an altitude specification");
    var3.setCode("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var3.setType("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var14 = var3.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "geo.google.GeoException: "+ "'", var6.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);

  }

  public void test63() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test63");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var1 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var1.setThoroughfarePostDirection(var2);
    java.util.List var4 = var1.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var5 = var1.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var1.getPostalCode();
    var0.setThoroughfare(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var9 = var8.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var10 = var8.createDependentLocalityTypeDependentLocalityNumber();
    var0.setDependentLocalityNumber(var10);
    java.util.Map var12 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var14 = var13.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var15 = var13.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var16 = var13.createThoroughfare();
    var0.setThoroughfare(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var19 = var18.createPremise();
    java.lang.String var20 = var19.getPremiseThoroughfareConnector();
    java.util.List var21 = var19.getSubPremise();
    var16.setPremise(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);

  }

  public void test64() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test64");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier();
    java.lang.String var1 = var0.getCode();
    var0.setContent("hi!");
    java.util.Map var4 = var0.getOtherAttributes();
    var0.setIdentifierType("geo.google.datamodel.GeoAddress@e474122[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setCode("geo.google.datamodel.GeoUsAddress@7a855e06[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@49e01ac1[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@17fc9acb[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test65() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test65");


    geo.google.datamodel.GeoAddress var0 = new geo.google.datamodel.GeoAddress();
    java.lang.String var1 = var0.toString();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var3 = var2.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var4 = var2.createSubPremiseTypeSubPremiseNumberPrefix();
    java.lang.String var5 = var4.getType();
    var4.setCode("G_GEO_UNKOWN_STATUS");
    var4.setCode("G_GEO_UNKOWN_STATUS");
    var4.setCode("geo.google.GeoException: geo.google.GeoException: ");
    var4.setType("");
    boolean var14 = var0.equals((java.lang.Object)"");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var15 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var16 = var15.getAddress();
    java.lang.String var17 = var15.getValidToDate();
    java.lang.String var18 = var15.getAddressDetailsKey();
    var0.setAddressDetails(var15);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var20 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var21 = var20.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var22 = var20.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var23 = var20.createAddressDetailsCountry();
    java.util.List var24 = var23.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var25 = var23.getThoroughfare();
    java.util.List var26 = var23.getCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var27 = var23.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var28 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var29 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var28.setThoroughfarePostDirection(var29);
    java.util.List var31 = var28.getThoroughfareNumberSuffix();
    var28.setDependentThoroughfaresIndicator("hi!");
    var28.setDependentThoroughfaresType("");
    var23.setThoroughfare(var28);
    var15.setCountry(var23);
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var38 = var23.getLocality();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "geo.google.datamodel.GeoAddress@342bba4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var1.equals("geo.google.datamodel.GeoAddress@342bba4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);

  }

  public void test66() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test66");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber();
    var0.setCode("");
    java.lang.String var3 = var0.getIndicator();
    var0.setNumberType("G_GEO_UNKOWN_STATUS");
    java.lang.String var6 = var0.getNumberType();
    java.util.Map var7 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var6.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test67() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test67");


    com.google.earth.kml._2.PlacemarkType var0 = new com.google.earth.kml._2.PlacemarkType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var1 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var2 = var1.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var3 = var1.getAddressLines();
    var1.setUsage("");
    var1.setCode("G_GEO_UNKOWN_STATUS");
    var0.setAddressDetails(var1);
    var0.setAddress("geo.google.GeoException: ");
    com.google.earth.kml._2.PointType var11 = var0.getPoint();
    geo.google.mapping.PointToCoordinateFunctor var12 = new geo.google.mapping.PointToCoordinateFunctor();
    com.google.earth.kml._2.PointType var13 = new com.google.earth.kml._2.PointType();
    var13.setTessellate((java.lang.Boolean)true);
    var13.setExtrude((java.lang.Boolean)false);
    geo.google.datamodel.GeoCoordinate var18 = var12.execute(var13);
    var13.setTessellate((java.lang.Boolean)false);
    var0.setPoint(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);

  }

  public void test68() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test68");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName();
    var0.setContent("hi!");

  }

  public void test69() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test69");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    var0.setSeparator("Uknown Status");
    java.lang.String var3 = var0.getIndicator();
    var0.setIndicator("");
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var6 = var0.getThoroughfareNumberTo();
    var0.setCode("geo.google.datamodel.GeoAddress@3eb210be[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test70() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test70");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumberExtension var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumberExtension();
    java.lang.String var1 = var0.getCode();
    var0.setType("geo.google.GeoException: ");
    java.lang.String var4 = var0.getCode();
    var0.setCode("geo.google.datamodel.GeoUsAddress@728c3b08[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5477c4f8[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@324a11b[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test71() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test71");


    geo.google.datamodel.GeoCoordinate var7 = new geo.google.datamodel.GeoCoordinate();
    double var8 = var7.getLongitude();
    geo.google.datamodel.GeoCoordinate var9 = new geo.google.datamodel.GeoCoordinate();
    double var10 = var9.getLongitude();
    double var11 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var7, var9);
    geo.google.datamodel.GeoCoordinate var12 = new geo.google.datamodel.GeoCoordinate();
    double var13 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var7, var12);
    geo.google.datamodel.GeoStatusCode var16 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var17 = new geo.google.GeoException("", var16);
    boolean var18 = var7.equals((java.lang.Object)var16);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var20 = var19.createPremise();
    java.util.List var21 = var20.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var22 = var20.getFirm();
    var20.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var25 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var26 = var25.createPremise();
    java.lang.String var27 = var26.getPremiseThoroughfareConnector();
    var20.setPremise(var26);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var29 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var30 = var29.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var31 = var29.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var32 = var29.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var33 = var32.getType();
    java.util.List var34 = var32.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var35 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var36 = var35.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var37 = var35.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var38 = var35.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var39 = var35.createThoroughfare();
    java.util.List var40 = var39.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var41 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var42 = var41.getPostTown();
    var39.setPostalCode(var41);
    var32.setPostalCode(var41);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var45 = var32.getPostalCode();
    var20.setPostalCode(var45);
    boolean var47 = var7.equals((java.lang.Object)var20);
    geo.google.datamodel.GeoCoordinate var48 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var49 = new geo.google.datamodel.GeoCoordinate();
    double var50 = var49.getLongitude();
    double var51 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var48, var49);
    geo.google.datamodel.GeoAltitude var52 = var49.getAltitude();
    geo.google.datamodel.GeoCoordinate var53 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var54 = new geo.google.datamodel.GeoCoordinate();
    double var55 = var54.getLongitude();
    double var56 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var53, var54);
    double var57 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var49, var54);
    double var58 = geo.google.datamodel.GeoUtils.distanceBetweenInMiles(var7, var54);
    geo.google.datamodel.GeoCoordinate var59 = var7.clone();
    geo.google.datamodel.GeoAddressAccuracy var61 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var62 = var61.getName();
    int var63 = var61.getCode();
    geo.google.datamodel.GeoUsAddress var64 = new geo.google.datamodel.GeoUsAddress("geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", var7, var61);
    java.lang.String var65 = var64.getState();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "UNKNOWN_LOCATION"+ "'", var62.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "Uknown Status"+ "'", var65.equals("Uknown Status"));

  }

  public void test72() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test72");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var5 = var0.createAddressLinesType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var6 = var0.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var7 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var8 = var7.getIndicator();
    java.util.Map var9 = var7.getOtherAttributes();
    var6.setAdministrativeArea(var7);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var12 = var11.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var13 = var11.createPostOffice();
    java.util.List var14 = var13.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var15 = var13.getPostOfficeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var16 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var17 = var16.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var18 = var16.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var20 = var19.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var21 = var19.createPostBoxPostBoxNumberExtension();
    var16.setPostBoxNumberExtension(var21);
    var13.setPostBox(var16);
    java.lang.String var24 = var13.getIndicator();
    var13.setIndicator("UNKNOWN_LOCATION");
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var27 = new oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber();
    java.lang.String var28 = var27.getIndicator();
    java.lang.String var29 = var27.getCode();
    var27.setContent("");
    var13.setPostOfficeNumber(var27);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var33 = var13.getPostalRoute();
    var7.setPostOffice(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var35 = var7.getLocality();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);

  }

  public void test73() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test73");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var1 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var1.setThoroughfarePostDirection(var2);
    java.util.List var4 = var1.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var5 = var1.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var1.getPostalCode();
    var0.setThoroughfare(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var9 = var8.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var10 = var8.createDependentLocalityTypeDependentLocalityNumber();
    var0.setDependentLocalityNumber(var10);
    java.lang.String var12 = var0.getConnector();
    java.lang.String var13 = var0.getIndicator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test74() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test74");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var1 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var1.setThoroughfarePostDirection(var2);
    java.util.List var4 = var1.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var5 = var1.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var1.getPostalCode();
    var0.setThoroughfare(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var8 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var9 = var8.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var10 = var8.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var12 = var11.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var13 = var11.createPostBoxPostBoxNumberExtension();
    var8.setPostBoxNumberExtension(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var15 = var8.getPostBoxNumberExtension();
    java.util.List var16 = var8.getAny();
    var0.setPostBox(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var18 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var20 = var19.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var21 = var19.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var22 = var19.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var23 = var19.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var24 = var19.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var25 = var19.createFirmType();
    var18.setFirm(var25);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var28 = var27.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var29 = var27.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var30 = var27.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var31 = var27.createThoroughfare();
    java.util.List var32 = var31.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var33 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var34 = var33.getPostTown();
    var31.setPostalCode(var33);
    var25.setPostalCode(var33);
    var8.setFirm(var25);
    java.util.List var38 = var25.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);

  }

  public void test75() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test75");


    geo.google.GeoAddressStandardizer var1 = new geo.google.GeoAddressStandardizer("G_GEO_UNKOWN_STATUS");
    var1.setApiKey("geo.google.GeoException: ");
    long var4 = var1.getRateLimitInterval();
    long var5 = var1.getRateLimitInterval();
    geo.google.mapping.XmlToUsAddressFunctor var7 = geo.google.mapping.XmlToUsAddressFunctor.getInstance();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var8 = var1.standardize("geo.google.datamodel.GeoAddress@77278fe3[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", (geo.google.mapping.XmlMappingFunctor)var7);
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 5769L);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 5769L);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test76() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test76");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var5 = var0.createFirmType();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberPrefix var6 = var0.createPremiseNumberPrefix();
    java.util.Map var7 = var6.getOtherAttributes();
    var6.setCode("geo.google.GeoException: ");
    java.lang.String var10 = var6.getNumberPrefixSeparator();
    var6.setType("geo.google.datamodel.GeoUsAddress@49269587[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@422f796[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@13ac9af9[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var13 = var6.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "geo.google.GeoException: "+ "'", var13.equals("geo.google.GeoException: "));

  }

  public void test77() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test77");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var2 = var0.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var3 = var0.getAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var4 = var0.getAddressLines();
    java.lang.String var5 = var0.getValidToDate();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var6 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var7 = var6.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var8 = var6.getPostOffice();
    java.lang.String var9 = var6.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var10 = var6.getLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var11 = var6.getLocality();
    java.lang.String var12 = var6.getIndicator();
    var0.setAdministrativeArea(var6);
    java.util.List var14 = var6.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);

  }

  public void test78() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test78");


    geo.google.datamodel.GeoAddress var0 = new geo.google.datamodel.GeoAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var1 = var0.getAddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var2 = var0.getAddressDetails();
    geo.google.datamodel.GeoCoordinate var3 = new geo.google.datamodel.GeoCoordinate();
    double var4 = var3.getLongitude();
    geo.google.datamodel.GeoCoordinate var5 = new geo.google.datamodel.GeoCoordinate();
    double var6 = var5.getLongitude();
    double var7 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var3, var5);
    geo.google.datamodel.GeoCoordinate var8 = new geo.google.datamodel.GeoCoordinate();
    double var9 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var3, var8);
    var0.setCoordinate(var8);
    var0.setAddressLine("geo.google.datamodel.GeoAddress@2de26f07[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 0.0d);

  }

  public void test79() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test79");


    com.google.earth.kml._2.PlacemarkType var0 = new com.google.earth.kml._2.PlacemarkType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var1 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var2 = var1.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var3 = var1.getAddressLines();
    var1.setUsage("");
    var1.setCode("G_GEO_UNKOWN_STATUS");
    var0.setAddressDetails(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var9 = var1.getAddressLines();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var10 = var1.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var11 = var1.getAdministrativeArea();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test80() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test80");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType();
    java.lang.String var1 = var0.getContent();
    java.lang.String var2 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);

  }

  public void test81() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test81");


    oasis.names.tc.ciq.xsdschema.xal._2.Locality var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var1 = var0.getPostOffice();
    java.util.List var2 = var0.getAny();
    java.util.List var3 = var0.getAny();
    java.util.List var4 = var0.getAny();
    java.util.List var5 = var0.getLocalityName();
    java.util.Map var6 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test82() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test82");


    com.google.earth.kml._2.PlacemarkType var0 = new com.google.earth.kml._2.PlacemarkType();
    com.google.earth.kml._2.PointType var1 = var0.getPoint();
    var0.setId("");
    java.lang.String var4 = var0.getId();
    java.lang.String var5 = var0.getAddress();
    com.google.earth.kml._2.PointType var6 = var0.getPoint();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + ""+ "'", var4.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test83() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test83");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var3 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var4 = var0.createPostBoxPostBoxNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserName var5 = var0.createLargeMailUserTypeLargeMailUserName();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var6 = var0.createXAL();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo var7 = var0.createPremisePremiseNumberRangePremiseNumberRangeTo();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var8 = var0.createPostalRouteTypePostalRouteName();
    var8.setCode("geo.google.GeoException: , geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n],  UNKNOWN_LOCATION");
    var8.setContent("geo.google.datamodel.GeoUsAddress@1add92c3[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@48ce4dfc[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@606200bb[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test84() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test84");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressLine var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressLine();
    var0.setContent("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var3 = var0.getContent();
    var0.setType("geo.google.datamodel.GeoUsAddress@18a6d06f[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@6fbe340d[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@304b7acb[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setCode("geo.google.datamodel.GeoAddress@49e11d13[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var3.equals("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test85() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test85");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var3 = var0.createPostalRouteTypePostalRouteName();
    java.util.Map var4 = var3.getOtherAttributes();
    var3.setContent("geo.google.GeoException: , geo.google.GeoException: hi!,  CLAMP_TO_GROUND");
    var3.setCode("geo.google.GeoException: , geo.google.GeoException: hi!,  geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var9 = var3.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "geo.google.GeoException: , geo.google.GeoException: hi!,  geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var9.equals("geo.google.GeoException: , geo.google.GeoException: hi!,  geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test86() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test86");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var2 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    java.lang.String var4 = var3.getType();
    var3.setCode("geo.google.datamodel.GeoUsAddress@56cc18ee[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@7178ddc6[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@36282c5d[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test87() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test87");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode();
    var0.setContent("geo.google.datamodel.GeoAddress@2c8fa0b9[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var3 = var0.getOtherAttributes();
    java.lang.String var4 = var0.getContent();
    java.lang.String var5 = var0.getScheme();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "geo.google.datamodel.GeoAddress@2c8fa0b9[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var4.equals("geo.google.datamodel.GeoAddress@2c8fa0b9[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test88() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test88");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName();
    java.util.Map var1 = var0.getOtherAttributes();
    var0.setCode("geo.google.datamodel.GeoAddress@4244bb8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setCode("geo.google.datamodel.GeoAddress@13e88e82[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);

  }

  public void test89() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test89");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix();
    java.util.Map var1 = var0.getOtherAttributes();
    var0.setType("hi!");
    var0.setType("geo.google.datamodel.GeoAddress@12dfb6a6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var6 = var0.getType();
    var0.setCode("geo.google.datamodel.GeoUsAddress@1add92c3[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@48ce4dfc[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@606200bb[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "geo.google.datamodel.GeoAddress@12dfb6a6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var6.equals("geo.google.datamodel.GeoAddress@12dfb6a6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test90() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test90");


    com.google.earth.kml._2.ObjectFactory var0 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var1 = var0.createResponseType();
    com.google.earth.kml._2.KmlType var2 = var0.createKmlType();
    com.google.earth.kml._2.ObjectFactory var3 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var4 = var3.createResponseType();
    com.google.earth.kml._2.KmlType var5 = var3.createKmlType();
    com.google.earth.kml._2.ResponseType var6 = var5.getResponse();
    javax.xml.bind.JAXBElement var7 = var0.createKml(var5);
    com.google.earth.kml._2.ObjectFactory var8 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var9 = var8.createResponseType();
    com.google.earth.kml._2.ResponseType var10 = var8.createResponseType();
    com.google.earth.kml._2.PointType var11 = var8.createPointType();
    com.google.earth.kml._2.KmlType var12 = var8.createKmlType();
    geo.google.mapping.PointToCoordinateFunctor var13 = new geo.google.mapping.PointToCoordinateFunctor();
    com.google.earth.kml._2.PointType var14 = new com.google.earth.kml._2.PointType();
    var14.setTessellate((java.lang.Boolean)true);
    var14.setExtrude((java.lang.Boolean)false);
    geo.google.datamodel.GeoCoordinate var19 = var13.execute(var14);
    com.google.earth.kml._2.PointType var20 = new com.google.earth.kml._2.PointType();
    var20.setTessellate((java.lang.Boolean)true);
    java.lang.Boolean var23 = var20.isTessellate();
    geo.google.datamodel.GeoCoordinate var24 = var13.execute(var20);
    javax.xml.bind.JAXBElement var25 = var8.createPoint(var20);
    com.google.earth.kml._2.PointType var26 = new com.google.earth.kml._2.PointType();
    var26.setExtrude((java.lang.Boolean)true);
    javax.xml.bind.JAXBElement var29 = var8.createPoint(var26);
    com.google.earth.kml._2.ResponseType var30 = var8.createResponseType();
    javax.xml.bind.JAXBElement var31 = var0.createResponse(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + true+ "'", var23.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);

  }

  public void test91() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test91");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var2 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    java.lang.String var4 = var3.getType();
    var3.setContent("(default) Indicates to ignore an altitude specification");
    var3.setContent("Uknown Status");
    java.lang.String var9 = var3.getContent();
    var3.setType("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var3.setTypeOccurrence("geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var14 = var3.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "Uknown Status"+ "'", var9.equals("Uknown Status"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "Uknown Status"+ "'", var14.equals("Uknown Status"));

  }

  public void test92() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test92");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var2 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var3 = var0.createBuildingNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var4 = var0.createXAL();
    var4.setVersion("geo.google.GeoException: geo.google.GeoException: ");
    java.util.List var7 = var4.getAny();
    java.lang.String var8 = var4.getVersion();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "geo.google.GeoException: geo.google.GeoException: "+ "'", var8.equals("geo.google.GeoException: geo.google.GeoException: "));

  }

  public void test93() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test93");


    geo.google.datamodel.GeoCoordinate var0 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var1 = new geo.google.datamodel.GeoCoordinate();
    double var2 = var1.getLongitude();
    double var3 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var0, var1);
    geo.google.datamodel.GeoAltitude var4 = var1.getAltitude();
    var1.setLatitude(100.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test94() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test94");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    var0.setAccuracy((java.lang.Integer)1);
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var4 = var0.getLocality();
    var0.setAccuracy((java.lang.Integer)1);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var8 = var7.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var9 = var7.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var10 = var7.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var11 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var12 = var11.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var14 = var13.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var15 = var13.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var16 = var13.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var17 = var16.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var18 = var16.getPostOffice();
    java.lang.String var19 = var16.getUsageType();
    java.util.List var20 = var16.getAddressLine();
    var11.setSubAdministrativeArea(var16);
    java.lang.String var22 = var11.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var23 = var11.getPostalCode();
    var10.setAdministrativeArea(var11);
    java.util.List var25 = var10.getCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var26 = var10.getAdministrativeArea();
    java.util.Map var27 = var26.getOtherAttributes();
    var0.setAdministrativeArea(var26);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var29 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var30 = var29.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var31 = var29.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var32 = var29.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var33 = var32.getThoroughfarePreDirection();
    var0.setThoroughfare(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);

  }

  public void test95() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test95");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var2 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var4 = var0.createSubPremiseTypeSubPremiseNumber();
    var4.setIndicator("hi!");
    java.lang.String var7 = var4.getIndicatorOccurrence();
    java.lang.String var8 = var4.getPremiseNumberSeparator();
    var4.setCode("geo.google.datamodel.GeoAddress@535811d6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var4.setContent("geo.google.datamodel.GeoAddress@35e7c9a0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test96() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test96");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection();
    var0.setCode("geo.google.datamodel.GeoAddress@1dd53212[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");

  }

  public void test97() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test97");


    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseName();
    java.lang.String var1 = var0.getContent();
    java.lang.String var2 = var0.getCode();
    var0.setContent("geo.google.datamodel.GeoAddress@12dfb6a6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);

  }

  public void test98() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test98");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var2 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var3 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var4 = var0.createAddressDetailsPostalServiceElementsKeyLineCode();
    var4.setCode("geo.google.datamodel.GeoAddress@24493185[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test99() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test99");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var3 = var1.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var4 = var1.getFirm();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test100() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test100");


    oasis.names.tc.ciq.xsdschema.xal._2.Locality var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var1.createPremise();
    java.util.List var3 = var2.getAddressLine();
    java.util.List var4 = var2.getAny();
    var2.setType("");
    var2.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var9 = var2.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var11 = var10.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var12 = var10.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var13 = var10.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var14 = var10.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var15 = var10.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var16 = var10.createFirmType();
    var2.setFirm(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var18 = var2.getMailStop();
    var2.setType("hi!");
    var0.setPremise(var2);
    java.util.Map var22 = var0.getOtherAttributes();
    var0.setUsageType("geo.google.datamodel.GeoAddress@4244bb8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var25 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var26 = var25.createPremise();
    java.util.List var27 = var26.getAddressLine();
    java.util.List var28 = var26.getAny();
    var26.setType("");
    var26.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var33 = var26.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var34 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var35 = var34.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var36 = var34.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var37 = var34.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var38 = var34.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var39 = var34.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var40 = var34.createFirmType();
    var26.setFirm(var40);
    java.util.List var42 = var26.getBuildingName();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var43 = var26.getFirm();
    var0.setPremise(var26);
    java.util.List var45 = var26.getPremiseNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);

  }

  public void test101() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test101");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName();
    var0.setType("geo.google.GeoException: ");
    var0.setContent("");
    java.lang.String var5 = var0.getCode();
    java.util.Map var6 = var0.getOtherAttributes();
    var0.setContent("geo.google.GeoException: hi!");
    java.util.Map var9 = var0.getOtherAttributes();
    java.lang.String var10 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "geo.google.GeoException: "+ "'", var10.equals("geo.google.GeoException: "));

  }

  public void test102() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test102");


    geo.google.datamodel.GeoCoordinate var2 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var3 = new geo.google.datamodel.GeoCoordinate();
    double var4 = var3.getLongitude();
    double var5 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var2, var3);
    geo.google.datamodel.GeoAltitude var6 = var3.getAltitude();
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var7 = var6.getMode();
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var8 = var6.getMode();
    geo.google.datamodel.GeoCoordinate var9 = new geo.google.datamodel.GeoCoordinate(154.48836784013483d, 100.0d, var6);
    geo.google.datamodel.GeoCoordinate var10 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var11 = new geo.google.datamodel.GeoCoordinate();
    double var12 = var11.getLongitude();
    double var13 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var10, var11);
    double var14 = var10.getLatitude();
    geo.google.datamodel.GeoCoordinate var15 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var16 = new geo.google.datamodel.GeoCoordinate();
    double var17 = var16.getLongitude();
    double var18 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var15, var16);
    geo.google.datamodel.GeoCoordinate var19 = var15.clone();
    double var20 = geo.google.datamodel.GeoUtils.distanceBetweenInMiles(var10, var19);
    geo.google.datamodel.GeoCoordinate var21 = new geo.google.datamodel.GeoCoordinate();
    double var22 = var21.getLongitude();
    geo.google.datamodel.GeoCoordinate var23 = new geo.google.datamodel.GeoCoordinate();
    double var24 = var23.getLongitude();
    double var25 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var21, var23);
    geo.google.datamodel.GeoCoordinate var26 = new geo.google.datamodel.GeoCoordinate();
    double var27 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var21, var26);
    geo.google.datamodel.GeoStatusCode var30 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var31 = new geo.google.GeoException("", var30);
    boolean var32 = var21.equals((java.lang.Object)var30);
    geo.google.datamodel.GeoAltitude var34 = new geo.google.datamodel.GeoAltitude(0.0d);
    var21.setAltitude(var34);
    var34.setAltitude((-1.0d));
    var10.setAltitude(var34);
    double var39 = geo.google.datamodel.GeoUtils.distanceBetweenInMiles(var9, var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var14 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var39 == 5658.927089842989d);

  }

  public void test103() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test103");


    org.xml.sax.InputSource var1 = geo.google.utils.XmlUtils.stringToInputSource("geo.google.datamodel.GeoAddress@20f76730[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);

  }

  public void test104() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test104");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var5 = var0.createAddressLinesType();
    java.util.List var6 = var5.getAddressLine();
    java.util.List var7 = var5.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test105() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test105");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberSuffix var5 = var0.createSubPremiseTypeSubPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var6 = var0.createAddressDetailsAddress();
    var6.setType("geo.google.GeoException: ");
    var6.setContent("geo.google.datamodel.GeoAddress@35e7c9a0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var11 = var6.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "geo.google.datamodel.GeoAddress@35e7c9a0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var11.equals("geo.google.datamodel.GeoAddress@35e7c9a0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test106() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test106");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.getMailStop();
    java.util.List var2 = var0.getAddressLine();
    java.util.List var3 = var0.getSubPremiseName();
    java.lang.String var4 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var5 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var6 = var5.getSubPremiseNumberPrefix();
    var5.setType("");
    java.util.List var9 = var5.getSubPremiseNumberSuffix();
    java.util.List var10 = var5.getAddressLine();
    var0.setSubPremise(var5);
    var0.setType("geo.google.datamodel.GeoAddress@535811d6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.List var14 = var0.getSubPremiseNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);

  }

  public void test107() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test107");


    geo.google.mapping.PointToCoordinateFunctor var0 = new geo.google.mapping.PointToCoordinateFunctor();
    com.google.earth.kml._2.PlacemarkType var1 = new com.google.earth.kml._2.PlacemarkType();
    var1.setAddress("geo.google.GeoException: ");
    com.google.earth.kml._2.PointType var4 = new com.google.earth.kml._2.PointType();
    var4.setTessellate((java.lang.Boolean)true);
    var4.setExtrude((java.lang.Boolean)false);
    var1.setPoint(var4);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var10 = var1.getAddressDetails();
    java.lang.String var11 = var1.getAddress();
    com.google.earth.kml._2.ObjectFactory var12 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var13 = var12.createResponseType();
    com.google.earth.kml._2.ResponseType var14 = var12.createResponseType();
    com.google.earth.kml._2.PointType var15 = var12.createPointType();
    var1.setPoint(var15);
    geo.google.datamodel.GeoCoordinate var17 = var0.execute(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "geo.google.GeoException: "+ "'", var11.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);

  }

  public void test108() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test108");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode();
    java.util.Map var1 = var0.getOtherAttributes();
    java.util.Map var2 = var0.getOtherAttributes();
    java.lang.String var3 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test109() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test109");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    java.lang.String var11 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var12.setIndicator("G_GEO_UNKOWN_STATUS");
    var2.setPostBox(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var17 = var16.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var18 = var16.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var19 = var16.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var20 = var16.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var21 = var16.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var22 = var16.createFirmType();
    var12.setFirm(var22);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var24 = var22.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var25 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    var22.setMailStop(var25);
    java.lang.String var27 = var25.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var28 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName();
    var25.setMailStopName(var28);
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var30 = var25.getMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var31 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var32 = var31.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var33 = var31.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var34 = var31.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var35 = var31.createAddressDetailsPostalServiceElementsKeyLineCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var36 = var31.createMailStopTypeMailStopNumber();
    var25.setMailStopNumber(var36);
    java.lang.String var38 = var36.getContent();
    var36.setContent("geo.google.datamodel.GeoUsAddress@ed45e29[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@1871dd5a[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@5b7b4c3f[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    var36.setContent("G_GEO_UNKOWN_STATUS");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);

  }

  public void test110() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test110");


    geo.google.datamodel.GeoCoordinate var7 = new geo.google.datamodel.GeoCoordinate();
    double var8 = var7.getLongitude();
    geo.google.datamodel.GeoCoordinate var9 = new geo.google.datamodel.GeoCoordinate();
    double var10 = var9.getLongitude();
    double var11 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var7, var9);
    double var12 = var9.getLatitude();
    var9.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var16 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var17 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var9, var16);
    java.lang.String var18 = var17.getState();
    java.lang.String var19 = var17.getCounty();
    geo.google.datamodel.GeoAltitude var22 = new geo.google.datamodel.GeoAltitude();
    geo.google.datamodel.GeoAltitude var23 = var22.clone();
    geo.google.datamodel.GeoCoordinate var24 = new geo.google.datamodel.GeoCoordinate(100.0d, 154.48836784013483d, var22);
    var17.setCoordinate(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + "Uknown Status"+ "'", var19.equals("Uknown Status"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);

  }

  public void test111() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test111");


    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber();
    java.lang.String var1 = var0.getIndicator();
    java.lang.String var2 = var0.getCode();
    java.lang.String var3 = var0.getIndicator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test112() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test112");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var2 = var0.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var3 = var0.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var5 = var0.createSubPremiseTypeSubPremiseLocation();
    java.lang.String var6 = var5.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test113() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test113");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var6 = var0.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var7 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData var8 = var0.createAddressDetailsPostalServiceElementsSupplementaryPostalServiceData();
    java.lang.String var9 = var8.getType();
    java.util.Map var10 = var8.getOtherAttributes();
    var8.setType("geo.google.datamodel.GeoUsAddress@ed45e29[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@1871dd5a[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@5b7b4c3f[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var13 = var8.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);

  }

  public void test114() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test114");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var5 = var0.createPremise();
    java.util.Map var6 = var5.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var8 = var7.createPremise();
    java.util.List var9 = var8.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var10 = var8.getFirm();
    var8.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var14 = var13.createPremise();
    java.lang.String var15 = var14.getPremiseThoroughfareConnector();
    var8.setPremise(var14);
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var17 = var8.getPremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var19 = var18.createPremise();
    java.util.List var20 = var19.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var21 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var22 = var21.createPremise();
    var19.setPremise(var22);
    var22.setPremiseThoroughfareConnector("hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var26 = var22.getMailStop();
    var8.setPremise(var22);
    var5.setPremise(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);

  }

  public void test115() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test115");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var4 = var0.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var5 = var0.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var6 = var0.createAddressDetailsPostalServiceElementsKeyLineCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownName var7 = var0.createPostalCodePostTownPostTownName();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var8 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var9 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var10 = var0.createAdministrativeArea();
    java.lang.String var11 = var10.getUsageType();
    java.lang.String var12 = var10.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test116() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test116");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var2 = var1.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var3 = var1.createPostOffice();
    java.util.List var4 = var3.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var5 = var3.getPostOfficeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var6 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var7 = var6.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var8 = var6.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var10 = var9.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var11 = var9.createPostBoxPostBoxNumberExtension();
    var6.setPostBoxNumberExtension(var11);
    var3.setPostBox(var6);
    var0.setPostOffice(var3);
    java.util.List var15 = var3.getAny();
    java.lang.String var16 = var3.getIndicator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);

  }

  public void test117() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test117");


    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber();
    var0.setType("G_GEO_UNKOWN_STATUS");
    java.lang.String var3 = var0.getType();
    java.lang.String var4 = var0.getNumberTypeOccurrence();
    java.lang.String var5 = var0.getCode();
    java.lang.String var6 = var0.getType();
    java.lang.String var7 = var0.getIndicator();
    var0.setType("geo.google.GeoException: ");
    java.lang.String var10 = var0.getIndicatorOccurrence();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var3.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var6.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test118() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test118");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var6 = var0.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var7 = var0.createPremisePremiseNumberRange();
    var7.setType("geo.google.datamodel.GeoAddress@16896f61[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var10 = var7.getNumberRangeOccurence();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test119() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test119");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var2 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var3 = var0.createAddressDetailsPostalServiceElementsAddressLatitude();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberPrefix var4 = var0.createPostBoxPostBoxNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber var5 = var0.createPostalRouteTypePostalRouteNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var6 = var0.createAddressDetailsCountryCountryNameCode();
    var6.setCode("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var9 = var6.getContent();
    java.util.Map var10 = var6.getOtherAttributes();
    java.lang.String var11 = var6.getContent();
    var6.setScheme("geo.google.datamodel.GeoAddress@64b274a1[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test120() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test120");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var1 = var0.getAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var2 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude();
    java.util.Map var3 = var2.getOtherAttributes();
    var0.setAddressLongitude(var2);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var5 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var6 = var5.getAny();
    java.lang.String var7 = var5.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var8 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude();
    var5.setAddressLatitude(var8);
    var0.setAddressLatitude(var8);
    java.util.Map var11 = var8.getOtherAttributes();
    java.util.Map var12 = var8.getOtherAttributes();
    var8.setType("geo.google.datamodel.GeoAddress@79386135[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test121() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test121");


    geo.google.datamodel.GeoCoordinate var2 = new geo.google.datamodel.GeoCoordinate();
    double var3 = var2.getLongitude();
    geo.google.datamodel.GeoCoordinate var4 = new geo.google.datamodel.GeoCoordinate();
    double var5 = var4.getLongitude();
    double var6 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var2, var4);
    geo.google.datamodel.GeoCoordinate var7 = new geo.google.datamodel.GeoCoordinate();
    double var8 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var2, var7);
    geo.google.datamodel.GeoStatusCode var11 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var12 = new geo.google.GeoException("", var11);
    boolean var13 = var2.equals((java.lang.Object)var11);
    geo.google.datamodel.GeoAltitude var15 = new geo.google.datamodel.GeoAltitude(0.0d);
    var2.setAltitude(var15);
    java.lang.String var17 = var15.toString();
    geo.google.datamodel.GeoCoordinate var18 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoAltitude var20 = new geo.google.datamodel.GeoAltitude(0.0d);
    var20.setAltitude(10.0d);
    var18.setAltitude(var20);
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var24 = var20.getMode();
    var15.setMode(var24);
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var26 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    boolean var27 = var15.equals((java.lang.Object)var26);
    geo.google.datamodel.GeoCoordinate var28 = new geo.google.datamodel.GeoCoordinate(230.36359592033764d, Double.NaN, var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var27 == false);

  }

  public void test122() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test122");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var6 = var5.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var7 = var5.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var9 = var8.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var10 = var8.createPostBoxPostBoxNumberExtension();
    var5.setPostBoxNumberExtension(var10);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var12 = var5.getPostBoxNumberExtension();
    java.util.List var13 = var5.getAny();
    var4.setPostBox(var5);
    var4.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var17 = var4.getDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var18 = var4.getDependentLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var19 = var4.getPostBox();
    java.util.List var20 = var19.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var21 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var22 = var21.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var23 = var21.createPostOffice();
    java.util.List var24 = var23.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var25 = var23.getPostOfficeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var26 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var27 = var26.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var28 = var26.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var29 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var30 = var29.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var31 = var29.createPostBoxPostBoxNumberExtension();
    var26.setPostBoxNumberExtension(var31);
    var23.setPostBox(var26);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var34 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber();
    var26.setPostBoxNumber(var34);
    var19.setPostBoxNumber(var34);
    var34.setCode("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var34.setContent("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var41 = var34.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + "geo.google.GeoException: geo.google.GeoException: "+ "'", var41.equals("geo.google.GeoException: geo.google.GeoException: "));

  }

  public void test123() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test123");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var1 = var0.getIndicator();
    java.lang.String var2 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var4 = var3.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var5 = var3.createPostOffice();
    var0.setPostOffice(var5);
    java.lang.String var7 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var9 = var8.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var10 = var8.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var11 = var8.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var12 = var8.createAddressDetailsPostalServiceElementsKeyLineCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var13 = var8.createLocality();
    var0.setLocality(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var15 = var0.getPostalCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);

  }

  public void test124() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test124");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var3 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName var4 = var0.createAdministrativeAreaSubAdministrativeAreaSubAdministrativeAreaName();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var5 = var0.createThoroughfareNameType();
    var5.setCode("Uknown Status");
    java.lang.String var8 = var5.getType();
    var5.setType("geo.google.datamodel.GeoAddress@24493185[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test125() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test125");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    java.util.List var3 = var1.getAny();
    var1.setType("");
    var1.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.Map var8 = var1.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var9 = var1.getPremiseLocation();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test126() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test126");


    geo.google.mapping.PointToCoordinateFunctor var0 = new geo.google.mapping.PointToCoordinateFunctor();
    com.google.earth.kml._2.PointType var1 = new com.google.earth.kml._2.PointType();
    var1.setTessellate((java.lang.Boolean)true);
    var1.setExtrude((java.lang.Boolean)false);
    geo.google.datamodel.GeoCoordinate var6 = var0.execute(var1);
    com.google.earth.kml._2.PointType var7 = new com.google.earth.kml._2.PointType();
    var7.setTessellate((java.lang.Boolean)true);
    java.lang.Boolean var10 = var7.isTessellate();
    geo.google.datamodel.GeoCoordinate var11 = var0.execute(var7);
    geo.google.mapping.FunctionChain var12 = geo.google.mapping.FunctionChain.getChain((geo.google.mapping.Functor)var0);
    geo.google.mapping.FunctionChain var13 = var12.getTail();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + true+ "'", var10.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test127() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test127");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var2 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var3 = var0.createBuildingNameType();
    var3.setContent("geo.google.GeoException: ");
    java.lang.String var6 = var3.getContent();
    java.lang.String var7 = var3.getTypeOccurrence();
    var3.setType("geo.google.GeoException: ");
    java.lang.String var10 = var3.getType();
    java.lang.String var11 = var3.getContent();
    var3.setTypeOccurrence("geo.google.datamodel.GeoUsAddress@1add92c3[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@48ce4dfc[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@606200bb[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var14 = var3.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "geo.google.GeoException: "+ "'", var6.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "geo.google.GeoException: "+ "'", var10.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + "geo.google.GeoException: "+ "'", var11.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "geo.google.GeoException: "+ "'", var14.equals("geo.google.GeoException: "));

  }

  public void test128() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test128");


    com.google.earth.kml._2.ObjectFactory var0 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.KmlType var1 = new com.google.earth.kml._2.KmlType();
    javax.xml.bind.JAXBElement var2 = var0.createKml(var1);
    com.google.earth.kml._2.ObjectFactory var3 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var4 = var3.createResponseType();
    com.google.earth.kml._2.ResponseType var5 = var3.createResponseType();
    javax.xml.bind.JAXBElement var6 = var0.createResponse(var5);
    com.google.earth.kml._2.StatusType var7 = var0.createStatusType();
    com.google.earth.kml._2.ObjectFactory var8 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var9 = var8.createResponseType();
    com.google.earth.kml._2.KmlType var10 = var8.createKmlType();
    javax.xml.bind.JAXBElement var11 = var0.createKml(var10);
    com.google.earth.kml._2.KmlType var12 = var0.createKmlType();
    com.google.earth.kml._2.ResponseType var13 = var12.getResponse();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test129() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test129");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var5 = var0.createAddressDetailsPostalServiceElementsBarcode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumber var6 = var0.createPostalCodePostalCodeNumber();
    java.util.Map var7 = var6.getOtherAttributes();
    var6.setCode("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var10 = var6.getContent();
    var6.setContent("(default) Indicates to ignore an altitude specification");
    java.lang.String var13 = var6.getContent();
    var6.setCode("geo.google.GeoException: ");
    java.lang.String var16 = var6.getCode();
    java.util.Map var17 = var6.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "(default) Indicates to ignore an altitude specification"+ "'", var13.equals("(default) Indicates to ignore an altitude specification"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "geo.google.GeoException: "+ "'", var16.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);

  }

  public void test130() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test130");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var1 = var0.getAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var2 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude();
    java.util.Map var3 = var2.getOtherAttributes();
    var0.setAddressLongitude(var2);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var5 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var6 = var5.getAny();
    java.lang.String var7 = var5.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var8 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude();
    var5.setAddressLatitude(var8);
    var0.setAddressLatitude(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var12 = var11.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var13 = var11.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var14 = var11.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var15 = var11.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var16 = var11.createAddressDetailsPostalServiceElementsBarcode();
    var16.setType("G_GEO_UNKOWN_STATUS");
    var0.setBarcode(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var20 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var21 = var20.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var22 = var20.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var23 = var20.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var24 = var20.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    var0.setEndorsementLineCode(var24);
    var24.setCode("geo.google.GeoException: geo.google.GeoException: ");
    var24.setType("geo.google.datamodel.GeoAddress@20f76730[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var24.setCode("geo.google.datamodel.GeoAddress@77278fe3[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);

  }

  public void test131() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test131");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    java.lang.String var3 = var2.getType();
    var2.setContent("");
    var2.setContent("geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var8 = var2.getType();
    var2.setContent("geo.google.datamodel.GeoAddress@70027021[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test132() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test132");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var4 = var0.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var5 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var6 = var0.createSubPremiseTypeSubPremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var7 = var0.createSubPremiseType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var8 = var0.createThoroughfare();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test133() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test133");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var6 = var0.createLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var7 = var6.getPremise();
    var6.setType("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var10 = var6.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var11 = var6.getDependentLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var13 = var12.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var14 = var12.createLargeMailUserType();
    java.util.List var15 = var14.getAddressLine();
    java.util.List var16 = var14.getLargeMailUserName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var17 = var14.getPostalCode();
    var6.setLargeMailUser(var14);
    oasis.names.tc.ciq.xsdschema.xal._2.Department var19 = var14.getDepartment();
    oasis.names.tc.ciq.xsdschema.xal._2.Department var20 = var14.getDepartment();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);

  }

  public void test134() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test134");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var2 = var1.getCode();
    java.lang.String var3 = var1.getCode();
    var0.setThoroughfareTrailingType(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var5 = var0.getThoroughfarePostDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var7 = var6.getCode();
    var6.setCode("geo.google.datamodel.GeoAddress@535811d6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setThoroughfareTrailingType(var6);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var12 = var11.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var13 = var11.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var14 = var11.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var15 = var11.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var16 = var11.createThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var18 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var18.setThoroughfarePostDirection(var19);
    java.util.List var21 = var18.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var22 = var18.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var23 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var24 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var25 = var24.getCode();
    java.lang.String var26 = var24.getCode();
    var23.setThoroughfareTrailingType(var24);
    var18.setDependentThoroughfare(var23);
    var18.setDependentThoroughfaresType("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var31 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var32 = var31.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var33 = var31.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var34 = var31.createThoroughfareLeadingTypeType();
    java.lang.String var35 = var34.getType();
    var18.setThoroughfareLeadingType(var34);
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var37 = var18.getDependentLocality();
    java.lang.String var38 = var18.getDependentThoroughfaresIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var39 = var18.getThoroughfarePostDirection();
    var0.setThoroughfarePostDirection(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);

  }

  public void test135() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test135");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var1 = var0.getAny();
    java.util.List var2 = var0.getAny();
    java.util.List var3 = var0.getAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var6 = var4.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var7 = var4.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var8 = var4.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var9 = var4.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    java.util.Map var10 = var9.getOtherAttributes();
    java.lang.String var11 = var9.getCode();
    var0.setAddressLongitudeDirection(var9);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var13 = var0.getAddressLongitude();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var14 = var0.getAddressLongitude();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var15 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var17 = var16.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var18 = var16.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var19 = var18.getCode();
    java.util.Map var20 = var18.getOtherAttributes();
    var18.setCode("G_GEO_UNKOWN_STATUS");
    var15.setEndorsementLineCode(var18);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var24 = var15.getAddressLatitude();
    java.lang.String var25 = var15.getType();
    java.util.Map var26 = var15.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var27 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude();
    java.lang.String var28 = var27.getCode();
    var15.setAddressLongitude(var27);
    java.lang.String var30 = var27.getContent();
    var27.setCode("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setAddressLongitude(var27);
    java.lang.String var34 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);

  }

  public void test136() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test136");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown();
    var0.setType("(default) Indicates to ignore an altitude specification");
    java.util.List var3 = var0.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test137() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test137");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var11 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var11.setThoroughfarePostDirection(var12);
    java.util.List var14 = var11.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var15 = var11.getThoroughfareLeadingType();
    java.util.List var16 = var11.getThoroughfareNumberOrThoroughfareNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var18 = var17.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var19 = var17.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var20 = var17.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var21 = var17.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var22 = var21.getPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var23 = var21.getDependentLocalityNumber();
    var11.setDependentLocality(var21);
    var2.setThoroughfare(var11);
    java.lang.String var26 = var2.getType();
    java.util.List var27 = var2.getAddressLine();
    java.util.List var28 = var2.getBuildingName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);

  }

  public void test138() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test138");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var5 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var6 = var0.createAddressDetailsPostalServiceElementsBarcode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test139() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test139");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var2 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var4 = var0.createAddressLinesType();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var5 = var0.createSubPremiseTypeSubPremiseNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test140() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test140");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var2 = var0.createSubPremiseTypeSubPremiseName();
    var2.setType("");
    var2.setContent("geo.google.GeoException: ");
    java.lang.String var7 = var2.getCode();
    java.lang.String var8 = var2.getType();
    var2.setType("geo.google.GeoException: , geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n],  UNKNOWN_LOCATION");
    var2.setCode("geo.google.datamodel.GeoUsAddress@ed45e29[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@1871dd5a[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@5b7b4c3f[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));

  }

  public void test141() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test141");


    geo.google.datamodel.GeoCoordinate var14 = new geo.google.datamodel.GeoCoordinate();
    double var15 = var14.getLongitude();
    geo.google.datamodel.GeoCoordinate var16 = new geo.google.datamodel.GeoCoordinate();
    double var17 = var16.getLongitude();
    double var18 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var14, var16);
    double var19 = var16.getLatitude();
    var16.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var23 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var24 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var16, var23);
    geo.google.datamodel.GeoAddressAccuracy var26 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var27 = var26.getName();
    geo.google.datamodel.GeoUsAddress var28 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: hi!", "(default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.GeoException: ", "", "UNKNOWN_LOCATION", var16, var26);
    var28.setState("");
    java.lang.String var31 = var28.getCounty();
    var28.setCounty("geo.google.GeoException: hi!");
    java.lang.String var34 = var28.getCounty();
    geo.google.datamodel.GeoAddressAccuracy var36 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var37 = var36.getName();
    int var38 = var36.getCode();
    java.lang.String var39 = var36.toString();
    var28.setAccuracy(var36);
    java.lang.String var41 = var28.getPostalCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "UNKNOWN_LOCATION"+ "'", var27.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "Uknown Status"+ "'", var31.equals("Uknown Status"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "geo.google.GeoException: hi!"+ "'", var34.equals("geo.google.GeoException: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "UNKNOWN_LOCATION"+ "'", var37.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var39 + "' != '" + "UNKNOWN_LOCATION"+ "'", var39.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var41 + "' != '" + ""+ "'", var41.equals(""));

  }

  public void test142() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test142");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var4 = var0.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var5 = var0.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var6 = var0.createAddressDetailsPostalServiceElementsKeyLineCode();
    java.util.Map var7 = var6.getOtherAttributes();
    java.lang.String var8 = var6.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test143() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test143");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var2 = var1.getMailStopNumber();
    java.util.Map var3 = var1.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var4 = var1.getMailStopNumber();
    java.util.List var5 = var1.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test144() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test144");


    geo.google.datamodel.GeoCoordinate var0 = new geo.google.datamodel.GeoCoordinate();
    double var1 = var0.getLongitude();
    geo.google.datamodel.GeoCoordinate var2 = new geo.google.datamodel.GeoCoordinate();
    double var3 = var2.getLongitude();
    double var4 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var0, var2);
    geo.google.datamodel.GeoCoordinate var5 = new geo.google.datamodel.GeoCoordinate();
    double var6 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var0, var5);
    geo.google.datamodel.GeoCoordinate var7 = new geo.google.datamodel.GeoCoordinate();
    double var8 = var7.getLongitude();
    geo.google.datamodel.GeoCoordinate var9 = new geo.google.datamodel.GeoCoordinate();
    double var10 = var9.getLongitude();
    double var11 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var7, var9);
    geo.google.datamodel.GeoAltitude var12 = var9.getAltitude();
    double var13 = var5.distanceTo(var9);
    var5.setLatitude(10.0d);
    geo.google.datamodel.GeoCoordinate var16 = var5.clone();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);

  }

  public void test145() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test145");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var3 = var0.createAddressDetailsCountry();
    java.util.List var4 = var3.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var5 = var3.getLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var6 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var7 = var6.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var8 = var6.getPostalCode();
    var3.setLocality(var6);
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var10 = var6.getDependentLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var11 = var6.getDependentLocality();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test146() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test146");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var3 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var4 = var0.createPostBoxPostBoxNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserName var5 = var0.createLargeMailUserTypeLargeMailUserName();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var6 = var0.createXAL();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo var7 = var0.createPremisePremiseNumberRangePremiseNumberRangeTo();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumber var8 = var0.createPostalCodePostalCodeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var9 = var0.createLocalityLocalityName();
    java.lang.String var10 = var9.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test147() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test147");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var3 = var0.getThoroughfarePostDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var5 = var4.getCode();
    java.lang.String var6 = var4.getCode();
    var0.setThoroughfareTrailingType(var4);
    java.util.List var8 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var10 = var9.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var11 = var9.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var12 = var9.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var13 = var9.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var14 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var15 = var14.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var16 = var14.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var18 = var17.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var19 = var17.createPostBoxPostBoxNumberExtension();
    var14.setPostBoxNumberExtension(var19);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var21 = var14.getPostBoxNumberExtension();
    java.util.List var22 = var14.getAny();
    var13.setPostBox(var14);
    var13.setType("");
    var0.setDependentLocality(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var28 = var27.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var29 = var27.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var30 = var27.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var31 = var27.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var32 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var33 = var32.getAddressLine();
    java.util.List var34 = var32.getAny();
    var31.setPostBox(var32);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var36 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var31.setPostBox(var36);
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var38 = var31.getDependentLocalityNumber();
    var13.setDependentLocality(var31);
    var31.setUsageType("G_GEO_UNKOWN_STATUS");
    java.lang.String var42 = var31.getUsageType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var43 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var44 = var43.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var45 = var43.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var46 = var43.createAddressDetailsPostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var47 = var43.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var48 = var43.createDependentLocalityTypeDependentLocalityNumber();
    var31.setDependentLocalityNumber(var48);
    java.util.List var50 = var31.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var42 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var42.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);

  }

  public void test148() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test148");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var2 = var0.getAddressLines();
    var0.setUsage("");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var7 = var0.getPostalServiceElements();
    var0.setCurrentStatus("geo.google.GeoException: geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var11 = var10.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var12 = var10.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var13 = var10.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var14 = var10.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var15 = var10.createAddressLinesType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var16 = var10.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var17 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var18 = var17.getIndicator();
    java.util.Map var19 = var17.getOtherAttributes();
    var16.setAdministrativeArea(var17);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var21 = var16.getThoroughfare();
    var0.setCountry(var16);
    java.util.List var23 = var16.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var24 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var25 = var24.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var26 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var27 = var26.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var28 = var26.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var29 = var26.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var30 = var29.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var31 = var29.getPostOffice();
    java.lang.String var32 = var29.getUsageType();
    java.util.List var33 = var29.getAddressLine();
    var24.setSubAdministrativeArea(var29);
    java.lang.String var35 = var24.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var36 = var24.getSubAdministrativeArea();
    var24.setType("geo.google.GeoException: hi!");
    var16.setAdministrativeArea(var24);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var40 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var41 = var40.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var42 = var40.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var43 = var40.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var44 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var45 = var44.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var46 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var47 = var46.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var48 = var46.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var49 = var46.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var50 = var49.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var51 = var49.getPostOffice();
    java.lang.String var52 = var49.getUsageType();
    java.util.List var53 = var49.getAddressLine();
    var44.setSubAdministrativeArea(var49);
    java.lang.String var55 = var44.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var56 = var44.getPostalCode();
    var43.setAdministrativeArea(var44);
    java.util.List var58 = var43.getCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var59 = var43.getAdministrativeArea();
    var16.setAdministrativeArea(var59);
    java.lang.String var61 = var59.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);

  }

  public void test149() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test149");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoCoordinate var1 = geo.google.mapping.MappingUtils.stringToCoordinate("(default) Indicates to ignore an altitude specification");
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }

  }

  public void test150() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test150");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseName var3 = var0.createPremisePremiseName();
    var3.setCode("");
    java.util.Map var6 = var3.getOtherAttributes();
    java.util.Map var7 = var3.getOtherAttributes();
    var3.setType("");
    java.lang.String var10 = var3.getTypeOccurrence();
    var3.setContent("geo.google.GeoException: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test151() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test151");


    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var1 = var0.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var2 = var0.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var4 = var3.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var5 = var3.createPostBoxPostBoxNumberExtension();
    var0.setPostBoxNumberExtension(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var8 = var7.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var9 = var7.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var10 = var7.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var11 = var7.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var12 = var7.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var13 = var7.createFirmType();
    java.util.List var14 = var13.getFirmName();
    var0.setFirm(var13);
    var0.setIndicator("hi!");
    var0.setIndicator("G_GEO_UNKOWN_STATUS");
    java.util.List var20 = var0.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);

  }

  public void test152() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test152");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var5 = var0.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var6 = var0.createBuildingNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberPrefix var7 = var0.createPremiseNumberPrefix();
    java.lang.String var8 = var7.getValue();
    var7.setType("geo.google.datamodel.GeoAddress@6921ddb6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test153() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test153");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var1 = var0.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var3 = var2.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var4 = var2.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var5 = var2.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var6 = var5.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var7 = var5.getPostOffice();
    java.lang.String var8 = var5.getUsageType();
    java.util.List var9 = var5.getAddressLine();
    var0.setSubAdministrativeArea(var5);
    java.lang.String var11 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var13 = var12.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var14 = var12.createPostOffice();
    java.util.List var15 = var14.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var16 = var14.getPostOfficeNumber();
    var14.setType("G_GEO_UNKOWN_STATUS");
    java.util.List var19 = var14.getAny();
    java.util.List var20 = var14.getPostOfficeName();
    var0.setPostOffice(var14);
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var22 = var0.getPostOffice();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);

  }

  public void test154() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test154");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    java.util.List var3 = var1.getAny();
    var1.setType("");
    var1.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var8 = var1.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var10 = var9.createPremise();
    java.util.List var11 = var10.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var12 = var10.getFirm();
    var10.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var15 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var16 = var15.createPremise();
    java.lang.String var17 = var16.getPremiseThoroughfareConnector();
    var10.setPremise(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var20 = var19.createPremise();
    java.lang.String var21 = var20.getPremiseThoroughfareConnector();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var22 = new oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation();
    var20.setPremiseLocation(var22);
    var10.setPremiseLocation(var22);
    var1.setPremiseLocation(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);

  }

  public void test155() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test155");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownName var2 = var0.createPostalCodePostTownPostTownName();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType.FirmName var3 = var0.createFirmTypeFirmName();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var4 = var0.createAddressDetailsPostalServiceElementsBarcode();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber var5 = var0.createThoroughfareNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberSuffix var6 = var0.createSubPremiseTypeSubPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var7 = var0.createAddressLinesType();
    java.util.Map var8 = var7.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test156() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test156");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    var4.setCode("hi!");
    java.lang.String var7 = var4.getCode();
    java.util.Map var8 = var4.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test157() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test157");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    java.util.List var3 = var1.getAny();
    var1.setType("");
    java.util.List var6 = var1.getPremiseNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test158() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test158");


    com.google.earth.kml._2.PlacemarkType var0 = new com.google.earth.kml._2.PlacemarkType();
    var0.setAddress("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var3 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    java.lang.String var4 = var3.getValidToDate();
    var3.setAddressDetailsKey("hi!");
    var0.setAddressDetails(var3);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var8 = var0.getAddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var9 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var9.setThoroughfarePostDirection(var10);
    java.util.List var12 = var9.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var13 = var9.getThoroughfareLeadingType();
    java.util.List var14 = var9.getThoroughfareNumberOrThoroughfareNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var15 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var16 = var15.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var17 = var15.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var18 = var15.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var19 = var15.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var20 = var19.getPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var21 = var19.getDependentLocalityNumber();
    var9.setDependentLocality(var19);
    java.lang.String var23 = var9.getType();
    java.util.Map var24 = var9.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var25 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var25.setType("hi!");
    var9.setThoroughfarePostDirection(var25);
    var8.setThoroughfare(var9);
    java.util.List var30 = var9.getThoroughfareNumberPrefix();
    java.lang.String var31 = var9.getDependentThoroughfaresType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);

  }

  public void test159() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test159");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var2 = var0.getAddressLines();
    var0.setUsage("");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var7 = var0.getPostalServiceElements();
    var0.setCurrentStatus("geo.google.GeoException: geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var11 = var10.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var12 = var10.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var13 = var10.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var14 = var10.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var15 = var10.createAddressLinesType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var16 = var10.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var17 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var18 = var17.getIndicator();
    java.util.Map var19 = var17.getOtherAttributes();
    var16.setAdministrativeArea(var17);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var21 = var16.getThoroughfare();
    var0.setCountry(var16);
    java.util.List var23 = var16.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var24 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var25 = var24.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var26 = var24.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var27 = var24.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var28 = var24.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var29 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var30 = var29.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var31 = var29.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var32 = var29.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var33 = var29.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var34 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var35 = var34.createPremise();
    java.lang.String var36 = var35.getPremiseThoroughfareConnector();
    java.util.List var37 = var35.getAny();
    java.util.List var38 = var35.getPremiseName();
    var33.setPremise(var35);
    var28.setThoroughfare(var33);
    java.lang.String var41 = var33.getDependentThoroughfaresType();
    var16.setThoroughfare(var33);
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var43 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var44 = var43.getPostOffice();
    java.lang.String var45 = var43.getUsageType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var46 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var47 = var46.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var48 = var46.createPostOffice();
    java.util.List var49 = var48.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var50 = new oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber();
    var50.setIndicator("hi!");
    java.lang.String var53 = var50.getContent();
    var48.setPostOfficeNumber(var50);
    var43.setPostOffice(var48);
    var16.setLocality(var43);
    java.lang.String var57 = var43.getIndicator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var57);

  }

  public void test160() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test160");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier();
    var0.setContent("G_GEO_UNKOWN_STATUS");
    java.lang.String var3 = var0.getType();
    var0.setContent("");
    var0.setType("geo.google.datamodel.GeoAddress@1dd53212[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var8 = var0.getOtherAttributes();
    java.util.Map var9 = var0.getOtherAttributes();
    var0.setIdentifierType("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test161() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test161");


    oasis.names.tc.ciq.xsdschema.xal._2.FirmType.FirmName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.FirmType.FirmName();
    var0.setCode("Uknown Status");
    java.util.Map var3 = var0.getOtherAttributes();
    java.lang.String var4 = var0.getContent();
    var0.setContent("G_GEO_UNKOWN_STATUS");
    var0.setCode("geo.google.GeoException: , geo.google.GeoException: hi!,  CLAMP_TO_GROUND");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test162() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test162");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var1 = var0.getAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var2 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude();
    java.util.Map var3 = var2.getOtherAttributes();
    var0.setAddressLongitude(var2);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var5 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var6 = var5.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var8 = var7.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var9 = var7.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var10 = var9.getCode();
    java.util.Map var11 = var9.getOtherAttributes();
    var9.setCode("G_GEO_UNKOWN_STATUS");
    var5.setEndorsementLineCode(var9);
    java.util.Map var15 = var9.getOtherAttributes();
    var0.setEndorsementLineCode(var9);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var18 = var17.createAddressDetailsPostalServiceElementsSortingCode();
    var18.setType("geo.google.datamodel.GeoAddress@12dfb6a6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setSortingCode(var18);
    var18.setType("geo.google.datamodel.GeoAddress@4244bb8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);

  }

  public void test163() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test163");


    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber();
    var0.setType("G_GEO_UNKOWN_STATUS");
    java.lang.String var3 = var0.getType();
    var0.setNumberTypeOccurrence("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setNumberTypeOccurrence("(default) Indicates to ignore an altitude specification");
    java.lang.String var8 = var0.getIndicatorOccurrence();
    var0.setIndicator("geo.google.datamodel.GeoAddress@535811d6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var3.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test164() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test164");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseName var3 = var0.createPremisePremiseName();
    var3.setContent("");
    java.lang.String var6 = var3.getCode();
    var3.setType("G_GEO_UNKOWN_STATUS");
    var3.setCode("geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var11 = var3.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + ""+ "'", var11.equals(""));

  }

  public void test165() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test165");


    geo.google.datamodel.GeoCoordinate var14 = new geo.google.datamodel.GeoCoordinate();
    double var15 = var14.getLongitude();
    geo.google.datamodel.GeoCoordinate var16 = new geo.google.datamodel.GeoCoordinate();
    double var17 = var16.getLongitude();
    double var18 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var14, var16);
    double var19 = var16.getLatitude();
    var16.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var23 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var24 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var16, var23);
    geo.google.datamodel.GeoAddressAccuracy var26 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var27 = var26.getName();
    geo.google.datamodel.GeoUsAddress var28 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: hi!", "(default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.GeoException: ", "", "UNKNOWN_LOCATION", var16, var26);
    java.lang.String var29 = var28.getCounty();
    var28.setCity("geo.google.datamodel.GeoAddress@2ea7c82[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "UNKNOWN_LOCATION"+ "'", var27.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + "Uknown Status"+ "'", var29.equals("Uknown Status"));

  }

  public void test166() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test166");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var5 = var0.createLargeMailUserTypeLargeMailUserIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var6 = var0.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var7 = var0.createLargeMailUserTypeLargeMailUserIdentifier();
    java.lang.String var8 = var7.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test167() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test167");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var3 = var0.createAddressDetailsCountry();
    java.util.List var4 = var3.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var5 = var3.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var6 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var7 = var6.getIndicator();
    java.lang.String var8 = var6.getType();
    java.lang.String var9 = var6.getUsageType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var11 = var10.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var12 = var10.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var13 = var10.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var14 = var13.getType();
    var6.setSubAdministrativeArea(var13);
    var3.setAdministrativeArea(var6);
    java.util.Map var17 = var6.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);

  }

  public void test168() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test168");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var1 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var1.setThoroughfarePostDirection(var2);
    java.util.List var4 = var1.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var5 = var1.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var1.getPostalCode();
    var0.setThoroughfare(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var8 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var9 = var8.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var10 = var8.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var12 = var11.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var13 = var11.createPostBoxPostBoxNumberExtension();
    var8.setPostBoxNumberExtension(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var15 = var8.getPostBoxNumberExtension();
    java.util.List var16 = var8.getAny();
    var0.setPostBox(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var18 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var20 = var19.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var21 = var19.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var22 = var19.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var23 = var19.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var24 = var19.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var25 = var19.createFirmType();
    var18.setFirm(var25);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var28 = var27.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var29 = var27.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var30 = var27.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var31 = var27.createThoroughfare();
    java.util.List var32 = var31.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var33 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var34 = var33.getPostTown();
    var31.setPostalCode(var33);
    var25.setPostalCode(var33);
    var8.setFirm(var25);
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var38 = var25.getMailStop();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var39 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var40 = var39.createPremise();
    java.util.List var41 = var40.getAddressLine();
    java.util.List var42 = var40.getAny();
    var40.setType("");
    var40.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var47 = var40.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var48 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var49 = var48.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var50 = var48.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var51 = var48.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var52 = var48.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var53 = var48.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var54 = var48.createFirmType();
    var40.setFirm(var54);
    java.util.List var56 = var54.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var57 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var58 = var57.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var59 = var57.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var60 = var57.createPostalCode();
    var54.setPostalCode(var60);
    var25.setPostalCode(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);

  }

  public void test169() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test169");


    geo.google.datamodel.GeoUsAddress var0 = new geo.google.datamodel.GeoUsAddress();
    var0.setCounty("geo.google.datamodel.GeoAddress@70027021[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var3 = var0.getAddressLine2();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));

  }

  public void test170() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test170");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var1 = var0.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var3 = var2.createPremise();
    java.util.List var4 = var3.getAddressLine();
    java.util.List var5 = var3.getAny();
    var3.setType("");
    var3.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var10 = var3.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var12 = var11.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var13 = var11.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var14 = var11.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var15 = var11.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var16 = var11.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var17 = var11.createFirmType();
    var3.setFirm(var17);
    java.util.List var19 = var17.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var20 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var21 = var20.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var22 = var20.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var23 = var20.createPostalCode();
    var17.setPostalCode(var23);
    java.util.List var25 = var23.getAddressLine();
    var0.setPostalCode(var23);
    java.lang.String var27 = var0.getUsageType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);

  }

  public void test171() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test171");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    var5.setType("geo.google.GeoException: ");
    java.lang.String var8 = var5.getIndicator();
    var5.setType("UNKNOWN_LOCATION");
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom var11 = var5.getPremiseNumberRangeFrom();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo var12 = var5.getPremiseNumberRangeTo();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test172() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test172");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var5 = var0.createThoroughfarePostDirectionType();
    var5.setCode("geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test173() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test173");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var2 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var3 = var0.createBuildingNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var4 = var0.createXAL();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityName var5 = var0.createDependentLocalityTypeDependentLocalityName();
    var5.setCode("geo.google.datamodel.GeoAddress@3efdbe46[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var5.setContent("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test174() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test174");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var4 = var0.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType.FirmName var5 = var0.createFirmTypeFirmName();
    java.lang.String var6 = var5.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test175() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test175");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var6 = var5.getAddressLine();
    java.util.List var7 = var5.getAny();
    var4.setPostBox(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var9 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var4.setPostBox(var9);
    java.lang.String var11 = var4.getConnector();
    var4.setUsageType("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var14 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var15 = var14.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var16 = var14.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var18 = var17.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var19 = var17.createPostBoxPostBoxNumberExtension();
    var14.setPostBoxNumberExtension(var19);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var21 = var14.getPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberPrefix var22 = var14.getPostBoxNumberPrefix();
    var4.setPostBox(var14);
    java.lang.String var24 = var4.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);

  }

  public void test176() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test176");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address();
    java.lang.String var1 = var0.getContent();
    java.lang.String var2 = var0.getCode();
    java.lang.String var3 = var0.getContent();
    var0.setCode("geo.google.datamodel.GeoAddress@a2afc72[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test177() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test177");


    oasis.names.tc.ciq.xsdschema.xal._2.FirmType.FirmName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.FirmType.FirmName();
    var0.setCode("Uknown Status");
    java.util.Map var3 = var0.getOtherAttributes();
    java.lang.String var4 = var0.getContent();
    java.lang.String var5 = var0.getCode();
    java.util.Map var6 = var0.getOtherAttributes();
    var0.setCode("geo.google.datamodel.GeoAddress@bb4d8b3[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var9 = var0.getContent();
    java.lang.String var10 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "Uknown Status"+ "'", var5.equals("Uknown Status"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test178() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test178");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown();
    var0.setType("hi!");
    java.util.Map var3 = var0.getOtherAttributes();
    java.util.List var4 = var0.getAddressLine();
    java.util.Map var5 = var0.getOtherAttributes();
    java.lang.String var6 = var0.getType();
    java.util.List var7 = var0.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "hi!"+ "'", var6.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test179() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test179");


    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber();
    var0.setNumberType("geo.google.GeoException: geo.google.GeoException: ");
    var0.setType("");
    java.lang.String var5 = var0.getNumberTypeOccurrence();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test180() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test180");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var2 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    java.lang.String var4 = var3.getTypeOccurrence();
    java.util.Map var5 = var3.getOtherAttributes();
    java.lang.String var6 = var3.getTypeOccurrence();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test181() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test181");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var5 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var6 = var5.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var7 = var5.getAddressLines();
    var5.setUsage("");
    javax.xml.bind.JAXBElement var10 = var0.createAddressDetails(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var11 = var0.createPostOffice();
    java.util.Map var12 = var11.getOtherAttributes();
    var11.setIndicator("geo.google.datamodel.GeoAddress@79386135[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test182() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test182");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLine var4 = var0.createAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var5 = var0.createPostBoxPostBoxNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData var6 = var0.createAddressDetailsPostalServiceElementsSupplementaryPostalServiceData();
    var6.setType("geo.google.datamodel.GeoAddress@41778a2e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var9 = var6.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test183() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test183");


    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName();
    java.lang.String var1 = var0.getCode();
    java.util.Map var2 = var0.getOtherAttributes();
    java.lang.String var3 = var0.getType();
    java.lang.String var4 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test184() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test184");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var1 = var0.getIndicator();
    java.util.Map var2 = var0.getOtherAttributes();
    var0.setUsageType("(default) Indicates to ignore an altitude specification");
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var5 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var6 = var5.getIndicator();
    java.lang.String var7 = var5.getType();
    java.lang.String var8 = var5.getUsageType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var10 = var9.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var11 = var9.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var12 = var9.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var13 = var12.getType();
    var5.setSubAdministrativeArea(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var15 = var5.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var16 = var5.getSubAdministrativeArea();
    var0.setSubAdministrativeArea(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var18 = var0.getSubAdministrativeArea();
    java.util.List var19 = var18.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);

  }

  public void test185() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test185");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var3 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName var4 = var0.createAdministrativeAreaSubAdministrativeAreaSubAdministrativeAreaName();
    java.lang.String var5 = var4.getCode();
    java.util.Map var6 = var4.getOtherAttributes();
    java.lang.String var7 = var4.getType();
    var4.setType("geo.google.datamodel.GeoAddress@35e7c9a0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test186() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test186");


    geo.google.datamodel.GeoCoordinate var7 = new geo.google.datamodel.GeoCoordinate();
    double var8 = var7.getLongitude();
    geo.google.datamodel.GeoCoordinate var9 = new geo.google.datamodel.GeoCoordinate();
    double var10 = var9.getLongitude();
    double var11 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var7, var9);
    double var12 = var9.getLatitude();
    var9.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var16 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var17 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var9, var16);
    java.lang.String var18 = var17.toAddressLine();
    var17.setCountry("geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var17.setCity("geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var23 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var24 = var23.getCode();
    java.lang.String var25 = var23.getCode();
    boolean var26 = var17.equals((java.lang.Object)var23);
    var23.setType("geo.google.datamodel.GeoUsAddress@7aed26c6[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@678cd036[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@4db9be56[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "geo.google.GeoException: , geo.google.GeoException: hi!,  UNKNOWN_LOCATION"+ "'", var18.equals("geo.google.GeoException: , geo.google.GeoException: hi!,  UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == false);

  }

  public void test187() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test187");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown();
    java.util.List var1 = var0.getAddressLine();
    java.util.List var2 = var0.getPostTownName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.getPostTownSuffix();
    java.util.List var4 = var0.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test188() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test188");


    geo.google.datamodel.GeoUsAddress var0 = new geo.google.datamodel.GeoUsAddress();
    var0.setCounty("geo.google.datamodel.GeoAddress@70027021[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var3 = var0.getCountry();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + ""+ "'", var3.equals(""));

  }

  public void test189() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test189");


    geo.google.datamodel.GeoCoordinate var14 = new geo.google.datamodel.GeoCoordinate();
    double var15 = var14.getLongitude();
    geo.google.datamodel.GeoCoordinate var16 = new geo.google.datamodel.GeoCoordinate();
    double var17 = var16.getLongitude();
    double var18 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var14, var16);
    double var19 = var16.getLatitude();
    var16.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var23 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var24 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var16, var23);
    geo.google.datamodel.GeoAddressAccuracy var26 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var27 = var26.getName();
    geo.google.datamodel.GeoUsAddress var28 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: hi!", "(default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.GeoException: ", "", "UNKNOWN_LOCATION", var16, var26);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var29 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var30 = var29.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var31 = var29.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var32 = var29.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var33 = var29.createPostBoxPostBoxNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserName var34 = var29.createLargeMailUserTypeLargeMailUserName();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var35 = var29.createXAL();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo var36 = var29.createPremisePremiseNumberRangePremiseNumberRangeTo();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var37 = var29.createAddressDetailsPostalServiceElementsSortingCode();
    boolean var38 = var28.equals((java.lang.Object)var37);
    var28.setPostalCode("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var28.setState("geo.google.GeoException: hi!");
    var28.setAddressLine2("geo.google.GeoException: hi!");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "UNKNOWN_LOCATION"+ "'", var27.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var38 == false);

  }

  public void test190() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test190");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var4 = var0.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var5 = var0.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var6 = var0.createAddressDetailsPostalServiceElementsKeyLineCode();
    java.lang.String var7 = var6.getType();
    java.lang.String var8 = var6.getContent();
    var6.setContent("geo.google.datamodel.GeoUsAddress@54eece10[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@a1aa800[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@5c0b9d2e[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test191() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test191");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var6 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var7 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var8 = var0.createPostalCodePostTown();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLine var9 = var0.createAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var10 = var0.createThoroughfare();
    var10.setDependentThoroughfaresType("hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var13 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var14 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var15 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var14.setThoroughfarePostDirection(var15);
    java.util.List var17 = var14.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var18 = var14.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var19 = var14.getPostalCode();
    var13.setThoroughfare(var14);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var21 = var13.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var22 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var23 = var22.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var24 = var22.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var25 = var22.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var26 = var22.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var28 = var27.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var29 = var27.createPostOffice();
    java.util.List var30 = var29.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var31 = new oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber();
    var31.setIndicator("hi!");
    java.lang.String var34 = var31.getContent();
    var29.setPostOfficeNumber(var31);
    var26.setPostOffice(var29);
    var13.setDependentLocality(var26);
    java.util.List var38 = var26.getAny();
    var10.setDependentLocality(var26);
    var10.setDependentThoroughfaresIndicator("geo.google.datamodel.GeoAddress@49e11d13[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);

  }

  public void test192() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test192");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var1 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var1.setThoroughfarePostDirection(var2);
    java.util.List var4 = var1.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var5 = var1.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var7 = var6.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var8 = var6.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var9 = var6.createThoroughfareLeadingTypeType();
    java.lang.String var10 = var9.getType();
    var1.setThoroughfareLeadingType(var9);
    var9.setType("geo.google.datamodel.GeoAddress@357d260d[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var14 = var9.getOtherAttributes();
    var0.setThoroughfareLeadingType(var9);
    var9.setType("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  (default) Indicates to ignore an altitude specification");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);

  }

  public void test193() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test193");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var3 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName var4 = var0.createAdministrativeAreaSubAdministrativeAreaSubAdministrativeAreaName();
    var4.setType("(default) Indicates to ignore an altitude specification");
    var4.setCode("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var9 = var4.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "(default) Indicates to ignore an altitude specification"+ "'", var9.equals("(default) Indicates to ignore an altitude specification"));

  }

  public void test194() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test194");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var5 = var0.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var6 = var0.createBuildingNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberPrefix var7 = var0.createPremiseNumberPrefix();
    java.util.Map var8 = var7.getOtherAttributes();
    java.lang.String var9 = var7.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test195() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test195");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var1 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var1.setThoroughfarePostDirection(var2);
    java.util.List var4 = var1.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var5 = var1.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var1.getPostalCode();
    var0.setThoroughfare(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var9 = var8.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var10 = var8.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var11 = var8.createAdministrativeAreaSubAdministrativeArea();
    java.util.List var12 = var11.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var14 = var13.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var15 = var13.createPostOffice();
    java.util.List var16 = var15.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var17 = var15.getPostOfficeNumber();
    var15.setType("G_GEO_UNKOWN_STATUS");
    java.util.List var20 = var15.getPostOfficeName();
    var11.setPostOffice(var15);
    java.util.List var22 = var15.getPostOfficeName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var23 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var24 = var23.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var25 = var23.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var26 = var23.createPostOfficePostOfficeNumber();
    var26.setContent("Uknown Status");
    var15.setPostOfficeNumber(var26);
    var0.setPostOffice(var15);
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var31 = new oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType();
    var31.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.Department var34 = var31.getDepartment();
    var0.setLargeMailUser(var31);
    java.util.Map var36 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);

  }

  public void test196() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test196");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var4 = var3.createPremise();
    var1.setPremise(var4);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var4.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var7 = var4.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var9 = var8.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var10 = var8.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var11 = var8.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var12 = var8.createPremisePremiseLocation();
    var4.setPremiseLocation(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var15 = var14.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var16 = var14.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var17 = var14.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var18 = var17.getType();
    java.util.List var19 = var17.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var20 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var21 = var20.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var22 = var20.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var23 = var20.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var24 = var20.createThoroughfare();
    java.util.List var25 = var24.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var26 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var27 = var26.getPostTown();
    var24.setPostalCode(var26);
    var17.setPostalCode(var26);
    var26.setType("(default) Indicates to ignore an altitude specification");
    var4.setPostalCode(var26);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var33 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var34 = var33.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var35 = var33.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var36 = var33.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var37 = var33.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var38 = var33.createPremisePremiseNumberRange();
    java.lang.String var39 = var38.getSeparator();
    var38.setSeparator("geo.google.GeoException: ");
    var4.setPremiseNumberRange(var38);
    java.lang.String var43 = var38.getRangeType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);

  }

  public void test197() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test197");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var4 = var0.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var5 = var0.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var6 = var0.createAddressDetailsPostalServiceElementsKeyLineCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownName var7 = var0.createPostalCodePostTownPostTownName();
    var7.setType("(default) Indicates to ignore an altitude specification");
    java.util.Map var10 = var7.getOtherAttributes();
    var7.setContent("geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var13 = var7.getType();
    var7.setContent("geo.google.datamodel.GeoAddress@2eda413f[\n  _coordinate=<null>\n  _addressDetails=oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails@7af1a720\n  _addressLine=geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "(default) Indicates to ignore an altitude specification"+ "'", var13.equals("(default) Indicates to ignore an altitude specification"));

  }

  public void test198() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test198");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var3 = var0.getThoroughfarePostDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var5 = var4.getCode();
    java.lang.String var6 = var4.getCode();
    var0.setThoroughfareTrailingType(var4);
    java.util.List var8 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var10 = var9.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var11 = var9.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var12 = var9.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var13 = var9.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var14 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var15 = var14.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var16 = var14.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var18 = var17.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var19 = var17.createPostBoxPostBoxNumberExtension();
    var14.setPostBoxNumberExtension(var19);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var21 = var14.getPostBoxNumberExtension();
    java.util.List var22 = var14.getAny();
    var13.setPostBox(var14);
    var13.setType("");
    var0.setDependentLocality(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var28 = var27.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var29 = var27.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var30 = var27.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var31 = var27.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var32 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var33 = var32.getAddressLine();
    java.util.List var34 = var32.getAny();
    var31.setPostBox(var32);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var36 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var31.setPostBox(var36);
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var38 = var31.getDependentLocalityNumber();
    var13.setDependentLocality(var31);
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var40 = var31.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var41 = var31.getDependentLocalityNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);

  }

  public void test199() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test199");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.earth.kml._2.AltitudeModeType var1 = com.google.earth.kml._2.AltitudeModeType.valueOf("geo.google.datamodel.GeoAddress@1b2ac007[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test200() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test200");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var5 = var0.createAddressLinesType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var6 = var0.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var7 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var8 = var7.getIndicator();
    java.util.Map var9 = var7.getOtherAttributes();
    var6.setAdministrativeArea(var7);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var11 = var6.getThoroughfare();
    java.util.List var12 = var6.getCountryName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test201() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test201");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    var0.setSeparator("Uknown Status");
    java.lang.String var3 = var0.getIndicator();
    java.lang.String var4 = var0.getType();
    var0.setCode("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var7 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var7.equals("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test202() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test202");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var3 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName var4 = var0.createAdministrativeAreaSubAdministrativeAreaSubAdministrativeAreaName();
    var4.setCode("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var4.setContent("geo.google.GeoException: , geo.google.GeoException: hi!,  CLAMP_TO_GROUND");
    var4.setType("geo.google.datamodel.GeoAddress@2c8fa0b9[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test203() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test203");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var1 = var0.getAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var2 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude();
    java.util.Map var3 = var2.getOtherAttributes();
    var0.setAddressLongitude(var2);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var5 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var6 = var5.getAny();
    java.lang.String var7 = var5.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var8 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude();
    var5.setAddressLatitude(var8);
    var0.setAddressLatitude(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var12 = var11.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var13 = var11.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var14 = var11.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var15 = var11.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var16 = var11.createAddressDetailsPostalServiceElementsBarcode();
    var16.setType("G_GEO_UNKOWN_STATUS");
    var0.setBarcode(var16);
    var16.setType("geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var22 = var16.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);

  }

  public void test204() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test204");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var5 = var0.createAddressDetailsPostalServiceElementsBarcode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownName var6 = var0.createPostalCodePostTownPostTownName();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var7 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownName var8 = var0.createPostalCodePostTownPostTownName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserName var9 = var0.createLargeMailUserTypeLargeMailUserName();
    var9.setType("geo.google.datamodel.GeoAddress@4d2d0080[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test205() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test205");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var2 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var4 = var0.createSubPremiseTypeSubPremiseNumber();
    var4.setIndicator("hi!");
    java.lang.String var7 = var4.getIndicatorOccurrence();
    java.lang.String var8 = var4.getPremiseNumberSeparator();
    var4.setNumberTypeOccurrence("geo.google.datamodel.GeoAddress@2c8fa0b9[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var4.setContent("geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var4.setPremiseNumberSeparator("geo.google.datamodel.GeoAddress@24493185[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test206() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test206");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var2 = var0.getAddressLines();
    var0.setUsage("");
    var0.setUsage("hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var7 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var7.setThoroughfarePostDirection(var8);
    java.util.List var10 = var7.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var11 = var7.getThoroughfareLeadingType();
    var0.setThoroughfare(var7);
    java.lang.String var13 = var0.getValidFromDate();
    var0.setCurrentStatus("geo.google.GeoException: , geo.google.GeoException: hi!,  geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test207() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test207");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    var0.setNumberRangeOccurrence("geo.google.GeoException: geo.google.GeoException: ");
    var0.setType("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var6 = var5.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownName var7 = var5.createPostalCodePostTownPostTownName();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType.FirmName var8 = var5.createFirmTypeFirmName();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var9 = var5.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    var0.setThoroughfareNumberTo(var9);
    var0.setType("UNKNOWN_LOCATION");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test208() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test208");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityName();
    java.lang.String var1 = var0.getCode();
    java.lang.String var2 = var0.getCode();
    var0.setCode("hi!");
    var0.setContent("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setType("geo.google.GeoException: geo.google.GeoException: ");
    var0.setType("G_GEO_UNKOWN_STATUS, geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n] geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);

  }

  public void test209() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test209");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    java.util.List var3 = var2.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var4 = var2.getPostOfficeNumber();
    var2.setType("G_GEO_UNKOWN_STATUS");
    java.util.List var7 = var2.getPostOfficeName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var8 = var2.getPostalRoute();
    java.util.Map var9 = var2.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test210() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test210");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var6 = var5.getAddressLine();
    java.util.List var7 = var5.getAny();
    var4.setPostBox(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var9 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var4.setPostBox(var9);
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var11 = var4.getDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var13 = var12.createPremise();
    java.util.List var14 = var13.getAny();
    var13.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var17 = var13.getMailStop();
    var13.setPremiseDependencyType("");
    java.lang.String var20 = var13.getPremiseDependency();
    java.lang.String var21 = var13.getPremiseDependency();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var22 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var23 = var22.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var24 = var22.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var25 = var24.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var26 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var27 = var26.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var28 = var26.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var29 = var26.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var30 = var26.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var31 = var26.createLargeMailUserTypeLargeMailUserIdentifier();
    var24.setLargeMailUserIdentifier(var31);
    java.lang.String var33 = var24.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var34 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var34.setIndicator("G_GEO_UNKOWN_STATUS");
    var24.setPostBox(var34);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var38 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var39 = var38.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var40 = var38.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var41 = var38.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var42 = var38.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var43 = var38.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var44 = var38.createFirmType();
    var34.setFirm(var44);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var46 = var44.getPostalCode();
    var13.setFirm(var44);
    var4.setPremise(var13);
    java.util.List var49 = var4.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var50 = var4.getPostOffice();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);

  }

  public void test211() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test211");


    geo.google.datamodel.GeoStatusCode var1 = geo.google.datamodel.GeoStatusCode.getStatusCode((-1));
    java.lang.String var2 = var1.getCodeName();
    java.lang.String var3 = var1.getCodeName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var2 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var2.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var3.equals("G_GEO_UNKOWN_STATUS"));

  }

  public void test212() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test212");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var2 = var1.getCode();
    java.lang.String var3 = var1.getCode();
    var0.setThoroughfareTrailingType(var1);
    java.util.List var5 = var0.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var6 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var7 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var7.setThoroughfarePostDirection(var8);
    java.util.List var10 = var7.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var11 = var7.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var12 = var7.getPostalCode();
    var6.setThoroughfare(var7);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var14 = var7.getThoroughfarePostDirection();
    var0.setThoroughfarePostDirection(var14);
    java.util.List var16 = var0.getAddressLine();
    geo.google.mapping.FunctionChain var17 = new geo.google.mapping.FunctionChain(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);

  }

  public void test213() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test213");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var1 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var1.setThoroughfarePostDirection(var2);
    java.util.List var4 = var1.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var5 = var1.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var1.getPostalCode();
    var0.setThoroughfare(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var8 = var0.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var10 = var9.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var11 = var9.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var12 = var9.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var13 = var9.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var15 = var14.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var16 = var14.createPostOffice();
    java.util.List var17 = var16.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var18 = new oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber();
    var18.setIndicator("hi!");
    java.lang.String var21 = var18.getContent();
    var16.setPostOfficeNumber(var18);
    var13.setPostOffice(var16);
    var0.setDependentLocality(var13);
    java.util.List var25 = var0.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var26 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var27 = var26.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var28 = var26.createPostOffice();
    java.util.List var29 = var28.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var30 = new oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber();
    var30.setIndicator("hi!");
    java.lang.String var33 = var30.getContent();
    var28.setPostOfficeNumber(var30);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var35 = var28.getPostalCode();
    var0.setPostOffice(var28);
    java.lang.String var37 = var28.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);

  }

  public void test214() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test214");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var3 = var0.getThoroughfarePostDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var5 = var4.getCode();
    java.lang.String var6 = var4.getCode();
    var0.setThoroughfareTrailingType(var4);
    java.util.List var8 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var10 = var9.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var11 = var9.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var12 = var9.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var13 = var9.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var14 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var15 = var14.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var16 = var14.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var18 = var17.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var19 = var17.createPostBoxPostBoxNumberExtension();
    var14.setPostBoxNumberExtension(var19);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var21 = var14.getPostBoxNumberExtension();
    java.util.List var22 = var14.getAny();
    var13.setPostBox(var14);
    var13.setType("");
    var0.setDependentLocality(var13);
    java.lang.String var27 = var0.getType();
    java.lang.String var28 = var0.getDependentThoroughfares();
    var0.setDependentThoroughfaresIndicator("geo.google.datamodel.GeoUsAddress@aae93c6[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@4b67b1a4[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@4bfaca9[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);

  }

  public void test215() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test215");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var3 = var0.getThoroughfarePostDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var5 = var4.getCode();
    java.lang.String var6 = var4.getCode();
    var0.setThoroughfareTrailingType(var4);
    java.util.List var8 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var9 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var9.setThoroughfarePostDirection(var10);
    java.util.List var12 = var9.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var13 = var9.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var15 = var14.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var16 = var14.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var17 = var14.createThoroughfareLeadingTypeType();
    java.lang.String var18 = var17.getType();
    var9.setThoroughfareLeadingType(var17);
    java.util.Map var20 = var17.getOtherAttributes();
    var0.setThoroughfareLeadingType(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);

  }

  public void test216() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test216");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var1 = var0.getSubPremiseNumberPrefix();
    java.util.List var2 = var0.getAny();
    java.util.List var3 = var0.getBuildingName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var5 = var4.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var6 = var4.createSubPremiseTypeSubPremiseLocation();
    var0.setSubPremiseLocation(var6);
    java.util.Map var8 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var9 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var10 = var9.getSubPremiseNumberPrefix();
    var9.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var14 = var13.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var15 = var13.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var16 = var15.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var18 = var17.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var19 = var17.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var20 = var17.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var21 = var17.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var22 = var17.createLargeMailUserTypeLargeMailUserIdentifier();
    var15.setLargeMailUserIdentifier(var22);
    java.lang.String var24 = var15.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var25 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var25.setIndicator("G_GEO_UNKOWN_STATUS");
    var15.setPostBox(var25);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var29 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var30 = var29.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var31 = var29.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var32 = var29.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var33 = var29.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var34 = var29.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var35 = var29.createFirmType();
    var25.setFirm(var35);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var37 = var35.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var38 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    var35.setMailStop(var38);
    var9.setMailStop(var38);
    var0.setMailStop(var38);
    java.lang.String var42 = var0.getType();
    java.util.List var43 = var0.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);

  }

  public void test217() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test217");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var2 = var0.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var4 = var3.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var5 = var3.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var6 = var3.createAddressDetailsCountry();
    java.util.List var7 = var6.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var8 = var6.getThoroughfare();
    var0.setCountry(var6);
    var0.setValidFromDate("UNKNOWN_LOCATION");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var12 = var0.getPostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var13 = var0.getAddressLines();
    java.util.Map var14 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);

  }

  public void test218() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test218");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var2 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    java.util.Map var4 = var3.getOtherAttributes();
    var3.setType("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var3.setType("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test219() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test219");


    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.CountryName();
    var0.setCode("hi!");
    var0.setType("hi!");
    var0.setType("G_GEO_UNKOWN_STATUS");
    java.util.Map var7 = var0.getOtherAttributes();
    var0.setType("geo.google.datamodel.GeoAddress@3cce2b1c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setCode("geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var12 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var12.equals("geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test220() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test220");


    oasis.names.tc.ciq.xsdschema.xal._2.Locality var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var1 = var0.getPostOffice();
    java.util.List var2 = var0.getAny();
    java.util.List var3 = var0.getAny();
    java.util.Map var4 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var5 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var6 = var5.getPostTown();
    java.util.Map var7 = var5.getOtherAttributes();
    java.util.List var8 = var5.getPostalCodeNumberExtension();
    var5.setType("G_GEO_UNKOWN_STATUS");
    var0.setPostalCode(var5);
    java.lang.String var12 = var5.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var12.equals("G_GEO_UNKOWN_STATUS"));

  }

  public void test221() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test221");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    java.util.List var3 = var1.getAny();
    var1.setType("");
    var1.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var8 = var1.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var10 = var9.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var11 = var9.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var12 = var9.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var13 = var9.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var14 = var9.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var15 = var9.createFirmType();
    var1.setFirm(var15);
    java.util.List var17 = var1.getPremiseNumber();
    java.util.Map var18 = var1.getOtherAttributes();
    java.util.List var19 = var1.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);

  }

  public void test222() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test222");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var5 = var0.createAddressDetailsPostalServiceElementsBarcode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownName var6 = var0.createPostalCodePostTownPostTownName();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var7 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberSuffix var8 = var0.createSubPremiseTypeSubPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var9 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    java.lang.String var10 = var9.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test223() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test223");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    var3.setNumberSuffixSeparator("hi!");
    var3.setContent("geo.google.GeoException: ");
    java.lang.String var8 = var3.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "geo.google.GeoException: "+ "'", var8.equals("geo.google.GeoException: "));

  }

  public void test224() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test224");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var6 = var0.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var7 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData var8 = var0.createAddressDetailsPostalServiceElementsSupplementaryPostalServiceData();
    java.lang.String var9 = var8.getType();
    java.util.Map var10 = var8.getOtherAttributes();
    var8.setCode("geo.google.datamodel.GeoUsAddress@1add92c3[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@48ce4dfc[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@606200bb[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var13 = var8.getCode();
    var8.setCode("geo.google.datamodel.GeoAddress@64b274a1[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    var8.setContent("geo.google.datamodel.GeoAddress@bb4d8b3[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "geo.google.datamodel.GeoUsAddress@1add92c3[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@48ce4dfc[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@606200bb[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var13.equals("geo.google.datamodel.GeoUsAddress@1add92c3[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@48ce4dfc[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@606200bb[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test225() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test225");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownName var2 = var0.createPostalCodePostTownPostTownName();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType.FirmName var3 = var0.createFirmTypeFirmName();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var4 = var0.createBuildingNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var5 = var0.createCountryName();
    var5.setCode("geo.google.datamodel.GeoUsAddress@7fee135b[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@6738fcfa[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@4e68b607[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var8 = var5.getType();
    java.lang.String var9 = var5.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test226() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test226");


    geo.google.datamodel.GeoAddress var0 = new geo.google.datamodel.GeoAddress();
    java.lang.String var1 = var0.toString();
    geo.google.datamodel.GeoAddressAccuracy var2 = var0.getAccuracy();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var3 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var4 = var3.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var5 = var3.getThoroughfare();
    var0.setAddressDetails(var3);
    var0.setAddressLine("geo.google.datamodel.GeoAddress@6f870497[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    geo.google.datamodel.GeoAddressAccuracy var9 = var0.getAccuracy();
    int var10 = var9.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var1 + "' != '" + "geo.google.datamodel.GeoAddress@1aba80d4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var1.equals("geo.google.datamodel.GeoAddress@1aba80d4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == 0);

  }

  public void test227() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test227");


    geo.google.GeoAddressStandardizer var1 = new geo.google.GeoAddressStandardizer("G_GEO_UNKOWN_STATUS");
    var1.setApiKey("geo.google.GeoException: ");
    var1.setRateLimitInterval(100L);
    java.lang.String var6 = var1.getApiKey();
    java.lang.String var7 = var1.getApiKey();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoAddress var9 = var1.standardizeToGeoAddress("geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "geo.google.GeoException: "+ "'", var6.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "geo.google.GeoException: "+ "'", var7.equals("geo.google.GeoException: "));

  }

  public void test228() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test228");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    var4.setCode("hi!");
    java.lang.String var7 = var4.getContent();
    var4.setCode("geo.google.GeoException: ");
    var4.setType("geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], Uknown Status geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test229() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test229");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    java.util.List var3 = var0.getThoroughfareNumberSuffix();
    var0.setDependentThoroughfaresIndicator("hi!");
    var0.setDependentThoroughfaresType("");
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType();
    java.lang.String var9 = var8.getContent();
    var8.setContent("Uknown Status");
    java.util.Map var12 = var8.getOtherAttributes();
    var0.setThoroughfarePreDirection(var8);
    java.util.List var14 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var15 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var16 = var15.createPremise();
    java.util.List var17 = var16.getAny();
    var16.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var20 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var21 = var20.createPremise();
    java.util.List var22 = var21.getAny();
    var21.setType("");
    var16.setPremise(var21);
    java.lang.String var26 = var21.getPremiseDependencyType();
    var21.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.lang.String var29 = var21.getType();
    java.lang.String var30 = var21.getPremiseDependency();
    var0.setPremise(var21);
    var0.setType("geo.google.datamodel.GeoAddress@39fecb12[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var34 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var29 + "' != '" + ""+ "'", var29.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);

  }

  public void test230() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test230");


    com.google.earth.kml._2.PointType var0 = new com.google.earth.kml._2.PointType();
    java.lang.String var1 = var0.getCoordinates();
    var0.setCoordinates("geo.google.datamodel.GeoUsAddress@7d645dcd[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@484a7e0b[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@12992941[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);

  }

  public void test231() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test231");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber var4 = var0.createPremiseNumber();
    java.lang.String var5 = var4.getIndicator();
    java.lang.String var6 = var4.getIndicator();
    java.lang.String var7 = var4.getCode();
    var4.setIndicatorOccurrence("geo.google.datamodel.GeoAddress@65bbaf75[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test232() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test232");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var6 = var0.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var7 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData var8 = var0.createAddressDetailsPostalServiceElementsSupplementaryPostalServiceData();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var9 = var0.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberPrefix var10 = var0.createPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var11 = var0.createAddressDetailsPostalServiceElementsKeyLineCode();
    java.lang.String var12 = var11.getCode();
    var11.setContent("geo.google.datamodel.GeoUsAddress@1add92c3[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@48ce4dfc[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@606200bb[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test233() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test233");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude();
    java.util.Map var1 = var0.getOtherAttributes();
    java.util.Map var2 = var0.getOtherAttributes();
    java.lang.String var3 = var0.getContent();
    java.util.Map var4 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test234() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test234");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    java.lang.String var4 = var3.getNumberSuffixSeparator();
    java.lang.String var5 = var3.getCode();
    var3.setContent("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var8 = var3.getNumberSuffixSeparator();
    var3.setType("geo.google.datamodel.GeoAddress@73c03348[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test235() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test235");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var2 = var0.getAddressLines();
    var0.setUsage("");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var9 = var0.getLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var10 = var0.getPostalServiceElements();
    java.util.Map var11 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var12 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var14 = var13.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var15 = var13.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var16 = var15.getCode();
    java.util.Map var17 = var15.getOtherAttributes();
    var15.setCode("G_GEO_UNKOWN_STATUS");
    var12.setEndorsementLineCode(var15);
    var0.setPostalServiceElements(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var22 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var23 = var22.getAddressLatitudeDirection();
    var22.setType("geo.google.GeoException: geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var26 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var27 = var26.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var28 = var26.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var29 = var26.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var30 = var26.createThoroughfareTrailingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var31 = var26.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    var31.setType("geo.google.GeoException: ");
    var22.setAddressLatitudeDirection(var31);
    var12.setAddressLatitudeDirection(var31);
    java.util.Map var36 = var31.getOtherAttributes();
    var31.setContent("geo.google.datamodel.GeoUsAddress@46478daa[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@3a5b7f2[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@74cf72bc[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);

  }

  public void test236() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test236");


    geo.google.GeoAddressStandardizer var2 = new geo.google.GeoAddressStandardizer("G_GEO_UNKOWN_STATUS", 100L);
    org.apache.commons.httpclient.params.HttpClientParams var3 = var2.getHttpClientParams();
    var2.setApiKey("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var2.setApiKey("CLAMP_TO_GROUND");
    geo.google.mapping.AddressToUsAddressFunctor var9 = new geo.google.mapping.AddressToUsAddressFunctor();
    geo.google.mapping.Functor[] var10 = new geo.google.mapping.Functor[] { var9};
    geo.google.mapping.FunctionChain var11 = new geo.google.mapping.FunctionChain(var10);
    geo.google.mapping.FunctionChain var12 = var11.getTail();
    geo.google.mapping.XmlToUsAddressFunctor var13 = new geo.google.mapping.XmlToUsAddressFunctor();
    geo.google.mapping.FunctionChain var14 = geo.google.mapping.FunctionChain.getChain((geo.google.mapping.Functor)var13);
    var11.setHead((geo.google.mapping.Functor)var13);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Object var16 = var2.standardize("geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], Uknown Status geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", (geo.google.mapping.XmlMappingFunctor)var13);
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);

  }

  public void test237() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test237");


    geo.google.datamodel.GeoAltitude var1 = new geo.google.datamodel.GeoAltitude();
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var2 = var1.getMode();
    java.lang.String var3 = var2.toString();
    geo.google.datamodel.GeoAltitude var4 = new geo.google.datamodel.GeoAltitude(111.18957695998893d, var2);
    java.lang.String var6 = var2.getDescription("geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    geo.google.GeoAddressStandardizer var8 = new geo.google.GeoAddressStandardizer("geo.google.datamodel.GeoAddress@12dfb6a6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    boolean var9 = var2.equals((java.lang.Object)var8);
    var8.setApiKey("geo.google.datamodel.GeoAddress@25d14add[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoAddress var13 = var8.standardizeToGeoAddress("geo.google.datamodel.GeoAddress@2eda413f[\n  _coordinate=<null>\n  _addressDetails=oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails@7af1a720\n  _addressLine=geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "CLAMP_TO_GROUND"+ "'", var3.equals("CLAMP_TO_GROUND"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "(default) Indicates to ignore an altitude specification"+ "'", var6.equals("(default) Indicates to ignore an altitude specification"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == false);

  }

  public void test238() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test238");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoStatusCode var1 = geo.google.datamodel.GeoStatusCode.valueOf("geo.google.datamodel.GeoAddress@4d2d0080[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test239() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test239");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    java.lang.String var2 = var1.getNumberSuffixSeparator();
    java.lang.String var3 = var1.getContent();
    java.util.Map var4 = var1.getOtherAttributes();
    java.lang.String var5 = var1.getCode();
    java.lang.String var6 = var1.getContent();
    java.lang.String var7 = var1.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test240() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test240");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    java.lang.String var3 = var2.getType();
    var2.setCode("G_GEO_UNKOWN_STATUS");
    var2.setCode("G_GEO_UNKOWN_STATUS");
    var2.setCode("UNKNOWN_LOCATION");
    var2.setNumberPrefixSeparator("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var12 = var2.getNumberPrefixSeparator();
    java.lang.String var13 = var2.getContent();
    var2.setType("geo.google.datamodel.GeoUsAddress@7373258[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@38ca331b[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@62e14ebd[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var12.equals("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test241() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test241");


    geo.google.datamodel.GeoCoordinate var0 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var1 = new geo.google.datamodel.GeoCoordinate();
    double var2 = var1.getLongitude();
    double var3 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var0, var1);
    geo.google.datamodel.GeoAltitude var4 = var1.getAltitude();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName var5 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName();
    java.util.Map var6 = var5.getOtherAttributes();
    var5.setCode("");
    var5.setType("geo.google.GeoException: geo.google.GeoException: ");
    boolean var11 = var1.equals((java.lang.Object)var5);
    java.lang.String var12 = var5.getContent();
    java.util.Map var13 = var5.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);

  }

  public void test242() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test242");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    java.lang.String var4 = var3.getNumberSuffixSeparator();
    var3.setType("(default) Indicates to ignore an altitude specification");
    java.lang.String var7 = var3.getNumberSuffixSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test243() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test243");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var1 = var0.getSubPremiseNumberPrefix();
    var0.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var5 = var4.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var6 = var5.getMailStopNumber();
    java.util.Map var7 = var5.getOtherAttributes();
    var0.setMailStop(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var10 = var9.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var11 = var9.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var12 = var11.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var14 = var13.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var15 = var13.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var16 = var13.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var17 = var13.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var18 = var13.createLargeMailUserTypeLargeMailUserIdentifier();
    var11.setLargeMailUserIdentifier(var18);
    java.lang.String var20 = var11.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var21 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var21.setIndicator("G_GEO_UNKOWN_STATUS");
    var11.setPostBox(var21);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var25 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var26 = var25.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var27 = var25.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var28 = var25.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var29 = var25.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var30 = var25.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var31 = var25.createFirmType();
    var21.setFirm(var31);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var33 = var31.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var34 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    var31.setMailStop(var34);
    var0.setFirm(var31);
    java.util.Map var37 = var31.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var38 = var31.getMailStop();
    java.lang.String var39 = var38.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);

  }

  public void test244() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test244");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea();
    var0.setType("geo.google.datamodel.GeoAddress@3cce2b1c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var4 = var3.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var5 = var3.createPostOffice();
    java.util.List var6 = var5.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var7 = var5.getPostOfficeNumber();
    java.lang.String var8 = var5.getType();
    var5.setType("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var11 = var5.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var13 = var12.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var14 = var12.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var15 = var12.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var16 = var15.getType();
    java.util.List var17 = var15.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var19 = var18.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var20 = var18.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var21 = var18.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var22 = var18.createThoroughfare();
    java.util.List var23 = var22.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var24 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var25 = var24.getPostTown();
    var22.setPostalCode(var24);
    var15.setPostalCode(var24);
    var24.setType("(default) Indicates to ignore an altitude specification");
    var24.setType("G_GEO_UNKOWN_STATUS");
    java.util.Map var32 = var24.getOtherAttributes();
    var5.setPostalCode(var24);
    var0.setPostOffice(var5);
    java.util.Map var35 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);

  }

  public void test245() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test245");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    var4.setCode("hi!");
    java.lang.String var7 = var4.getCode();
    var4.setCode("hi!");
    java.lang.String var10 = var4.getContent();
    java.lang.String var11 = var4.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);

  }

  public void test246() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test246");


    geo.google.datamodel.GeoCoordinate var14 = new geo.google.datamodel.GeoCoordinate();
    double var15 = var14.getLongitude();
    geo.google.datamodel.GeoCoordinate var16 = new geo.google.datamodel.GeoCoordinate();
    double var17 = var16.getLongitude();
    double var18 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var14, var16);
    double var19 = var16.getLatitude();
    var16.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var23 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var24 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var16, var23);
    geo.google.datamodel.GeoAddressAccuracy var26 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var27 = var26.getName();
    geo.google.datamodel.GeoUsAddress var28 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: hi!", "(default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.GeoException: ", "", "UNKNOWN_LOCATION", var16, var26);
    var28.setPostalCode("(default) Indicates to ignore an altitude specification");
    geo.google.datamodel.GeoAddressAccuracy var32 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(0);
    var28.setAccuracy(var32);
    java.lang.String var34 = var28.toAddressLine();
    java.lang.String var35 = var28.getCity();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "UNKNOWN_LOCATION"+ "'", var27.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var34 + "' != '" + "geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  (default) Indicates to ignore an altitude specification"+ "'", var34.equals("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  (default) Indicates to ignore an altitude specification"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var35.equals("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test247() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test247");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var2 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var4 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var5 = var0.createSubPremiseTypeSubPremiseNumber();
    java.lang.String var6 = var5.getNumberTypeOccurrence();
    java.lang.String var7 = var5.getPremiseNumberSeparator();
    java.lang.String var8 = var5.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test248() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test248");


    oasis.names.tc.ciq.xsdschema.xal._2.Locality var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var1.createPremise();
    java.util.List var3 = var2.getAddressLine();
    java.util.List var4 = var2.getAny();
    var2.setType("");
    var2.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var9 = var2.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var11 = var10.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var12 = var10.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var13 = var10.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var14 = var10.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var15 = var10.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var16 = var10.createFirmType();
    var2.setFirm(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var18 = var2.getMailStop();
    var2.setType("hi!");
    var0.setPremise(var2);
    java.util.Map var22 = var0.getOtherAttributes();
    var0.setUsageType("geo.google.datamodel.GeoAddress@4244bb8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var25 = var0.getDependentLocality();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);

  }

  public void test249() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test249");


    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber();
    java.lang.String var1 = var0.getIndicator();
    java.lang.String var2 = var0.getCode();
    java.lang.String var3 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test250() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test250");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAny();
    var1.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var5 = var1.getMailStop();
    java.lang.String var6 = var1.getPremiseDependency();
    java.lang.String var7 = var1.getPremiseThoroughfareConnector();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test251() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test251");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var2 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var3 = var0.createThoroughfareTrailingTypeType();
    var3.setType("Uknown Status");
    java.lang.String var6 = var3.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test252() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test252");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData();
    java.util.Map var1 = var0.getOtherAttributes();
    java.lang.String var2 = var0.getType();
    java.util.Map var3 = var0.getOtherAttributes();
    java.util.Map var4 = var0.getOtherAttributes();
    java.lang.String var5 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test253() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test253");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    java.util.Map var1 = var0.getOtherAttributes();
    java.util.Map var2 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var3 = var0.getThoroughfarePostDirection();
    java.lang.String var4 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test254() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test254");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var2 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var4.setThoroughfarePostDirection(var5);
    java.util.List var7 = var4.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var8 = var4.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var9 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var11 = var10.getCode();
    java.lang.String var12 = var10.getCode();
    var9.setThoroughfareTrailingType(var10);
    var4.setDependentThoroughfare(var9);
    var3.setDependentThoroughfare(var9);
    java.util.List var16 = var3.getThoroughfareNumberOrThoroughfareNumberRange();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);

  }

  public void test255() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test255");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeName var6 = var0.createPostOfficePostOfficeName();
    java.util.Map var7 = var6.getOtherAttributes();
    java.util.Map var8 = var6.getOtherAttributes();
    var6.setType("geo.google.datamodel.GeoAddress@74fcfcca[\n  _coordinate=<null>\n  _addressDetails=oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails@d386dc7\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test256() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test256");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var3 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var4 = var0.createPostBoxPostBoxNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserName var5 = var0.createLargeMailUserTypeLargeMailUserName();
    java.util.Map var6 = var5.getOtherAttributes();
    java.lang.String var7 = var5.getType();
    java.lang.String var8 = var5.getType();
    java.lang.String var9 = var5.getContent();
    var5.setContent("geo.google.datamodel.GeoAddress@12dfb6a6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var12 = var5.getOtherAttributes();
    java.lang.String var13 = var5.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test257() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test257");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var2 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var3 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.Department var4 = var0.createDepartment();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberPrefix var5 = var0.createPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var0.createPostalCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test258() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test258");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var2 = var0.createSubPremiseTypeSubPremiseName();
    var2.setCode("G_GEO_UNKOWN_STATUS");
    var2.setContent("G_GEO_UNKOWN_STATUS");
    java.lang.String var7 = var2.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var7.equals("G_GEO_UNKOWN_STATUS"));

  }

  public void test259() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test259");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    java.lang.String var2 = var1.getNumberSuffixSeparator();
    java.lang.String var3 = var1.getContent();
    java.util.Map var4 = var1.getOtherAttributes();
    var1.setType("geo.google.GeoException: hi!");
    java.lang.String var7 = var1.getType();
    java.lang.String var8 = var1.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "geo.google.GeoException: hi!"+ "'", var7.equals("geo.google.GeoException: hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test260() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test260");


    geo.google.mapping.XmlToAddressFunctor var0 = new geo.google.mapping.XmlToAddressFunctor();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.util.List var2 = var0.execute("G_GEO_UNKOWN_STATUS");
      fail("Expected exception of type java.lang.RuntimeException");
    } catch (java.lang.RuntimeException e) {
      // Expected exception.
    }

  }

  public void test261() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test261");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    java.lang.String var11 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var12.setIndicator("G_GEO_UNKOWN_STATUS");
    var2.setPostBox(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var17 = var16.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var18 = var16.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var19 = var16.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var20 = var16.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var21 = var16.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var22 = var16.createFirmType();
    var12.setFirm(var22);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var24 = var22.getPostalCode();
    java.util.List var25 = var22.getAddressLine();
    java.util.Map var26 = var22.getOtherAttributes();
    java.util.List var27 = var22.getAny();
    java.util.List var28 = var22.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);

  }

  public void test262() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test262");


    oasis.names.tc.ciq.xsdschema.xal._2.FirmType.FirmName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.FirmType.FirmName();
    java.lang.String var1 = var0.getType();
    var0.setCode("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  (default) Indicates to ignore an altitude specification");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);

  }

  public void test263() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test263");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAny();
    var1.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var5.createPremise();
    java.util.List var7 = var6.getAny();
    var6.setType("");
    var1.setPremise(var6);
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var11 = var6.getPremiseNumberRange();
    java.util.List var12 = var6.getPremiseNumberSuffix();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test264() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test264");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    var5.setType("Uknown Status");
    java.lang.String var8 = var5.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test265() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test265");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getBuildingName();
    java.util.List var3 = var1.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var6 = var4.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var7 = var4.createPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var8 = var4.createAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var9 = var4.createPostalCode();
    var1.setPostalCode(var9);
    java.util.List var11 = var1.getSubPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var13 = var12.createPremise();
    java.util.List var14 = var13.getAny();
    var13.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var18 = var17.createPremise();
    java.util.List var19 = var18.getAny();
    var18.setType("");
    var13.setPremise(var18);
    java.lang.String var23 = var18.getPremiseDependencyType();
    var18.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    var1.setPremise(var18);
    java.lang.String var27 = var18.getPremiseThoroughfareConnector();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "geo.google.GeoException: "+ "'", var27.equals("geo.google.GeoException: "));

  }

  public void test266() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test266");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeName var6 = var0.createPostOfficePostOfficeName();
    java.lang.String var7 = var6.getCode();
    var6.setCode("geo.google.datamodel.GeoAddress@74fcfcca[\n  _coordinate=<null>\n  _addressDetails=oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails@d386dc7\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test267() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test267");


    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber();
    var0.setIndicator("hi!");
    var0.setIndicator("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var5 = var0.getIndicator();
    java.lang.String var6 = var0.getIndicator();
    java.lang.String var7 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "geo.google.GeoException: geo.google.GeoException: "+ "'", var5.equals("geo.google.GeoException: geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "geo.google.GeoException: geo.google.GeoException: "+ "'", var6.equals("geo.google.GeoException: geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test268() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test268");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var2 = var0.createSubPremiseTypeSubPremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var3 = var0.createSubPremiseType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var4 = var0.createThoroughfareThoroughfareNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var5 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    java.lang.String var6 = var5.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberFrom var7 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberFrom();
    java.util.List var8 = var7.getContent();
    var5.setThoroughfareNumberFrom(var7);
    var7.setCode("G_GEO_UNKOWN_STATUS");
    var4.setThoroughfareNumberFrom(var7);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberFrom var13 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberFrom();
    java.util.Map var14 = var13.getOtherAttributes();
    var4.setThoroughfareNumberFrom(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var16 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    var16.setNumberRangeOccurrence("geo.google.GeoException: geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var20 = var19.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var21 = var19.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var22 = var19.createPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var23 = var19.createAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var24 = var19.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberFrom var25 = var19.createThoroughfareThoroughfareNumberRangeThoroughfareNumberFrom();
    var16.setThoroughfareNumberFrom(var25);
    java.util.Map var27 = var25.getOtherAttributes();
    java.util.List var28 = var25.getContent();
    var4.setThoroughfareNumberFrom(var25);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var30 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var31 = var30.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var32 = var30.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var33 = var30.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var34 = var30.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var35 = var30.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    var4.setThoroughfareNumberTo(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);

  }

  public void test269() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test269");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName();
    java.util.Map var1 = var0.getOtherAttributes();
    java.lang.String var2 = var0.getContent();
    var0.setType("G_GEO_UNKOWN_STATUS");
    java.lang.String var5 = var0.getCode();
    java.lang.String var6 = var0.getContent();
    java.util.Map var7 = var0.getOtherAttributes();
    java.util.Map var8 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test270() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test270");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var2 = var0.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var4 = var0.createPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitude();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var6 = var0.createFirmType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var7 = var0.createPostBoxPostBoxNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var8 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var9 = var0.createPremiseNumberSuffix();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test271() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test271");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    java.util.List var3 = var0.getThoroughfareNumberSuffix();
    var0.setDependentThoroughfaresIndicator("hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var6 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var8 = var7.getCode();
    java.lang.String var9 = var7.getCode();
    var6.setThoroughfareTrailingType(var7);
    java.util.List var11 = var6.getAddressLine();
    java.util.List var12 = var6.getAddressLine();
    java.util.List var13 = var6.getAny();
    var0.setDependentThoroughfare(var6);
    java.util.List var15 = var0.getThoroughfareNumberSuffix();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);

  }

  public void test272() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test272");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var2 = var0.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var4 = var0.createPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitude();
    var5.setContent("UNKNOWN_LOCATION");
    var5.setContent("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var10 = var5.getCode();
    var5.setContent("geo.google.datamodel.GeoAddress@12dfb6a6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var5.setContent("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  (default) Indicates to ignore an altitude specification");
    java.lang.String var15 = var5.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);

  }

  public void test273() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test273");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var3 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName var4 = var0.createAdministrativeAreaSubAdministrativeAreaSubAdministrativeAreaName();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var5 = var0.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var6 = var0.createPostBoxPostBoxNumber();
    java.lang.String var7 = var6.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test274() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test274");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.Department var6 = var0.createDepartment();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var7 = var6.getPostalCode();
    var6.setType("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.List var10 = var6.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);

  }

  public void test275() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test275");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var6 = var0.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var7 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityName var8 = var0.createDependentLocalityTypeDependentLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.Department.DepartmentName var9 = var0.createDepartmentDepartmentName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);

  }

  public void test276() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test276");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var2 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var4 = var0.createSubPremiseTypeSubPremiseNumber();
    var4.setIndicator("hi!");
    var4.setContent("Uknown Status");
    var4.setContent("geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test277() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test277");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    var0.setUsageType("geo.google.GeoException: geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.getSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var5 = var4.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var6 = var4.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var7 = var4.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var8 = var7.getType();
    java.util.List var9 = var7.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var11 = var10.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var12 = var10.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var13 = var10.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var14 = var10.createThoroughfare();
    java.util.List var15 = var14.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var16 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var17 = var16.getPostTown();
    var14.setPostalCode(var16);
    var7.setPostalCode(var16);
    var0.setSubAdministrativeArea(var7);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var21 = var7.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var22 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown();
    var22.setType("hi!");
    var21.setPostTown(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);

  }

  public void test278() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test278");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var2 = var0.createPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var3 = var0.createThoroughfareLeadingTypeType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test279() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test279");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var3 = var0.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var4 = var0.createPremiseNumberSuffix();
    var4.setContent("CLAMP_TO_GROUND");
    java.lang.String var7 = var4.getNumberSuffixSeparator();
    java.lang.String var8 = var4.getNumberSuffixSeparator();
    var4.setContent("geo.google.datamodel.GeoAddress@24493185[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test280() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test280");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var5 = var0.createAddressDetailsCountryCountryNameCode();
    var5.setContent("geo.google.datamodel.GeoUsAddress@2e935a48[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@4c0c44db[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@397cacde[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    var5.setContent("geo.google.datamodel.GeoUsAddress@aae93c6[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@4b67b1a4[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@4bfaca9[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test281() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test281");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var5 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var6 = var5.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var7 = var5.getAddressLines();
    var5.setUsage("");
    javax.xml.bind.JAXBElement var10 = var0.createAddressDetails(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var11 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    var11.setNumberPrefixSeparator("geo.google.GeoException: , geo.google.GeoException: hi!,  geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);

  }

  public void test282() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test282");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var2 = var0.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom var4 = var0.createPremisePremiseNumberRangePremiseNumberRangeFrom();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = var0.createPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var6 = var5.getPostBoxNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test283() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test283");


    geo.google.GeoAddressStandardizer var2 = new geo.google.GeoAddressStandardizer("geo.google.datamodel.GeoUsAddress@46478daa[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@3a5b7f2[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@74cf72bc[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]", 1L);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.util.List var4 = var2.standardizeToGeoAddresses("geo.google.GeoException: , geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n],  UNKNOWN_LOCATION");
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }

  }

  public void test284() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test284");


    geo.google.datamodel.GeoCoordinate var7 = new geo.google.datamodel.GeoCoordinate();
    double var8 = var7.getLongitude();
    geo.google.datamodel.GeoCoordinate var9 = new geo.google.datamodel.GeoCoordinate();
    double var10 = var9.getLongitude();
    double var11 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var7, var9);
    geo.google.datamodel.GeoCoordinate var12 = new geo.google.datamodel.GeoCoordinate();
    double var13 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var7, var12);
    geo.google.datamodel.GeoStatusCode var16 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var17 = new geo.google.GeoException("", var16);
    boolean var18 = var7.equals((java.lang.Object)var16);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var20 = var19.createPremise();
    java.util.List var21 = var20.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var22 = var20.getFirm();
    var20.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var25 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var26 = var25.createPremise();
    java.lang.String var27 = var26.getPremiseThoroughfareConnector();
    var20.setPremise(var26);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var29 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var30 = var29.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var31 = var29.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var32 = var29.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var33 = var32.getType();
    java.util.List var34 = var32.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var35 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var36 = var35.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var37 = var35.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var38 = var35.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var39 = var35.createThoroughfare();
    java.util.List var40 = var39.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var41 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var42 = var41.getPostTown();
    var39.setPostalCode(var41);
    var32.setPostalCode(var41);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var45 = var32.getPostalCode();
    var20.setPostalCode(var45);
    boolean var47 = var7.equals((java.lang.Object)var20);
    geo.google.datamodel.GeoCoordinate var48 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var49 = new geo.google.datamodel.GeoCoordinate();
    double var50 = var49.getLongitude();
    double var51 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var48, var49);
    geo.google.datamodel.GeoAltitude var52 = var49.getAltitude();
    geo.google.datamodel.GeoCoordinate var53 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var54 = new geo.google.datamodel.GeoCoordinate();
    double var55 = var54.getLongitude();
    double var56 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var53, var54);
    double var57 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var49, var54);
    double var58 = geo.google.datamodel.GeoUtils.distanceBetweenInMiles(var7, var54);
    geo.google.datamodel.GeoCoordinate var59 = var7.clone();
    geo.google.datamodel.GeoAddressAccuracy var61 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var62 = var61.getName();
    int var63 = var61.getCode();
    geo.google.datamodel.GeoUsAddress var64 = new geo.google.datamodel.GeoUsAddress("geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", var7, var61);
    java.lang.String var65 = var64.toString();
    var64.setCounty("geo.google.datamodel.GeoAddress@25d14add[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var13 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var50 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var51 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var55 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var56 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var57 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var58 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var62 + "' != '" + "UNKNOWN_LOCATION"+ "'", var62.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var65 + "' != '" + "geo.google.datamodel.GeoUsAddress@498d6d41[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@63ffec20[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@36e75c2a[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var65.equals("geo.google.datamodel.GeoUsAddress@498d6d41[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@63ffec20[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@36e75c2a[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test285() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test285");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode();
    java.lang.String var1 = var0.getType();
    java.lang.String var2 = var0.getContent();
    java.util.Map var3 = var0.getOtherAttributes();
    java.util.Map var4 = var0.getOtherAttributes();
    var0.setCode("(default) Indicates to ignore an altitude specification");
    java.lang.String var7 = var0.getContent();
    java.lang.String var8 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test286() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test286");


    oasis.names.tc.ciq.xsdschema.xal._2.Locality var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var1 = var0.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.getPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var3 = var0.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var4.setThoroughfarePostDirection(var5);
    java.util.List var7 = var4.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var8 = var4.getThoroughfarePreDirection();
    var0.setThoroughfare(var4);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var10 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    java.lang.String var11 = var10.getValidToDate();
    var10.setAddressDetailsKey("hi!");
    java.util.Map var14 = var10.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var15 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var16 = var15.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var17 = var15.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var18 = var15.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var19 = var15.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var20 = var15.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var21 = var15.createLocality();
    var10.setLocality(var21);
    java.util.Map var23 = var21.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var24 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var25 = var24.createPremise();
    java.util.List var26 = var25.getAny();
    java.util.List var27 = var25.getBuildingName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var28 = var25.getPostalCode();
    var21.setPremise(var25);
    var4.setPremise(var25);
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var31 = var25.getPremiseNumberRange();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);

  }

  public void test287() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test287");


    com.google.earth.kml._2.PointType var0 = new com.google.earth.kml._2.PointType();
    var0.setTessellate((java.lang.Boolean)true);
    var0.setExtrude((java.lang.Boolean)false);
    java.lang.Boolean var5 = var0.isExtrude();
    var0.setCoordinates("Uknown Status");
    var0.setTessellate((java.lang.Boolean)true);
    var0.setExtrude((java.lang.Boolean)false);
    java.lang.Boolean var12 = var0.isExtrude();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + false+ "'", var5.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + false+ "'", var12.equals(false));

  }

  public void test288() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test288");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier();
    var0.setContent("G_GEO_UNKOWN_STATUS");
    var0.setCode("geo.google.GeoException: ");
    java.lang.String var5 = var0.getCode();
    var0.setType("geo.google.datamodel.GeoAddress@439373c0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + "geo.google.GeoException: "+ "'", var5.equals("geo.google.GeoException: "));

  }

  public void test289() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test289");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName();
    java.lang.String var1 = var0.getType();
    var0.setType("Uknown Status");
    java.util.Map var4 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test290() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test290");


    geo.google.GeoAddressStandardizer var2 = new geo.google.GeoAddressStandardizer("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", 100L);
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoCoordinate var4 = var2.standardizeToGeoCoordinate("geo.google.GeoException: , geo.google.GeoException: hi!,  CLAMP_TO_GROUND");
      fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
    }

  }

  public void test291() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test291");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var3 = var0.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var4 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var5 = var4.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var7 = var6.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var8 = var6.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var9 = var6.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var10 = var9.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var11 = var9.getPostOffice();
    java.lang.String var12 = var9.getUsageType();
    java.util.List var13 = var9.getAddressLine();
    var4.setSubAdministrativeArea(var9);
    java.lang.String var15 = var4.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var16 = var4.getPostalCode();
    var3.setAdministrativeArea(var4);
    java.util.List var18 = var3.getCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var19 = var3.getAdministrativeArea();
    java.util.Map var20 = var19.getOtherAttributes();
    var19.setIndicator("geo.google.datamodel.GeoUsAddress@2e935a48[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@4c0c44db[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@397cacde[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);

  }

  public void test292() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test292");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    java.lang.String var1 = var0.getDependentThoroughfaresIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var2 = var0.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var3 = var0.getThoroughfarePostDirection();
    java.util.List var4 = var0.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test293() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test293");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var6 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var7 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var8 = var0.createPostalCodePostTown();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLine var9 = var0.createAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var10 = var0.createLocalityLocalityName();
    var10.setContent("geo.google.datamodel.GeoAddress@2eda413f[\n  _coordinate=<null>\n  _addressDetails=oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails@7af1a720\n  _addressLine=geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);

  }

  public void test294() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test294");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    java.util.List var3 = var2.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    java.lang.String var10 = var9.getCode();
    var2.setLargeMailUserIdentifier(var9);
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var12 = var2.getLargeMailUserIdentifier();
    var12.setIndicator("geo.google.datamodel.GeoUsAddress@2fec0f69[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@32e7cf13[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@10cc0281[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var15 = var12.getIndicator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + "geo.google.datamodel.GeoUsAddress@2fec0f69[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@32e7cf13[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@10cc0281[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var15.equals("geo.google.datamodel.GeoUsAddress@2fec0f69[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@32e7cf13[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@10cc0281[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test295() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test295");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var2 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var4 = var0.createAddressLinesType();
    java.util.List var5 = var4.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test296() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test296");


    com.google.earth.kml._2.ObjectFactory var0 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var1 = var0.createResponseType();
    com.google.earth.kml._2.ResponseType var2 = var0.createResponseType();
    com.google.earth.kml._2.PlacemarkType var3 = var0.createPlacemarkType();
    com.google.earth.kml._2.ObjectFactory var4 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.KmlType var5 = new com.google.earth.kml._2.KmlType();
    javax.xml.bind.JAXBElement var6 = var4.createKml(var5);
    javax.xml.bind.JAXBElement var7 = var0.createKml(var5);
    com.google.earth.kml._2.ResponseType var8 = var5.getResponse();
    com.google.earth.kml._2.ResponseType var9 = var5.getResponse();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test297() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test297");


    geo.google.datamodel.GeoCoordinate var0 = new geo.google.datamodel.GeoCoordinate();
    double var1 = var0.getLongitude();
    geo.google.datamodel.GeoCoordinate var2 = new geo.google.datamodel.GeoCoordinate();
    double var3 = var2.getLongitude();
    double var4 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var0, var2);
    geo.google.datamodel.GeoCoordinate var5 = new geo.google.datamodel.GeoCoordinate();
    double var6 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var0, var5);
    geo.google.datamodel.GeoStatusCode var9 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var10 = new geo.google.GeoException("", var9);
    boolean var11 = var0.equals((java.lang.Object)var9);
    java.lang.Class var12 = var9.getDeclaringClass();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.lang.Enum var14 = java.lang.Enum.<java.lang.Enum>valueOf(var12, "geo.google.datamodel.GeoAddress@2de26f07[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test298() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test298");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var3 = var1.getPremiseNumberRange();
    java.util.List var4 = var1.getPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var5 = var1.getPremise();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test299() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test299");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var2 = var0.getAddressLines();
    var0.setUsage("");
    var0.setUsage("hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var7 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var7.setThoroughfarePostDirection(var8);
    java.util.List var10 = var7.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var11 = var7.getThoroughfareLeadingType();
    var0.setThoroughfare(var7);
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var13 = var7.getFirm();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test300() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test300");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    java.util.List var3 = var1.getAny();
    var1.setType("");
    var1.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var8 = var1.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var10 = var9.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var11 = var9.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var12 = var9.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var13 = var9.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var14 = var9.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var15 = var9.createFirmType();
    var1.setFirm(var15);
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var17 = var1.getMailStop();
    var1.setType("hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var20 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    java.util.Map var21 = var20.getOtherAttributes();
    var1.setMailStop(var20);
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var23 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var24 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName();
    var23.setMailStopName(var24);
    var24.setType("G_GEO_UNKOWN_STATUS");
    var20.setMailStopName(var24);
    java.util.List var29 = var20.getAny();
    var20.setType("geo.google.datamodel.GeoAddress@4d2d0080[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);

  }

  public void test301() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test301");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var3 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var4 = var0.createAddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var5 = var0.createThoroughfarePreDirectionType();
    java.lang.String var6 = var5.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test302() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test302");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var3 = new oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var3);
    java.lang.String var5 = var3.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test303() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test303");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    java.util.List var3 = var2.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var4 = var2.getPostOfficeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var5 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var6 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var6.setThoroughfarePostDirection(var7);
    java.util.List var9 = var6.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var10 = var6.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var11 = var6.getPostalCode();
    var5.setThoroughfare(var6);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var13 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var14 = var13.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var15 = var13.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var17 = var16.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var18 = var16.createPostBoxPostBoxNumberExtension();
    var13.setPostBoxNumberExtension(var18);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var20 = var13.getPostBoxNumberExtension();
    java.util.List var21 = var13.getAny();
    var5.setPostBox(var13);
    var2.setPostBox(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var24 = var2.getPostOfficeNumber();
    java.util.List var25 = var2.getPostOfficeName();
    var2.setType("geo.google.datamodel.GeoAddress@2de26f07[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);

  }

  public void test304() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test304");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var2 = var1.getCode();
    java.lang.String var3 = var1.getCode();
    var0.setThoroughfareTrailingType(var1);
    java.util.List var5 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType();
    java.lang.String var7 = var6.getContent();
    var0.setThoroughfarePreDirection(var6);
    java.lang.String var9 = var6.getCode();
    var6.setType("");
    java.util.Map var12 = var6.getOtherAttributes();
    java.util.Map var13 = var6.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);

  }

  public void test305() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test305");


    geo.google.datamodel.GeoCoordinate var14 = new geo.google.datamodel.GeoCoordinate();
    double var15 = var14.getLongitude();
    geo.google.datamodel.GeoCoordinate var16 = new geo.google.datamodel.GeoCoordinate();
    double var17 = var16.getLongitude();
    double var18 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var14, var16);
    double var19 = var16.getLatitude();
    var16.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var23 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var24 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var16, var23);
    geo.google.datamodel.GeoAddressAccuracy var26 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var27 = var26.getName();
    geo.google.datamodel.GeoUsAddress var28 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: hi!", "(default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.GeoException: ", "", "UNKNOWN_LOCATION", var16, var26);
    var28.setState("");
    java.lang.String var31 = var28.getCounty();
    var28.setAddressLine1("geo.google.GeoException: hi!");
    geo.google.datamodel.GeoCoordinate var34 = var28.getCoordinate();
    var28.setAddressLine1("geo.google.GeoException: hi!");
    java.lang.String var37 = var28.getCity();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "UNKNOWN_LOCATION"+ "'", var27.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "Uknown Status"+ "'", var31.equals("Uknown Status"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var37 + "' != '" + "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var37.equals("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test306() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test306");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    java.lang.String var11 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var12.setIndicator("G_GEO_UNKOWN_STATUS");
    var2.setPostBox(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var16 = var2.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var17 = var2.getPostBox();
    java.util.List var18 = var2.getLargeMailUserName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);

  }

  public void test307() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test307");


    geo.google.datamodel.GeoCoordinate var0 = new geo.google.datamodel.GeoCoordinate();
    double var1 = var0.getLongitude();
    geo.google.datamodel.GeoCoordinate var2 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var3 = new geo.google.datamodel.GeoCoordinate();
    double var4 = var3.getLongitude();
    double var5 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var2, var3);
    geo.google.datamodel.GeoCoordinate var6 = var2.clone();
    double var7 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var0, var6);
    var0.setLongitude((-1.0d));
    double var10 = var0.getLatitude();
    geo.google.datamodel.GeoCoordinate var11 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoAltitude var13 = new geo.google.datamodel.GeoAltitude(0.0d);
    var13.setAltitude(10.0d);
    var11.setAltitude(var13);
    var13.setAltitude(1.0d);
    double var19 = var13.getAltitude();
    var0.setAltitude(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var1 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var4 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var7 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == 1.0d);

  }

  public void test308() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test308");


    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var2 = var1.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var3 = var1.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var4 = var1.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var5 = var1.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var6 = var1.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var7 = var1.createFirmType();
    var0.setFirm(var7);
    var0.setType("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var11 = var0.getPostalCode();
    java.lang.String var12 = var0.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var13 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var15 = var14.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var16 = var14.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var17 = var14.createPostalCode();
    var13.setPostalCode(var17);
    var0.setPostalCode(var17);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var20 = var0.getPostBoxNumber();
    var0.setIndicator("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var23 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var24 = var23.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var25 = var23.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var26 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var27 = var26.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var28 = var26.createPostBoxPostBoxNumberExtension();
    var23.setPostBoxNumberExtension(var28);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var30 = var23.getPostBoxNumberExtension();
    var30.setContent("");
    var30.setContent("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setPostBoxNumberExtension(var30);
    var30.setNumberExtensionSeparator("geo.google.datamodel.GeoAddress@bb4d8b3[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var30.setContent("geo.google.datamodel.GeoAddress@79386135[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);

  }

  public void test309() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test309");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    var4.setCode("hi!");
    java.lang.String var7 = var4.getCode();
    java.lang.String var8 = var4.getCode();
    var4.setContent("hi!");
    var4.setContent("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var13 = var4.getContent();
    var4.setType("geo.google.datamodel.GeoUsAddress@7fee135b[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@6738fcfa[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@4e68b607[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "geo.google.GeoException: geo.google.GeoException: "+ "'", var13.equals("geo.google.GeoException: geo.google.GeoException: "));

  }

  public void test310() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test310");


    geo.google.datamodel.GeoCoordinate var0 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var1 = new geo.google.datamodel.GeoCoordinate();
    double var2 = var1.getLongitude();
    double var3 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var0, var1);
    geo.google.datamodel.GeoAltitude var4 = var1.getAltitude();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName var5 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName();
    java.util.Map var6 = var5.getOtherAttributes();
    var5.setCode("");
    var5.setType("geo.google.GeoException: geo.google.GeoException: ");
    boolean var11 = var1.equals((java.lang.Object)var5);
    java.lang.String var12 = var5.getCode();
    java.lang.String var13 = var5.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + ""+ "'", var12.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + ""+ "'", var13.equals(""));

  }

  public void test311() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test311");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier();
    var0.setContent("G_GEO_UNKOWN_STATUS");
    java.lang.String var3 = var0.getType();
    var0.setContent("");
    var0.setType("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var8 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test312() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test312");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeName var6 = var0.createPostOfficePostOfficeName();
    java.util.Map var7 = var6.getOtherAttributes();
    var6.setType("geo.google.GeoException: ");
    java.lang.String var10 = var6.getType();
    java.lang.String var11 = var6.getContent();
    java.lang.String var12 = var6.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + "geo.google.GeoException: "+ "'", var10.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test313() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test313");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var1 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberPrefix var2 = var0.createPostBoxPostBoxNumberPrefix();
    java.lang.String var3 = var2.getContent();
    java.lang.String var4 = var2.getContent();
    java.util.Map var5 = var2.getOtherAttributes();
    java.lang.String var6 = var2.getNumberPrefixSeparator();
    java.lang.String var7 = var2.getCode();
    java.lang.String var8 = var2.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test314() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test314");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var6 = var5.getAddressLine();
    java.util.List var7 = var5.getAny();
    var4.setPostBox(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var10 = var9.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var11 = var9.createDependentLocalityTypeDependentLocalityNumber();
    var11.setCode("G_GEO_UNKOWN_STATUS");
    var4.setDependentLocalityNumber(var11);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var15 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var16 = var15.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var17 = var15.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var18 = var15.createDependentLocalityTypeDependentLocalityNumber();
    var18.setContent("");
    var18.setNameNumberOccurrence("");
    var18.setContent("hi!");
    var4.setDependentLocalityNumber(var18);
    java.util.List var26 = var4.getAddressLine();
    var4.setIndicator("geo.google.datamodel.GeoAddress@4244bb8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var29 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var30 = var29.getPostalCode();
    java.util.List var31 = var29.getDependentLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.Department var32 = new oasis.names.tc.ciq.xsdschema.xal._2.Department();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var33 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var34 = var33.createPremise();
    java.util.List var35 = var34.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var36 = var34.getFirm();
    var34.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var39 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var40 = var39.createPremise();
    java.lang.String var41 = var40.getPremiseThoroughfareConnector();
    var34.setPremise(var40);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var43 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var44 = var43.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var45 = var43.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var46 = var43.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var47 = var46.getType();
    java.util.List var48 = var46.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var49 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var50 = var49.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var51 = var49.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var52 = var49.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var53 = var49.createThoroughfare();
    java.util.List var54 = var53.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var55 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var56 = var55.getPostTown();
    var53.setPostalCode(var55);
    var46.setPostalCode(var55);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var59 = var46.getPostalCode();
    var34.setPostalCode(var59);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var61 = var59.getPostTown();
    var32.setPostalCode(var59);
    java.util.List var63 = var59.getAddressLine();
    var29.setPostalCode(var59);
    var4.setDependentLocality(var29);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var66 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType();
    java.util.List var67 = var66.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var68 = var66.getPostBox();
    java.util.Map var69 = var66.getOtherAttributes();
    var29.setPostalRoute(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);

  }

  public void test315() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test315");


    com.google.earth.kml._2.PointType var0 = new com.google.earth.kml._2.PointType();
    var0.setTessellate((java.lang.Boolean)true);
    var0.setExtrude((java.lang.Boolean)false);
    java.lang.Boolean var5 = var0.isExtrude();
    var0.setCoordinates("Uknown Status");
    var0.setCoordinates("");
    java.lang.Boolean var10 = var0.isExtrude();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + false+ "'", var5.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + false+ "'", var10.equals(false));

  }

  public void test316() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test316");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode();
    java.util.Map var1 = var0.getOtherAttributes();
    var0.setCode("Uknown Status");
    var0.setContent("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var6 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "Uknown Status"+ "'", var6.equals("Uknown Status"));

  }

  public void test317() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test317");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude();
    java.util.Map var1 = var0.getOtherAttributes();
    java.lang.String var2 = var0.getContent();
    java.lang.String var3 = var0.getContent();
    var0.setCode("geo.google.datamodel.GeoAddress@3c53f765[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=hi!\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setCode("geo.google.datamodel.GeoAddress@357d260d[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var8 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test318() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test318");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var3 = var0.getThoroughfarePostDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var5 = var4.getCode();
    java.lang.String var6 = var4.getCode();
    var0.setThoroughfareTrailingType(var4);
    java.util.List var8 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var9 = var0.getFirm();
    java.lang.String var10 = var0.getType();
    java.lang.String var11 = var0.getDependentThoroughfaresType();
    java.lang.String var12 = var0.getDependentThoroughfaresType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test319() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test319");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType();
    java.lang.String var2 = var1.getCode();
    var0.setThoroughfarePreDirection(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var4 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var6 = var5.getCode();
    java.lang.String var7 = var5.getCode();
    var4.setThoroughfareTrailingType(var5);
    java.util.List var9 = var4.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType();
    java.lang.String var11 = var10.getContent();
    var4.setThoroughfarePreDirection(var10);
    var0.setThoroughfarePreDirection(var10);
    java.lang.String var14 = var10.getCode();
    var10.setCode("geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);

  }

  public void test320() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test320");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var4 = var0.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var5 = var0.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var6 = var0.createAddressDetailsPostalServiceElementsKeyLineCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownName var7 = var0.createPostalCodePostTownPostTownName();
    var7.setType("G_GEO_UNKOWN_STATUS");
    java.lang.String var10 = var7.getCode();
    var7.setCode("Uknown Status");
    var7.setType("G_GEO_UNKOWN_STATUS");
    var7.setCode("geo.google.datamodel.GeoUsAddress@49269587[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@422f796[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@13ac9af9[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test321() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test321");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var1 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var2 = var0.createSubPremiseTypeSubPremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var3 = var0.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var4 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseName var5 = var0.createPremisePremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var6 = var0.createBuildingNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberPrefix var7 = var0.createPostBoxPostBoxNumberPrefix();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test322() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test322");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    var5.setIndicator("G_GEO_UNKOWN_STATUS");
    var5.setType("hi!");
    var5.setType("geo.google.GeoException: ");
    var5.setIndicatorOccurence("hi!");
    var5.setSeparator("geo.google.GeoException: ");
    java.lang.String var16 = var5.getIndicatorOccurence();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo var17 = new oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeTo();
    var5.setPremiseNumberRangeTo(var17);
    java.util.List var19 = var17.getPremiseNumberSuffix();
    java.util.List var20 = var17.getPremiseNumber();
    java.util.List var21 = var17.getPremiseNumberSuffix();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var16 + "' != '" + "hi!"+ "'", var16.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);

  }

  public void test323() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test323");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var2 = var0.createPostalCodePostTownPostTownSuffix();
    var2.setContent("G_GEO_UNKOWN_STATUS");
    var2.setCode("hi!");
    var2.setCode("geo.google.datamodel.GeoAddress@342bba4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test324() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test324");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    var0.setNumberRangeOccurrence("geo.google.GeoException: geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberFrom var3 = var0.getThoroughfareNumberFrom();
    java.lang.String var4 = var0.getIndicatorOccurrence();
    var0.setRangeType("hi!");
    var0.setIndicator("geo.google.datamodel.GeoUsAddress@7373258[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@38ca331b[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@62e14ebd[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test325() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test325");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoCoordinate var1 = geo.google.mapping.MappingUtils.stringToCoordinate("geo.google.datamodel.GeoUsAddress@1a4a00a5[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@41778a2e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@25d14add[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@70705e1e[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@61333d3d[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
    }

  }

  public void test326() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test326");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var3 = var0.createThoroughfareLeadingTypeType();
    var3.setType("G_GEO_UNKOWN_STATUS");
    var3.setContent("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var8 = var3.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var8.equals("G_GEO_UNKOWN_STATUS"));

  }

  public void test327() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test327");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var2 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var4.setThoroughfarePostDirection(var5);
    java.util.List var7 = var4.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var8 = var4.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var9 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var11 = var10.getCode();
    java.lang.String var12 = var10.getCode();
    var9.setThoroughfareTrailingType(var10);
    var4.setDependentThoroughfare(var9);
    var3.setDependentThoroughfare(var9);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var16 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType();
    java.lang.String var18 = var17.getCode();
    var16.setThoroughfarePreDirection(var17);
    var17.setContent("geo.google.GeoException: geo.google.GeoException: ");
    var9.setThoroughfarePreDirection(var17);
    java.lang.String var23 = var17.getContent();
    java.lang.String var24 = var17.getCode();
    java.lang.String var25 = var17.getCode();
    java.util.Map var26 = var17.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var23 + "' != '" + "geo.google.GeoException: geo.google.GeoException: "+ "'", var23.equals("geo.google.GeoException: geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);

  }

  public void test328() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test328");


    geo.google.datamodel.GeoAddress var0 = new geo.google.datamodel.GeoAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var1 = var0.getAddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var2 = var0.getAddressDetails();
    java.lang.String var3 = var0.toString();
    var0.setAddressLine("geo.google.datamodel.GeoAddress@70027021[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    geo.google.datamodel.GeoCoordinate var6 = var0.getCoordinate();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "geo.google.datamodel.GeoAddress@43c3c9d3[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var3.equals("geo.google.datamodel.GeoAddress@43c3c9d3[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test329() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test329");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var6 = var0.createAddressDetailsPostalServiceElementsAddressLatitude();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var7 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var8 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test330() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test330");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var5 = var4.getPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var6 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var8 = var7.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var9 = var7.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var10 = var7.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var11 = var7.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var12 = var7.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var13 = var7.createFirmType();
    var6.setFirm(var13);
    var6.setType("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var17 = var6.getPostalCode();
    java.lang.String var18 = var6.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var19 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var20 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var21 = var20.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var22 = var20.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var23 = var20.createPostalCode();
    var19.setPostalCode(var23);
    var6.setPostalCode(var23);
    var4.setPostalCode(var23);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var28 = var27.createPremise();
    java.util.List var29 = var28.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var30 = var28.getFirm();
    var28.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var33 = var28.getPremiseLocation();
    var4.setPremise(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);

  }

  public void test331() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test331");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseName var3 = var0.createPremisePremiseName();
    var3.setContent("");
    var3.setTypeOccurrence("geo.google.GeoException: ");
    var3.setContent("hi!");
    var3.setCode("geo.google.datamodel.GeoAddress@6921ddb6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var12 = var3.getContent();
    java.util.Map var13 = var3.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!"+ "'", var12.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);

  }

  public void test332() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test332");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    java.util.List var3 = var0.getThoroughfareNumberSuffix();
    var0.setDependentThoroughfaresIndicator("hi!");
    var0.setDependentThoroughfaresType("");
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType();
    java.lang.String var9 = var8.getContent();
    var8.setContent("Uknown Status");
    java.util.Map var12 = var8.getOtherAttributes();
    var0.setThoroughfarePreDirection(var8);
    var0.setDependentThoroughfaresIndicator("geo.google.datamodel.GeoAddress@e474122[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);

  }

  public void test333() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test333");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var5 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var6 = var5.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var7 = var5.getAddressLines();
    var5.setUsage("");
    javax.xml.bind.JAXBElement var10 = var0.createAddressDetails(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var11 = var0.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var12 = var0.createSubPremiseType();
    java.util.List var13 = var12.getSubPremiseNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);

  }

  public void test334() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test334");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var6 = var5.getAddressLine();
    java.util.List var7 = var5.getAny();
    var4.setPostBox(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var9 = var4.getPremise();
    java.util.Map var10 = var4.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var11 = var4.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var13 = var12.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var14 = var12.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var15 = var12.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var16 = var12.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var17 = var12.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var18 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var19 = var18.getSubPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var20 = var18.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var21 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    java.util.Map var22 = var21.getOtherAttributes();
    var21.setType("G_GEO_UNKOWN_STATUS");
    var18.setMailStop(var21);
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var26 = var21.getMailStopName();
    var17.setMailStop(var21);
    var4.setPremise(var17);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var29 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var30 = var29.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var31 = var29.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var32 = var29.createDependentLocalityTypeDependentLocalityNumber();
    var32.setContent("");
    var32.setNameNumberOccurrence("");
    var32.setContent("hi!");
    var32.setNameNumberOccurrence("");
    var32.setContent("G_GEO_UNKOWN_STATUS");
    var4.setDependentLocalityNumber(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);

  }

  public void test335() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test335");


    geo.google.datamodel.GeoCoordinate var7 = new geo.google.datamodel.GeoCoordinate();
    double var8 = var7.getLongitude();
    geo.google.datamodel.GeoCoordinate var9 = new geo.google.datamodel.GeoCoordinate();
    double var10 = var9.getLongitude();
    double var11 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var7, var9);
    double var12 = var9.getLatitude();
    var9.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var16 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var17 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var9, var16);
    java.lang.String var18 = var17.toAddressLine();
    java.lang.String var19 = var17.getCountry();
    geo.google.datamodel.GeoCoordinate var20 = new geo.google.datamodel.GeoCoordinate();
    double var21 = var20.getLongitude();
    geo.google.datamodel.GeoCoordinate var22 = new geo.google.datamodel.GeoCoordinate();
    double var23 = var22.getLongitude();
    double var24 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var20, var22);
    geo.google.datamodel.GeoCoordinate var25 = new geo.google.datamodel.GeoCoordinate();
    double var26 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var20, var25);
    geo.google.datamodel.GeoStatusCode var29 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var30 = new geo.google.GeoException("", var29);
    boolean var31 = var20.equals((java.lang.Object)var29);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var32 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var33 = var32.createPremise();
    java.util.List var34 = var33.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var35 = var33.getFirm();
    var33.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var38 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var39 = var38.createPremise();
    java.lang.String var40 = var39.getPremiseThoroughfareConnector();
    var33.setPremise(var39);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var42 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var43 = var42.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var44 = var42.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var45 = var42.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var46 = var45.getType();
    java.util.List var47 = var45.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var48 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var49 = var48.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var50 = var48.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var51 = var48.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var52 = var48.createThoroughfare();
    java.util.List var53 = var52.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var54 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var55 = var54.getPostTown();
    var52.setPostalCode(var54);
    var45.setPostalCode(var54);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var58 = var45.getPostalCode();
    var33.setPostalCode(var58);
    boolean var60 = var20.equals((java.lang.Object)var33);
    geo.google.datamodel.GeoCoordinate var61 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var62 = new geo.google.datamodel.GeoCoordinate();
    double var63 = var62.getLongitude();
    double var64 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var61, var62);
    geo.google.datamodel.GeoAltitude var65 = var62.getAltitude();
    geo.google.datamodel.GeoCoordinate var66 = new geo.google.datamodel.GeoCoordinate();
    geo.google.datamodel.GeoCoordinate var67 = new geo.google.datamodel.GeoCoordinate();
    double var68 = var67.getLongitude();
    double var69 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var66, var67);
    double var70 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var62, var67);
    double var71 = geo.google.datamodel.GeoUtils.distanceBetweenInMiles(var20, var67);
    geo.google.mapping.PointToCoordinateFunctor var72 = new geo.google.mapping.PointToCoordinateFunctor();
    com.google.earth.kml._2.PointType var73 = new com.google.earth.kml._2.PointType();
    var73.setTessellate((java.lang.Boolean)true);
    var73.setExtrude((java.lang.Boolean)false);
    geo.google.datamodel.GeoCoordinate var78 = var72.execute(var73);
    com.google.earth.kml._2.PointType var79 = new com.google.earth.kml._2.PointType();
    var79.setTessellate((java.lang.Boolean)true);
    java.lang.Boolean var82 = var79.isTessellate();
    geo.google.datamodel.GeoCoordinate var83 = var72.execute(var79);
    double var84 = geo.google.datamodel.GeoUtils.distanceBetweenInKm(var20, var83);
    boolean var85 = var17.equals((java.lang.Object)var83);
    java.lang.String var86 = var17.getAddressLine2();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var12 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + "geo.google.GeoException: , geo.google.GeoException: hi!,  UNKNOWN_LOCATION"+ "'", var18.equals("geo.google.GeoException: , geo.google.GeoException: hi!,  UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var19 + "' != '" + ""+ "'", var19.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var21 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var26 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var63 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var64 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var68 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var69 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var71 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var82 + "' != '" + true+ "'", var82.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var84 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var85 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var86 + "' != '" + "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var86.equals("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test336() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test336");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    var4.setCode("hi!");
    java.lang.String var7 = var4.getCode();
    java.lang.String var8 = var4.getCode();
    java.lang.String var9 = var4.getCode();
    var4.setType("geo.google.datamodel.GeoUsAddress@56cc18ee[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@7178ddc6[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@36282c5d[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));

  }

  public void test337() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test337");


    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var1 = var0.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var2 = var0.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var4 = var3.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var5 = var3.createPostBoxPostBoxNumberExtension();
    var0.setPostBoxNumberExtension(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var7 = var0.getPostBoxNumberExtension();
    java.util.List var8 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var9 = var0.getPostBoxNumberExtension();
    var9.setContent("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var12 = var9.getContent();
    java.lang.String var13 = var9.getContent();
    java.util.Map var14 = var9.getOtherAttributes();
    java.lang.String var15 = var9.getNumberExtensionSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "geo.google.GeoException: geo.google.GeoException: "+ "'", var12.equals("geo.google.GeoException: geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "geo.google.GeoException: geo.google.GeoException: "+ "'", var13.equals("geo.google.GeoException: geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);

  }

  public void test338() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test338");


    geo.google.datamodel.GeoStatusCode var1 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    boolean var3 = var1.equals((java.lang.Object)10L);
    java.lang.String var4 = var1.name();
    int var5 = var1.getCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var7 = var6.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var8 = var6.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var9 = var6.createAddressDetailsCountry();
    boolean var10 = var1.equals((java.lang.Object)var9);
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var11 = var9.getAdministrativeArea();
    java.util.List var12 = var9.getCountryNameCode();
    java.util.List var13 = var9.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var14 = var9.getLocality();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var4.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);

  }

  public void test339() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test339");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName();
    java.lang.String var1 = var0.getType();
    java.lang.String var2 = var0.getCode();
    java.lang.String var3 = var0.getType();
    java.lang.String var4 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test340() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test340");


    geo.google.mapping.XmlToAddressFunctor var0 = new geo.google.mapping.XmlToAddressFunctor();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.util.List var2 = var0.execute("geo.google.datamodel.GeoAddress@3c53f765[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type java.lang.RuntimeException");
    } catch (java.lang.RuntimeException e) {
      // Expected exception.
    }

  }

  public void test341() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test341");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var2 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var4 = var0.createSubPremiseTypeSubPremiseNumber();
    var4.setIndicator("hi!");
    var4.setNumberTypeOccurrence("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var9 = var4.getType();
    java.lang.String var10 = var4.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test342() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test342");


    geo.google.mapping.PointToCoordinateFunctor var0 = new geo.google.mapping.PointToCoordinateFunctor();
    com.google.earth.kml._2.PointType var1 = new com.google.earth.kml._2.PointType();
    var1.setTessellate((java.lang.Boolean)true);
    var1.setExtrude((java.lang.Boolean)false);
    geo.google.datamodel.GeoCoordinate var6 = var0.execute(var1);
    com.google.earth.kml._2.PointType var7 = new com.google.earth.kml._2.PointType();
    var7.setTessellate((java.lang.Boolean)true);
    java.lang.Boolean var10 = var7.isTessellate();
    geo.google.datamodel.GeoCoordinate var11 = var0.execute(var7);
    geo.google.mapping.FunctionChain var12 = geo.google.mapping.FunctionChain.getChain((geo.google.mapping.Functor)var0);
    com.google.earth.kml._2.PlacemarkType var13 = new com.google.earth.kml._2.PlacemarkType();
    var13.setAddress("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var16 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    java.lang.String var17 = var16.getValidToDate();
    var16.setAddressDetailsKey("hi!");
    var13.setAddressDetails(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var21 = var13.getAddressDetails();
    com.google.earth.kml._2.PointType var22 = new com.google.earth.kml._2.PointType();
    var22.setTessellate((java.lang.Boolean)true);
    var22.setExtrude((java.lang.Boolean)false);
    var13.setPoint(var22);
    geo.google.datamodel.GeoCoordinate var28 = var0.execute(var22);
    geo.google.mapping.FunctionChain var29 = geo.google.mapping.FunctionChain.getChain((geo.google.mapping.Functor)var0);
    geo.google.mapping.AddressToUsAddressFunctor var30 = new geo.google.mapping.AddressToUsAddressFunctor();
    geo.google.mapping.Functor[] var31 = new geo.google.mapping.Functor[] { var30};
    geo.google.mapping.FunctionChain var32 = new geo.google.mapping.FunctionChain(var31);
    geo.google.mapping.FunctionChain var33 = new geo.google.mapping.FunctionChain(var31);
    var29.setTail(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + true+ "'", var10.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);

  }

  public void test343() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test343");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var1 = var0.getSubPremiseNumberPrefix();
    java.util.List var2 = var0.getAny();
    java.util.List var3 = var0.getBuildingName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var5 = var4.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var6 = var4.createSubPremiseTypeSubPremiseLocation();
    var0.setSubPremiseLocation(var6);
    java.util.Map var8 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var9 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var10 = var9.getSubPremiseNumberPrefix();
    var9.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var14 = var13.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var15 = var13.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var16 = var15.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var18 = var17.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var19 = var17.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var20 = var17.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var21 = var17.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var22 = var17.createLargeMailUserTypeLargeMailUserIdentifier();
    var15.setLargeMailUserIdentifier(var22);
    java.lang.String var24 = var15.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var25 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var25.setIndicator("G_GEO_UNKOWN_STATUS");
    var15.setPostBox(var25);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var29 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var30 = var29.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var31 = var29.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var32 = var29.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var33 = var29.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var34 = var29.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var35 = var29.createFirmType();
    var25.setFirm(var35);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var37 = var35.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var38 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    var35.setMailStop(var38);
    var9.setMailStop(var38);
    var0.setMailStop(var38);
    java.lang.String var42 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var43 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var44 = var43.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var45 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var46 = var45.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var47 = var45.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var48 = var45.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var49 = var48.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var50 = var48.getPostOffice();
    java.lang.String var51 = var48.getUsageType();
    java.util.List var52 = var48.getAddressLine();
    var43.setSubAdministrativeArea(var48);
    java.util.Map var54 = var43.getOtherAttributes();
    var43.setUsageType("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.List var57 = var43.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var58 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var59 = var58.getSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var60 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var61 = var60.getAny();
    var58.setSubPremise(var60);
    java.util.List var63 = var58.getSubPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var64 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var65 = var64.createPremise();
    java.util.List var66 = var65.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var67 = var65.getFirm();
    var65.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var70 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var71 = var70.createPremise();
    java.lang.String var72 = var71.getPremiseThoroughfareConnector();
    var65.setPremise(var71);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var74 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var75 = var74.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var76 = var74.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var77 = var74.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var78 = var77.getType();
    java.util.List var79 = var77.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var80 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var81 = var80.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var82 = var80.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var83 = var80.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var84 = var80.createThoroughfare();
    java.util.List var85 = var84.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var86 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var87 = var86.getPostTown();
    var84.setPostalCode(var86);
    var77.setPostalCode(var86);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var90 = var77.getPostalCode();
    var65.setPostalCode(var90);
    var58.setPostalCode(var90);
    java.util.List var93 = var90.getAny();
    var43.setPostalCode(var90);
    var0.setPostalCode(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var87);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var93);

  }

  public void test344() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test344");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberSuffix var5 = var0.createSubPremiseTypeSubPremiseNumberSuffix();
    var5.setNumberSuffixSeparator("hi!");
    java.lang.String var8 = var5.getNumberSuffixSeparator();
    var5.setContent("geo.google.datamodel.GeoUsAddress@1f5bc05b[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@40b1a672[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@4f26a78c[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));

  }

  public void test345() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test345");


    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber();
    var0.setType("G_GEO_UNKOWN_STATUS");
    var0.setNumberType("hi!");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    java.util.Map var7 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test346() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test346");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.getMailStop();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var2 = var0.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var4 = var3.createPremise();
    java.util.List var5 = var4.getAddressLine();
    java.util.List var6 = var4.getAny();
    var4.setType("");
    var4.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var11 = var4.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var13 = var12.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var14 = var12.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var15 = var12.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var16 = var12.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var17 = var12.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var18 = var12.createFirmType();
    var4.setFirm(var18);
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var20 = var4.getMailStop();
    var4.setType("hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var23 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    java.util.Map var24 = var23.getOtherAttributes();
    var4.setMailStop(var23);
    var0.setMailStop(var23);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var27 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var28 = var27.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var29 = var27.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var30 = var27.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var31 = var27.createAddressDetailsPostalServiceElementsAddressLatitude();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var32 = var27.createMailStopTypeMailStopName();
    var23.setMailStopName(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);

  }

  public void test347() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test347");


    geo.google.mapping.PointToCoordinateFunctor var0 = geo.google.mapping.PointToCoordinateFunctor.getInstance();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var1.createPremise();
    java.util.List var3 = var2.getAddressLine();
    geo.google.mapping.FunctionChain var4 = new geo.google.mapping.FunctionChain(var3);
    geo.google.mapping.FunctionChain var5 = new geo.google.mapping.FunctionChain((geo.google.mapping.Functor)var0, var4);
    geo.google.mapping.PointToCoordinateFunctor var6 = geo.google.mapping.PointToCoordinateFunctor.getInstance();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var8 = var7.createPremise();
    java.util.List var9 = var8.getAddressLine();
    geo.google.mapping.FunctionChain var10 = new geo.google.mapping.FunctionChain(var9);
    geo.google.mapping.FunctionChain var11 = new geo.google.mapping.FunctionChain((geo.google.mapping.Functor)var6, var10);
    var5.setHead((geo.google.mapping.Functor)var6);
    geo.google.mapping.FunctionChain var13 = var5.getTail();
    geo.google.mapping.FunctionChain var14 = var13.getTail();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var0);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);

  }

  public void test348() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test348");


    oasis.names.tc.ciq.xsdschema.xal._2.Locality var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var2 = var1.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var3 = var1.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var4 = var1.createPostalCode();
    var0.setPostalCode(var4);
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var6 = var0.getLargeMailUser();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var7 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var8 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var8.setThoroughfarePostDirection(var9);
    java.util.List var11 = var8.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var12 = var8.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var13 = var8.getPostalCode();
    var7.setThoroughfare(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var15 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var16 = var15.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var17 = var15.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var19 = var18.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var20 = var18.createPostBoxPostBoxNumberExtension();
    var15.setPostBoxNumberExtension(var20);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var22 = var15.getPostBoxNumberExtension();
    java.util.List var23 = var15.getAny();
    var7.setPostBox(var15);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var25 = var15.getPostBoxNumber();
    var15.setType("geo.google.datamodel.GeoAddress@3efdbe46[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setPostBox(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);

  }

  public void test349() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test349");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown();
    var0.setType("hi!");
    java.util.Map var3 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var4 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var5 = var4.getPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var7 = var6.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var8 = var6.createPostalCodePostTownPostTownSuffix();
    var8.setContent("G_GEO_UNKOWN_STATUS");
    java.util.Map var11 = var8.getOtherAttributes();
    java.lang.String var12 = var8.getCode();
    java.lang.String var13 = var8.getContent();
    var4.setPostTownSuffix(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var15 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var16 = var15.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var17 = var15.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var18 = var15.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var19 = var15.createPostBoxPostBoxNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var20 = var15.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var21 = var15.createPostalCodePostTownPostTownSuffix();
    var4.setPostTownSuffix(var21);
    var0.setPostTownSuffix(var21);
    java.lang.String var24 = var21.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var13.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);

  }

  public void test350() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test350");


    com.google.earth.kml._2.PlacemarkType var0 = new com.google.earth.kml._2.PlacemarkType();
    var0.setAddress("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var3 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    java.lang.String var4 = var3.getValidToDate();
    var3.setAddressDetailsKey("hi!");
    var0.setAddressDetails(var3);
    var3.setAccuracy((java.lang.Integer)100);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test351() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test351");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber();
    var0.setNumberTypeOccurrence("hi!");
    var0.setIndicator("geo.google.GeoException: ");
    var0.setContent("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setIndicatorOccurrence("geo.google.datamodel.GeoAddress@123ed715[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setNumberTypeOccurrence("geo.google.datamodel.GeoAddress@2022df0c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=geo.google.datamodel.GeoAddress@2ea7c82[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _accuracy=UNKNOWN_LOCATION\n]");

  }

  public void test352() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test352");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    java.util.List var3 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.getThoroughfareLeadingType();
    java.util.List var5 = var0.getThoroughfareNumberOrThoroughfareNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var7 = var6.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var8 = var6.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var9 = var6.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var10 = var6.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var11 = var10.getPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var12 = var10.getDependentLocalityNumber();
    var0.setDependentLocality(var10);
    java.lang.String var14 = var0.getType();
    java.util.Map var15 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var16.setType("hi!");
    var0.setThoroughfarePostDirection(var16);
    var16.setCode("UNKNOWN_LOCATION");
    java.lang.String var22 = var16.getType();
    var16.setContent("geo.google.datamodel.GeoAddress@68f5ddd7[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "hi!"+ "'", var22.equals("hi!"));

  }

  public void test353() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test353");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var3 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownName var4 = var0.createPostalCodePostTownPostTownName();
    var4.setType("geo.google.datamodel.GeoAddress@2c8fa0b9[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var7 = var4.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test354() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test354");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityName();
    java.util.Map var1 = var0.getOtherAttributes();
    java.util.Map var2 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);

  }

  public void test355() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test355");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      org.w3c.dom.Document var1 = geo.google.utils.XmlUtils.parse("geo.google.datamodel.GeoUsAddress@2e935a48[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@4c0c44db[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@397cacde[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type org.xml.sax.SAXParseException");
    } catch (org.xml.sax.SAXParseException e) {
      // Expected exception.
    }

  }

  public void test356() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test356");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    var4.setCode("hi!");
    java.lang.String var7 = var4.getCode();
    java.lang.String var8 = var4.getCode();
    java.lang.String var9 = var4.getCode();
    java.lang.String var10 = var4.getContent();
    java.lang.String var11 = var4.getType();
    var4.setNumberPrefixSeparator("");
    java.lang.String var14 = var4.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);

  }

  public void test357() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test357");


    oasis.names.tc.ciq.xsdschema.xal._2.Locality var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var1 = var0.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.getPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.getPostalRoute();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var5 = var4.createPremise();
    java.util.List var6 = var5.getAny();
    var5.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var10 = var9.createPremise();
    java.util.List var11 = var10.getAny();
    var10.setType("");
    var5.setPremise(var10);
    java.lang.String var15 = var10.getPremiseDependencyType();
    var10.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.lang.String var18 = var10.getType();
    java.lang.String var19 = var10.getPremiseDependency();
    var0.setPremise(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var18 + "' != '" + ""+ "'", var18.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);

  }

  public void test358() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test358");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var2 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var4 = var0.createSubPremiseTypeSubPremiseNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = var0.createPostBox();
    java.util.Map var6 = var5.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var8 = var7.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var9 = var7.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var10 = var7.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var11 = var7.createPostBoxPostBoxNumberSuffix();
    java.lang.String var12 = var11.getNumberSuffixSeparator();
    var11.setNumberSuffixSeparator("geo.google.GeoException: geo.google.GeoException: ");
    var5.setPostBoxNumberSuffix(var11);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberPrefix var16 = var5.getPostBoxNumberPrefix();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);

  }

  public void test359() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test359");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAny();
    var1.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var5 = var1.getMailStop();
    var1.setPremiseDependencyType("");
    java.lang.String var8 = var1.getPremiseDependency();
    java.lang.String var9 = var1.getType();
    java.lang.String var10 = var1.getPremiseDependencyType();
    java.util.List var11 = var1.getPremiseName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + ""+ "'", var10.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);

  }

  public void test360() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test360");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber var4 = var0.createPremiseNumber();
    var4.setType("hi!");
    var4.setType("geo.google.GeoException: ");
    java.lang.String var9 = var4.getIndicatorOccurrence();
    var4.setType("geo.google.GeoException: ");
    var4.setNumberTypeOccurrence("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var14 = var4.getOtherAttributes();
    java.util.Map var15 = var4.getOtherAttributes();
    java.lang.String var16 = var4.getNumberType();
    java.lang.String var17 = var4.getNumberTypeOccurrence();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var17 + "' != '" + "geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var17.equals("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test361() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test361");


    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange();
    java.lang.String var1 = var0.getSeparator();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom var2 = new oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom();
    java.util.List var3 = var2.getPremiseNumber();
    java.util.List var4 = var2.getAddressLine();
    java.util.List var5 = var2.getPremiseNumberSuffix();
    var0.setPremiseNumberRangeFrom(var2);
    java.util.List var7 = var2.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test362() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test362");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber();
    var0.setCode("");
    java.lang.String var3 = var0.getIndicator();
    var0.setNumberType("G_GEO_UNKOWN_STATUS");
    var0.setNumberType("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setIndicator("geo.google.datamodel.GeoUsAddress@68ed4414[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@3110b2dd[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@3f4ee455[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test363() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test363");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var6 = var5.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var7 = var5.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var9 = var8.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var10 = var8.createPostBoxPostBoxNumberExtension();
    var5.setPostBoxNumberExtension(var10);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var12 = var5.getPostBoxNumberExtension();
    java.util.List var13 = var5.getAny();
    var4.setPostBox(var5);
    var4.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var17 = var4.getDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var18 = var4.getDependentLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var19 = var4.getPostBox();
    java.util.List var20 = var19.getAny();
    java.lang.String var21 = var19.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);

  }

  public void test364() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test364");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var2 = var0.getAddressLines();
    var0.setUsage("");
    var0.setUsage("hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var7 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var7.setThoroughfarePostDirection(var8);
    java.util.List var10 = var7.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var11 = var7.getThoroughfareLeadingType();
    var0.setThoroughfare(var7);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var13 = var7.getThoroughfarePreDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var14 = var7.getPostalCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);

  }

  public void test365() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test365");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address();
    java.lang.String var1 = var0.getContent();
    java.lang.String var2 = var0.getCode();
    java.lang.String var3 = var0.getContent();
    var0.setCode("hi!");
    var0.setContent("geo.google.datamodel.GeoAddress@49e11d13[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setType("Uknown Status");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test366() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test366");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    java.util.Map var1 = var0.getOtherAttributes();
    java.util.Map var2 = var0.getOtherAttributes();
    java.lang.String var3 = var0.getType();
    java.util.Map var4 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test367() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test367");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumber();
    var0.setCode("");
    var0.setNumberOccurrence("hi!");
    var0.setIndicatorOccurrence("");
    var0.setIndicatorOccurrence("Uknown Status");
    java.lang.String var9 = var0.getNumberOccurrence();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));

  }

  public void test368() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test368");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var5 = var0.createFirmType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var6 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var7 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test369() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test369");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    java.lang.String var1 = var0.getNumberRangeOccurrence();
    var0.setNumberRangeOccurrence("geo.google.datamodel.GeoUsAddress@541af6ab[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@36387fb0[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@3747179f[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);

  }

  public void test370() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test370");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    java.lang.String var4 = var3.getContent();
    var3.setType("G_GEO_UNKOWN_STATUS");
    var3.setType("geo.google.datamodel.GeoUsAddress@2e935a48[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@4c0c44db[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@397cacde[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test371() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test371");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    var4.setCode("hi!");
    java.lang.String var7 = var4.getCode();
    java.lang.String var8 = var4.getCode();
    java.lang.String var9 = var4.getCode();
    java.lang.String var10 = var4.getContent();
    java.lang.String var11 = var4.getType();
    java.lang.String var12 = var4.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "hi!"+ "'", var8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "hi!"+ "'", var9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + "hi!"+ "'", var12.equals("hi!"));

  }

  public void test372() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test372");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address();
    java.lang.String var1 = var0.getContent();
    java.lang.String var2 = var0.getCode();
    java.lang.String var3 = var0.getContent();
    var0.setCode("hi!");
    java.lang.String var6 = var0.getContent();
    java.lang.String var7 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));

  }

  public void test373() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test373");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var5.createPremise();
    java.lang.String var7 = var6.getPremiseThoroughfareConnector();
    java.util.List var8 = var6.getAny();
    java.util.List var9 = var6.getPremiseName();
    var4.setPremise(var6);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var11 = var6.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var12 = var6.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var13 = var6.getPremiseNumberRange();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test374() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test374");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.getMailStop();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var2 = var0.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var3 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var4 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    var3.setMailStop(var4);
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var6 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var7 = var6.getSubPremiseNumberPrefix();
    var6.setType("");
    var3.setSubPremise(var6);
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var11 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation();
    var11.setContent("geo.google.GeoException: geo.google.GeoException: ");
    var6.setSubPremiseLocation(var11);
    var0.setSubPremiseLocation(var11);
    java.lang.String var16 = var11.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);

  }

  public void test375() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test375");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var3 = var2.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var9 = var4.createLargeMailUserTypeLargeMailUserIdentifier();
    var2.setLargeMailUserIdentifier(var9);
    java.lang.String var11 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var12 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var12.setIndicator("G_GEO_UNKOWN_STATUS");
    var2.setPostBox(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var17 = var16.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var18 = var16.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var19 = var16.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var20 = var16.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var21 = var16.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var22 = var16.createFirmType();
    var12.setFirm(var22);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var24 = var22.getPostalCode();
    var22.setType("(default) Indicates to ignore an altitude specification");
    java.util.List var27 = var22.getAny();
    java.lang.String var28 = var22.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var29 = var22.getPostalCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var28 + "' != '" + "(default) Indicates to ignore an altitude specification"+ "'", var28.equals("(default) Indicates to ignore an altitude specification"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);

  }

  public void test376() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test376");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoStatusCode var1 = geo.google.datamodel.GeoStatusCode.valueOf("geo.google.datamodel.GeoUsAddress@7d645dcd[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@484a7e0b[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@12992941[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test377() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test377");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var2 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var3 = var0.createAddressDetailsPostalServiceElementsAddressLatitude();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLine var4 = var0.createAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var5 = var0.createSubPremiseType();
    var5.setType("geo.google.datamodel.GeoAddress@74fcfcca[\n  _coordinate=<null>\n  _addressDetails=oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails@d386dc7\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test378() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test378");


    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var1 = var0.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var2 = var0.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var4 = var3.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var5 = var3.createPostBoxPostBoxNumberExtension();
    var0.setPostBoxNumberExtension(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var7 = var0.getPostBoxNumberExtension();
    java.util.List var8 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var9 = var0.getPostBoxNumberExtension();
    var9.setContent("geo.google.GeoException: geo.google.GeoException: ");
    var9.setContent("hi!");
    java.lang.String var14 = var9.getNumberExtensionSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);

  }

  public void test379() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test379");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var1 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var3 = var2.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var4 = var2.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var5 = var4.getCode();
    java.util.Map var6 = var4.getOtherAttributes();
    var4.setCode("G_GEO_UNKOWN_STATUS");
    var0.setEndorsementLineCode(var4);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var10 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var11 = var10.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var13 = var12.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var14 = var12.createAddressDetailsPostalServiceElementsSortingCode();
    var10.setSortingCode(var14);
    var0.setSortingCode(var14);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var17 = var0.getAddressLatitude();
    java.util.List var18 = var0.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);

  }

  public void test380() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test380");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    java.util.List var3 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var5 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var7 = var6.getCode();
    java.lang.String var8 = var6.getCode();
    var5.setThoroughfareTrailingType(var6);
    var0.setDependentThoroughfare(var5);
    var0.setDependentThoroughfaresType("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var14 = var13.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var15 = var13.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var16 = var13.createThoroughfareLeadingTypeType();
    java.lang.String var17 = var16.getType();
    var0.setThoroughfareLeadingType(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var19 = var0.getDependentLocality();
    java.lang.String var20 = var0.getDependentThoroughfaresIndicator();
    java.util.List var21 = var0.getThoroughfareName();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var22 = var0.getDependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var23 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var24 = var23.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var25 = var23.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var26 = var23.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var27 = var23.createThoroughfareLeadingTypeType();
    java.lang.String var28 = var27.getContent();
    var27.setType("UNKNOWN_LOCATION");
    var22.setThoroughfareLeadingType(var27);
    var27.setCode("geo.google.datamodel.GeoUsAddress@ed45e29[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@1871dd5a[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@5b7b4c3f[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);

  }

  public void test381() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test381");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode();
    java.lang.String var1 = var0.getType();
    java.lang.String var2 = var0.getContent();
    java.util.Map var3 = var0.getOtherAttributes();
    java.util.Map var4 = var0.getOtherAttributes();
    var0.setCode("(default) Indicates to ignore an altitude specification");
    java.util.Map var7 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test382() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test382");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var1 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var1.setThoroughfarePostDirection(var2);
    java.util.List var4 = var1.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var5 = var1.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var1.getPostalCode();
    var0.setThoroughfare(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var9 = var8.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var10 = var8.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var11 = var8.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var12 = var8.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var13 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var14 = var13.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var15 = var13.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var17 = var16.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var18 = var16.createPostBoxPostBoxNumberExtension();
    var13.setPostBoxNumberExtension(var18);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var20 = var13.getPostBoxNumberExtension();
    java.util.List var21 = var13.getAny();
    var12.setPostBox(var13);
    var12.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var25 = var12.getDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var26 = var12.getDependentLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var27 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var28 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var29 = var28.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var30 = var28.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var31 = var28.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var32 = var28.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var33 = var28.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var34 = var28.createFirmType();
    var27.setFirm(var34);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var36 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var37 = var36.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var38 = var36.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var39 = var36.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var40 = var36.createThoroughfare();
    java.util.List var41 = var40.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var42 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var43 = var42.getPostTown();
    var40.setPostalCode(var42);
    var34.setPostalCode(var42);
    var12.setPostalCode(var42);
    var1.setPostalCode(var42);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var48 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var49 = var48.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var50 = var48.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var51 = var48.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var52 = var48.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var53 = var48.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var54 = var48.createLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var55 = var48.createThoroughfarePreDirectionType();
    var55.setCode("geo.google.datamodel.GeoAddress@12dfb6a6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var1.setThoroughfarePreDirection(var55);
    java.util.List var59 = var1.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);

  }

  public void test383() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test383");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var2 = var0.createSubPremiseTypeSubPremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var3 = var0.createSubPremiseType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumber var4 = var0.createPostalCodePostalCodeNumber();
    var4.setType("G_GEO_UNKOWN_STATUS, geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n] geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test384() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test384");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName();
    java.util.Map var1 = var0.getOtherAttributes();
    var0.setContent("");
    java.lang.String var4 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test385() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test385");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    java.util.List var1 = var0.getAny();
    java.util.List var2 = var0.getAny();
    java.util.List var3 = var0.getAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var6 = var4.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var7 = var4.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var8 = var4.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var9 = var4.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    java.util.Map var10 = var9.getOtherAttributes();
    java.lang.String var11 = var9.getCode();
    var0.setAddressLongitudeDirection(var9);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var13 = var0.getAddressLongitude();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var14 = var0.getAddressLongitude();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var15 = var0.getBarcode();
    java.lang.String var16 = var0.getType();
    java.util.List var17 = var0.getSupplementaryPostalServiceData();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);

  }

  public void test386() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test386");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    java.util.List var3 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.getThoroughfareLeadingType();
    java.util.List var5 = var0.getThoroughfareNumberOrThoroughfareNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var7 = var6.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var8 = var6.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var9 = var6.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var10 = var6.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var11 = var10.getPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var12 = var10.getDependentLocalityNumber();
    var0.setDependentLocality(var10);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var14 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var15 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var14.setThoroughfarePostDirection(var15);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var17 = var14.getThoroughfarePostDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var19 = var18.getCode();
    java.lang.String var20 = var18.getCode();
    var14.setThoroughfareTrailingType(var18);
    java.util.List var22 = var14.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var23 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var24 = var23.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var25 = var23.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var26 = var23.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var27 = var23.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var28 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var29 = var28.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var30 = var28.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var31 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var32 = var31.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var33 = var31.createPostBoxPostBoxNumberExtension();
    var28.setPostBoxNumberExtension(var33);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var35 = var28.getPostBoxNumberExtension();
    java.util.List var36 = var28.getAny();
    var27.setPostBox(var28);
    var27.setType("");
    var14.setDependentLocality(var27);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var41 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var42 = var41.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var43 = var41.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var44 = var41.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var45 = var41.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var46 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var47 = var46.getAddressLine();
    java.util.List var48 = var46.getAny();
    var45.setPostBox(var46);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var50 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var45.setPostBox(var50);
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var52 = var45.getDependentLocalityNumber();
    var27.setDependentLocality(var45);
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var54 = var45.getLargeMailUser();
    var10.setDependentLocality(var45);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var56 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType();
    java.util.List var57 = var56.getAddressLine();
    java.util.List var58 = var56.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var59 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var60 = var59.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var61 = var59.getPostalCode();
    var56.setPostBox(var59);
    var10.setPostBox(var59);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberPrefix var64 = var59.getPostBoxNumberPrefix();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var64);

  }

  public void test387() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test387");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var3 = var1.getFirm();
    var1.setType("(default) Indicates to ignore an altitude specification");
    java.util.List var6 = var1.getSubPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var7 = var1.getMailStop();
    java.util.List var8 = var1.getPremiseName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test388() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test388");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.createThoroughfareLeadingTypeType();
    var4.setContent("(default) Indicates to ignore an altitude specification");
    java.lang.String var7 = var4.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test389() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test389");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    java.util.List var4 = var3.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var6 = var5.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var7 = var5.createPostOffice();
    java.util.List var8 = var7.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var9 = var7.getPostOfficeNumber();
    var7.setType("G_GEO_UNKOWN_STATUS");
    java.util.List var12 = var7.getPostOfficeName();
    var3.setPostOffice(var7);
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var14 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var15 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var16 = var15.createPremise();
    java.util.List var17 = var16.getAddressLine();
    java.util.List var18 = var16.getAny();
    var16.setType("");
    var16.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var23 = var16.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var24 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var25 = var24.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var26 = var24.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var27 = var24.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var28 = var24.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var29 = var24.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var30 = var24.createFirmType();
    var16.setFirm(var30);
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var32 = var16.getMailStop();
    var16.setType("hi!");
    var14.setPremise(var16);
    var3.setLocality(var14);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var37 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var38 = var37.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var39 = var37.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var40 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var41 = var40.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var42 = var40.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var43 = var40.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var44 = var40.createLargeMailUserTypeLargeMailUserIdentifier();
    java.lang.String var45 = var44.getIndicator();
    var39.setLargeMailUserIdentifier(var44);
    java.util.List var47 = var39.getBuildingName();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var48 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var49 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var48.setThoroughfarePostDirection(var49);
    var39.setThoroughfare(var48);
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var52 = var39.getLargeMailUserIdentifier();
    var14.setLargeMailUser(var39);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var54 = var14.getThoroughfare();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);

  }

  public void test390() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test390");


    geo.google.GeoException var1 = new geo.google.GeoException("geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    geo.google.GeoException var4 = new geo.google.GeoException("hi!");
    geo.google.datamodel.GeoStatusCode var7 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var8 = new geo.google.GeoException("", var7);
    java.lang.String var9 = var8.toString();
    geo.google.datamodel.GeoStatusCode var13 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var14 = new geo.google.GeoException("", var13);
    geo.google.datamodel.GeoStatusCode var17 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var18 = new geo.google.GeoException("", var17);
    geo.google.GeoException var19 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var14, var17);
    var8.addSuppressed((java.lang.Throwable)var19);
    var4.addSuppressed((java.lang.Throwable)var8);
    geo.google.datamodel.GeoStatusCode var25 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var26 = new geo.google.GeoException("", var25);
    java.lang.String var27 = var26.toString();
    geo.google.datamodel.GeoStatusCode var31 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var32 = new geo.google.GeoException("", var31);
    geo.google.datamodel.GeoStatusCode var35 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var36 = new geo.google.GeoException("", var35);
    geo.google.GeoException var37 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var32, var35);
    var26.addSuppressed((java.lang.Throwable)var37);
    geo.google.datamodel.GeoStatusCode var40 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    boolean var42 = var40.equals((java.lang.Object)10L);
    java.lang.String var43 = var40.name();
    int var44 = var40.getCode();
    geo.google.GeoException var45 = new geo.google.GeoException("", (java.lang.Throwable)var26, var40);
    java.lang.String var46 = var40.getDescription();
    geo.google.GeoException var47 = new geo.google.GeoException("Uknown Status", (java.lang.Throwable)var4, var40);
    geo.google.datamodel.GeoStatusCode var53 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var54 = new geo.google.GeoException("", var53);
    java.lang.String var55 = var54.toString();
    geo.google.datamodel.GeoStatusCode var59 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var60 = new geo.google.GeoException("", var59);
    geo.google.datamodel.GeoStatusCode var63 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var64 = new geo.google.GeoException("", var63);
    geo.google.GeoException var65 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var60, var63);
    var54.addSuppressed((java.lang.Throwable)var65);
    geo.google.datamodel.GeoStatusCode var68 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    boolean var70 = var68.equals((java.lang.Object)10L);
    java.lang.String var71 = var68.name();
    int var72 = var68.getCode();
    geo.google.GeoException var73 = new geo.google.GeoException("", (java.lang.Throwable)var54, var68);
    geo.google.GeoException var74 = new geo.google.GeoException("(default) Indicates to ignore an altitude specification", (java.lang.Throwable)var73);
    geo.google.datamodel.GeoStatusCode var78 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var79 = new geo.google.GeoException("", var78);
    geo.google.datamodel.GeoStatusCode var82 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var83 = new geo.google.GeoException("", var82);
    geo.google.GeoException var84 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var79, var82);
    geo.google.GeoException var85 = new geo.google.GeoException((java.lang.Throwable)var84);
    geo.google.datamodel.GeoStatusCode var86 = var84.getStatus();
    geo.google.GeoException var87 = new geo.google.GeoException("hi!", (java.lang.Throwable)var73, var86);
    geo.google.GeoException var88 = new geo.google.GeoException((java.lang.Throwable)var87);
    var4.addSuppressed((java.lang.Throwable)var87);
    var1.addSuppressed((java.lang.Throwable)var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + "geo.google.GeoException: "+ "'", var9.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "geo.google.GeoException: "+ "'", var27.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var43 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var43.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var44 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var46 + "' != '" + "Uknown Status"+ "'", var46.equals("Uknown Status"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var55 + "' != '" + "geo.google.GeoException: "+ "'", var55.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var71 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var71.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var72 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var86);

  }

  public void test391() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test391");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberSuffix var5 = var0.createSubPremiseTypeSubPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var6 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var7 = var0.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    var7.setContent("");
    java.util.Map var10 = var7.getOtherAttributes();
    var7.setCode("geo.google.datamodel.GeoAddress@757534b9[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);

  }

  public void test392() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test392");


    geo.google.datamodel.GeoAltitude var0 = new geo.google.datamodel.GeoAltitude();
    geo.google.datamodel.GeoAltitude var2 = new geo.google.datamodel.GeoAltitude(10.0d);
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var3 = var2.getMode();
    var0.setMode(var3);
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var5 = var0.getMode();
    double var6 = var0.getAltitude();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == 0.0d);

  }

  public void test393() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test393");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var6 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var7 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var8 = var0.createPostalCodePostTown();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLine var9 = var0.createAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var10 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.XAL var11 = var0.createXAL();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitude var12 = var0.createAddressDetailsPostalServiceElementsAddressLongitude();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var13 = var0.createPostalCodePostTownPostTownSuffix();
    var13.setContent("geo.google.datamodel.GeoAddress@5ff907ee[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);

  }

  public void test394() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test394");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var5 = var0.createAddressLinesType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var6 = var0.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName var7 = var0.createAdministrativeAreaSubAdministrativeAreaSubAdministrativeAreaName();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var8 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName var9 = var0.createAdministrativeAreaSubAdministrativeAreaSubAdministrativeAreaName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var10 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var11 = var0.createThoroughfareDependentThoroughfare();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);

  }

  public void test395() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test395");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      com.google.earth.kml._2.AltitudeModeType var1 = com.google.earth.kml._2.AltitudeModeType.fromValue("geo.google.datamodel.GeoAddress@51a3d602[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=hi!\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type java.lang.IllegalArgumentException");
    } catch (java.lang.IllegalArgumentException e) {
      // Expected exception.
    }

  }

  public void test396() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test396");


    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var2 = var1.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var3 = var1.createPostOffice();
    java.util.List var4 = var3.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var5 = var3.getPostOfficeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var6 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var7 = var6.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var8 = var6.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var10 = var9.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var11 = var9.createPostBoxPostBoxNumberExtension();
    var6.setPostBoxNumberExtension(var11);
    var3.setPostBox(var6);
    var0.setPostOffice(var3);
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var15 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var16 = var15.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var17 = var15.getPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var18 = var15.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var19 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var20 = var19.getAddressLine();
    var15.setPostBox(var19);
    var0.setLocality(var15);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var23 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var24 = var23.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var25 = var23.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var26 = var23.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var27 = var23.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var28 = var23.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var29 = var23.createPostOffice();
    java.lang.String var30 = var29.getIndicator();
    java.util.List var31 = var29.getAny();
    var15.setPostOffice(var29);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var33 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var34 = var33.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var35 = var33.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var36 = var33.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var37 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var38 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var37.setThoroughfarePostDirection(var38);
    java.util.List var40 = var37.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var41 = var37.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var42 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var43 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var44 = var43.getCode();
    java.lang.String var45 = var43.getCode();
    var42.setThoroughfareTrailingType(var43);
    var37.setDependentThoroughfare(var42);
    var36.setDependentThoroughfare(var42);
    var15.setThoroughfare(var36);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var50 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var51 = var50.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var52 = var50.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var53 = var50.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var54 = var50.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var55 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var56 = var55.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var57 = var55.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var58 = var55.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var59 = var55.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var60 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var61 = var60.createPremise();
    java.lang.String var62 = var61.getPremiseThoroughfareConnector();
    java.util.List var63 = var61.getAny();
    java.util.List var64 = var61.getPremiseName();
    var59.setPremise(var61);
    var54.setThoroughfare(var59);
    var15.setThoroughfare(var59);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var68 = var59.getThoroughfarePostDirection();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var59);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var68);

  }

  public void test397() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test397");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var3 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var4 = var0.createPostBoxPostBoxNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserName var5 = var0.createLargeMailUserTypeLargeMailUserName();
    var5.setType("G_GEO_UNKOWN_STATUS");
    java.lang.String var8 = var5.getCode();
    java.lang.String var9 = var5.getCode();
    var5.setContent("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var12 = var5.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test398() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test398");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    java.util.List var1 = var0.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var2 = var0.getDependentLocality();
    var0.setDependentThoroughfaresType("G_GEO_UNKOWN_STATUS");
    java.util.List var5 = var0.getThoroughfareNumberOrThoroughfareNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var6 = var0.getThoroughfarePreDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var7 = var0.getThoroughfarePostDirection();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test399() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test399");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeName var6 = var0.createPostOfficePostOfficeName();
    java.util.Map var7 = var6.getOtherAttributes();
    java.lang.String var8 = var6.getContent();
    java.lang.String var9 = var6.getContent();
    var6.setCode("geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var6.setContent("geo.google.datamodel.GeoAddress@e6d7be1[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var14 = var6.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + "geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var14.equals("geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test400() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test400");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    var3.setContent("");
    var3.setNameNumberOccurrence("");
    java.lang.String var8 = var3.getNameNumberOccurrence();
    java.lang.String var9 = var3.getNameNumberOccurrence();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + ""+ "'", var8.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + ""+ "'", var9.equals(""));

  }

  public void test401() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test401");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType();
    java.util.Map var1 = var0.getOtherAttributes();
    var0.setContent("hi!");
    java.lang.String var4 = var0.getCode();
    var0.setType("geo.google.datamodel.GeoUsAddress@1a4a00a5[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@70705e1e[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@61333d3d[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test402() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test402");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber();
    var0.setContent("geo.google.GeoException: geo.google.GeoException: ");
    var0.setContent("G_GEO_UNKOWN_STATUS");
    var0.setContent("hi!");
    java.util.Map var7 = var0.getOtherAttributes();
    var0.setCode("geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test403() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test403");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var2 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var3 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var4 = var0.createSubPremiseTypeSubPremiseNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = var0.createPostBox();
    java.util.Map var6 = var5.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var8 = var7.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var9 = var7.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var10 = var7.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var11 = var7.createPostBoxPostBoxNumberSuffix();
    java.lang.String var12 = var11.getNumberSuffixSeparator();
    var11.setNumberSuffixSeparator("geo.google.GeoException: geo.google.GeoException: ");
    var5.setPostBoxNumberSuffix(var11);
    java.util.Map var16 = var11.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);

  }

  public void test404() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test404");


    com.google.earth.kml._2.ObjectFactory var0 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var1 = var0.createResponseType();
    com.google.earth.kml._2.ResponseType var2 = var0.createResponseType();
    com.google.earth.kml._2.PointType var3 = var0.createPointType();
    com.google.earth.kml._2.KmlType var4 = var0.createKmlType();
    geo.google.mapping.PointToCoordinateFunctor var5 = new geo.google.mapping.PointToCoordinateFunctor();
    com.google.earth.kml._2.PointType var6 = new com.google.earth.kml._2.PointType();
    var6.setTessellate((java.lang.Boolean)true);
    var6.setExtrude((java.lang.Boolean)false);
    geo.google.datamodel.GeoCoordinate var11 = var5.execute(var6);
    com.google.earth.kml._2.PointType var12 = new com.google.earth.kml._2.PointType();
    var12.setTessellate((java.lang.Boolean)true);
    java.lang.Boolean var15 = var12.isTessellate();
    geo.google.datamodel.GeoCoordinate var16 = var5.execute(var12);
    javax.xml.bind.JAXBElement var17 = var0.createPoint(var12);
    com.google.earth.kml._2.PointType var18 = new com.google.earth.kml._2.PointType();
    var18.setExtrude((java.lang.Boolean)true);
    javax.xml.bind.JAXBElement var21 = var0.createPoint(var18);
    java.lang.Boolean var22 = var18.isTessellate();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var15 + "' != '" + true+ "'", var15.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);

  }

  public void test405() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test405");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var3 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var4 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var5 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var6 = var5.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var7 = var5.getAddressLines();
    var5.setUsage("");
    javax.xml.bind.JAXBElement var10 = var0.createAddressDetails(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var11 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var12 = var11.getIndicator();
    java.lang.String var13 = var11.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var15 = var14.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var16 = var14.createPostOffice();
    var11.setPostOffice(var16);
    var5.setAdministrativeArea(var11);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var19 = var5.getAddressLines();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);

  }

  public void test406() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test406");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    var0.setSeparator("Uknown Status");
    java.lang.String var3 = var0.getIndicator();
    java.lang.String var4 = var0.getType();
    java.lang.String var5 = var0.getRangeType();
    var0.setType("geo.google.datamodel.GeoUsAddress@68ed4414[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@3110b2dd[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@3f4ee455[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setCode("geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test407() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test407");


    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberPrefix var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberPrefix();
    java.lang.String var1 = var0.getCode();
    var0.setType("geo.google.GeoException: geo.google.GeoException: ");
    var0.setCode("geo.google.datamodel.GeoAddress@35e7c9a0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setNumberPrefixSeparator("geo.google.datamodel.GeoAddress@3c53f765[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=hi!\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);

  }

  public void test408() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test408");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    java.util.List var3 = var2.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var4 = var2.getPostOfficeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var6 = var5.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var7 = var5.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var8 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var9 = var8.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var10 = var8.createPostBoxPostBoxNumberExtension();
    var5.setPostBoxNumberExtension(var10);
    var2.setPostBox(var5);
    java.lang.String var13 = var2.getIndicator();
    java.lang.String var14 = var2.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var15 = new oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber();
    var15.setIndicator("hi!");
    var15.setIndicator("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var20 = var15.getIndicator();
    var15.setIndicator("UNKNOWN_LOCATION");
    var2.setPostOfficeNumber(var15);
    java.lang.String var24 = var15.getIndicator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var20 + "' != '" + "geo.google.GeoException: geo.google.GeoException: "+ "'", var20.equals("geo.google.GeoException: geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "UNKNOWN_LOCATION"+ "'", var24.equals("UNKNOWN_LOCATION"));

  }

  public void test409() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test409");


    oasis.names.tc.ciq.xsdschema.xal._2.Locality var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var1.createPremise();
    java.util.List var3 = var2.getAddressLine();
    java.util.List var4 = var2.getAny();
    var2.setType("");
    var2.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var9 = var2.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var11 = var10.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var12 = var10.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var13 = var10.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var14 = var10.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var15 = var10.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var16 = var10.createFirmType();
    var2.setFirm(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var18 = var2.getMailStop();
    var2.setType("hi!");
    var0.setPremise(var2);
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var22 = var0.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var23 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var24 = var23.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var25 = var23.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var26 = var23.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var27 = var23.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var28 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var29 = var28.getAddressLine();
    java.util.List var30 = var28.getAny();
    var27.setPostBox(var28);
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var32 = var27.getPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var33 = var27.getDependentLocalityNumber();
    java.lang.String var34 = var27.getIndicator();
    var0.setDependentLocality(var27);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var36 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var37 = var36.createPremise();
    java.util.List var38 = var37.getAddressLine();
    java.util.List var39 = var37.getAny();
    var37.setType("");
    var37.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var44 = var37.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var45 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var46 = var45.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var47 = var45.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var48 = var45.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var49 = var45.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var50 = var45.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var51 = var45.createFirmType();
    var37.setFirm(var51);
    java.lang.String var53 = var37.getPremiseThoroughfareConnector();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var54 = new oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation();
    var37.setPremiseLocation(var54);
    var0.setPremise(var37);
    java.util.List var57 = var37.getPremiseNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var53 + "' != '" + "geo.google.GeoException: "+ "'", var53.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);

  }

  public void test410() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test410");


    oasis.names.tc.ciq.xsdschema.xal._2.Locality var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    java.lang.String var1 = var0.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.getPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var3 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var4 = var3.getPostTown();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var5 = var3.getPostTown();
    var0.setPostalCode(var3);
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var7 = var0.getPostOffice();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test411() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test411");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var6 = var0.createMailStopTypeMailStopNumber();
    java.lang.String var7 = var6.getContent();
    java.lang.String var8 = var6.getCode();
    java.lang.String var9 = var6.getCode();
    var6.setCode("geo.google.datamodel.GeoUsAddress@1f5bc05b[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@40b1a672[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@4f26a78c[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test412() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test412");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var0.setThoroughfarePostDirection(var1);
    java.util.List var3 = var0.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.getThoroughfareLeadingType();
    java.util.List var5 = var0.getThoroughfareNumberOrThoroughfareNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var7 = var6.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var8 = var6.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var9 = var6.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var10 = var6.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var11 = var10.getPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var12 = var10.getDependentLocalityNumber();
    var0.setDependentLocality(var10);
    java.lang.String var14 = var0.getType();
    java.util.Map var15 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var16.setType("hi!");
    var0.setThoroughfarePostDirection(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var20 = var0.getFirm();
    java.lang.String var21 = var0.getDependentThoroughfares();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);

  }

  public void test413() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test413");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var2 = var0.getAddressLines();
    var0.setUsage("");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var5 = var0.getPostalServiceElements();
    var0.setCurrentStatus("geo.google.GeoException: geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var8 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var10 = var9.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var11 = var9.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var12 = var11.getCode();
    java.util.Map var13 = var11.getOtherAttributes();
    var11.setCode("G_GEO_UNKOWN_STATUS");
    var8.setEndorsementLineCode(var11);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var17 = var8.getAddressLatitude();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var18 = var8.getAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var19 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode();
    java.lang.String var20 = var19.getType();
    var19.setCode("hi!");
    var8.setKeyLineCode(var19);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var24 = var8.getAddressLongitudeDirection();
    var8.setType("geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setPostalServiceElements(var8);
    var8.setType("geo.google.datamodel.GeoAddress@3c53f765[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);

  }

  public void test414() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test414");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var1 = var0.createCountryName();
    java.lang.String var2 = var1.getType();
    var1.setType("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var5 = var1.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test415() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test415");


    geo.google.datamodel.GeoCoordinate var14 = new geo.google.datamodel.GeoCoordinate();
    double var15 = var14.getLongitude();
    geo.google.datamodel.GeoCoordinate var16 = new geo.google.datamodel.GeoCoordinate();
    double var17 = var16.getLongitude();
    double var18 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var14, var16);
    double var19 = var16.getLatitude();
    var16.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var23 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var24 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var16, var23);
    geo.google.datamodel.GeoAddressAccuracy var26 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var27 = var26.getName();
    geo.google.datamodel.GeoUsAddress var28 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: hi!", "(default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.GeoException: ", "", "UNKNOWN_LOCATION", var16, var26);
    var28.setPostalCode("(default) Indicates to ignore an altitude specification");
    java.lang.String var31 = var28.getAddressLine2();
    java.lang.String var32 = var28.toAddressLine();
    java.lang.String var33 = var28.getCountry();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "UNKNOWN_LOCATION"+ "'", var27.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var31 + "' != '" + "(default) Indicates to ignore an altitude specification"+ "'", var31.equals("(default) Indicates to ignore an altitude specification"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var32 + "' != '" + "geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  (default) Indicates to ignore an altitude specification"+ "'", var32.equals("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  (default) Indicates to ignore an altitude specification"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "UNKNOWN_LOCATION"+ "'", var33.equals("UNKNOWN_LOCATION"));

  }

  public void test416() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test416");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    java.util.List var3 = var2.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var4 = new oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber();
    var4.setIndicator("hi!");
    java.lang.String var7 = var4.getContent();
    var2.setPostOfficeNumber(var4);
    var4.setIndicatorOccurrence("");
    var4.setContent("geo.google.datamodel.GeoAddress@439373c0[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var13 = var4.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);

  }

  public void test417() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test417");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    java.lang.String var2 = var0.getValidToDate();
    java.lang.String var3 = var0.getAddressDetailsKey();
    var0.setCurrentStatus("UNKNOWN_LOCATION");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var7 = var6.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var8 = var6.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var9 = var6.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var10 = var6.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var11 = var6.createAddressLinesType();
    java.util.Map var12 = var11.getOtherAttributes();
    java.util.List var13 = var11.getAny();
    var0.setAddressLines(var11);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var15 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    java.lang.String var16 = var15.getValidToDate();
    var15.setAddressDetailsKey("hi!");
    java.util.Map var19 = var15.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var20 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var21 = var20.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var22 = var20.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var23 = var20.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var24 = var20.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var25 = var20.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var26 = var20.createLocality();
    var15.setLocality(var26);
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var28 = var26.getLargeMailUser();
    var0.setLocality(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);

  }

  public void test418() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test418");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var2 = var0.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var3 = var0.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.AdministrativeAreaName var4 = var0.createAdministrativeAreaAdministrativeAreaName();
    java.util.Map var5 = var4.getOtherAttributes();
    var4.setContent("geo.google.GeoException: , geo.google.GeoException: hi!,  CLAMP_TO_GROUND");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test419() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test419");


    geo.google.mapping.PointToCoordinateFunctor var0 = new geo.google.mapping.PointToCoordinateFunctor();
    com.google.earth.kml._2.PointType var1 = new com.google.earth.kml._2.PointType();
    var1.setTessellate((java.lang.Boolean)true);
    var1.setExtrude((java.lang.Boolean)false);
    geo.google.datamodel.GeoCoordinate var6 = var0.execute(var1);
    com.google.earth.kml._2.PointType var7 = new com.google.earth.kml._2.PointType();
    var7.setTessellate((java.lang.Boolean)true);
    java.lang.Boolean var10 = var7.isTessellate();
    geo.google.datamodel.GeoCoordinate var11 = var0.execute(var7);
    geo.google.mapping.FunctionChain var12 = geo.google.mapping.FunctionChain.getChain((geo.google.mapping.Functor)var0);
    com.google.earth.kml._2.PlacemarkType var13 = new com.google.earth.kml._2.PlacemarkType();
    var13.setAddress("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var16 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    java.lang.String var17 = var16.getValidToDate();
    var16.setAddressDetailsKey("hi!");
    var13.setAddressDetails(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var21 = var13.getAddressDetails();
    com.google.earth.kml._2.PointType var22 = new com.google.earth.kml._2.PointType();
    var22.setTessellate((java.lang.Boolean)true);
    var22.setExtrude((java.lang.Boolean)false);
    var13.setPoint(var22);
    geo.google.datamodel.GeoCoordinate var28 = var0.execute(var22);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var29 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var30 = var29.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var31 = var29.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var32 = var29.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    java.lang.String var33 = var32.getContent();
    java.util.Map var34 = var32.getOtherAttributes();
    var32.setCode("geo.google.GeoException: hi!");
    boolean var37 = var28.equals((java.lang.Object)var32);
    var32.setContent("geo.google.datamodel.GeoAddress@2c8fa0b9[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var10 + "' != '" + true+ "'", var10.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var37 == false);

  }

  public void test420() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test420");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName();
    java.lang.String var1 = var0.getType();
    java.lang.String var2 = var0.getCode();
    java.lang.String var3 = var0.getCode();
    java.util.Map var4 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test421() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test421");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var3 = var0.createAddressDetailsCountry();
    java.util.List var4 = var3.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var5 = var3.getThoroughfare();
    java.util.List var6 = var3.getCountryNameCode();
    java.util.List var7 = var3.getAddressLine();
    com.google.earth.kml._2.PlacemarkType var8 = new com.google.earth.kml._2.PlacemarkType();
    var8.setAddress("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var11 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    java.lang.String var12 = var11.getValidToDate();
    var11.setAddressDetailsKey("hi!");
    var8.setAddressDetails(var11);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var16 = var8.getAddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var17 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var17.setThoroughfarePostDirection(var18);
    java.util.List var20 = var17.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var21 = var17.getThoroughfareLeadingType();
    java.util.List var22 = var17.getThoroughfareNumberOrThoroughfareNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var23 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var24 = var23.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var25 = var23.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var26 = var23.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var27 = var23.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var28 = var27.getPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var29 = var27.getDependentLocalityNumber();
    var17.setDependentLocality(var27);
    java.lang.String var31 = var17.getType();
    java.util.Map var32 = var17.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var33 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var33.setType("hi!");
    var17.setThoroughfarePostDirection(var33);
    var16.setThoroughfare(var17);
    var3.setThoroughfare(var17);
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var39 = var17.getPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var40 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var41 = var40.createPremise();
    java.util.List var42 = var41.getAddressLine();
    java.util.List var43 = var41.getAny();
    var41.setType("");
    var41.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var48 = var41.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var49 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var50 = var49.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var51 = var49.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var52 = var49.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var53 = var49.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var54 = var49.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var55 = var49.createFirmType();
    var41.setFirm(var55);
    java.lang.String var57 = var41.getPremiseThoroughfareConnector();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var58 = var41.getPremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var59 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var60 = var59.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var61 = var59.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var62 = var59.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var63 = var59.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var64 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var65 = var64.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var66 = var64.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var67 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var68 = var67.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var69 = var67.createPostBoxPostBoxNumberExtension();
    var64.setPostBoxNumberExtension(var69);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var71 = var64.getPostBoxNumberExtension();
    java.util.List var72 = var64.getAny();
    var63.setPostBox(var64);
    var63.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var76 = var63.getDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var77 = var63.getDependentLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var78 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var79 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var80 = var79.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var81 = var79.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var82 = var79.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var83 = var79.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var84 = var79.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var85 = var79.createFirmType();
    var78.setFirm(var85);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var87 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var88 = var87.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var89 = var87.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var90 = var87.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var91 = var87.createThoroughfare();
    java.util.List var92 = var91.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var93 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var94 = var93.getPostTown();
    var91.setPostalCode(var93);
    var85.setPostalCode(var93);
    var63.setPostalCode(var93);
    var41.setPostalCode(var93);
    var17.setPostalCode(var93);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var57 + "' != '" + "geo.google.GeoException: "+ "'", var57.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var68);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var69);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var71);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var80);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var82);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var88);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var89);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var90);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var91);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var92);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var94);

  }

  public void test422() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test422");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    java.lang.String var2 = var0.getCurrentStatus();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var3 = var0.getAddress();
    java.lang.String var4 = var0.getValidFromDate();
    var0.setValidFromDate("geo.google.datamodel.GeoUsAddress@728c3b08[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5477c4f8[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@324a11b[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test423() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test423");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber();
    var0.setNumberTypeOccurrence("hi!");
    var0.setIndicator("geo.google.GeoException: ");
    java.lang.String var5 = var0.getType();
    java.lang.String var6 = var0.getType();
    var0.setContent("geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setCode("geo.google.datamodel.GeoUsAddress@46478daa[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@3a5b7f2[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@74cf72bc[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setType("geo.google.datamodel.GeoAddress@2eda413f[\n  _coordinate=<null>\n  _addressDetails=oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails@7af1a720\n  _addressLine=geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var13 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var13 + "' != '" + "geo.google.datamodel.GeoUsAddress@46478daa[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@3a5b7f2[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@74cf72bc[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var13.equals("geo.google.datamodel.GeoUsAddress@46478daa[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@3a5b7f2[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@74cf72bc[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]"));

  }

  public void test424() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test424");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var6 = var0.createLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var7 = var0.createPostBox();
    java.util.List var8 = var7.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test425() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test425");


    geo.google.GeoAddressStandardizer var1 = new geo.google.GeoAddressStandardizer("UNKNOWN_LOCATION");
    long var2 = var1.getRateLimitInterval();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      geo.google.datamodel.GeoCoordinate var4 = var1.standardizeToGeoCoordinate("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  ");
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var2 == 5769L);

  }

  public void test426() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test426");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var1 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var1.setThoroughfarePostDirection(var2);
    java.util.List var4 = var1.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var5 = var1.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var1.getPostalCode();
    var0.setThoroughfare(var1);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var8 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var9 = var8.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var10 = var8.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var11 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var12 = var11.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var13 = var11.createPostBoxPostBoxNumberExtension();
    var8.setPostBoxNumberExtension(var13);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var15 = var8.getPostBoxNumberExtension();
    java.util.List var16 = var8.getAny();
    var0.setPostBox(var8);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var19 = var18.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var20 = var18.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var21 = var18.createLargeMailUserType();
    var0.setLargeMailUser(var21);
    var0.setType("geo.google.datamodel.GeoAddress@757534b9[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);

  }

  public void test427() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test427");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var6 = var0.createThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var7 = var6.getPremise();
    java.util.Map var8 = var6.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test428() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test428");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    var4.setCode("hi!");
    java.lang.String var7 = var4.getCode();
    var4.setCode("hi!");
    var4.setCode("geo.google.GeoException: ");
    java.lang.String var12 = var4.getNumberPrefixSeparator();
    java.lang.String var13 = var4.getNumberPrefixSeparator();
    java.util.Map var14 = var4.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var7 + "' != '" + "hi!"+ "'", var7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);

  }

  public void test429() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test429");


    com.google.earth.kml._2.ObjectFactory var0 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var1 = var0.createResponseType();
    com.google.earth.kml._2.ObjectFactory var2 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var3 = var2.createResponseType();
    com.google.earth.kml._2.PointType var4 = new com.google.earth.kml._2.PointType();
    var4.setTessellate((java.lang.Boolean)true);
    var4.setExtrude((java.lang.Boolean)false);
    java.lang.Boolean var9 = var4.isExtrude();
    var4.setCoordinates("Uknown Status");
    javax.xml.bind.JAXBElement var12 = var2.createPoint(var4);
    com.google.earth.kml._2.KmlType var13 = var2.createKmlType();
    com.google.earth.kml._2.ObjectFactory var14 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.ResponseType var15 = var14.createResponseType();
    com.google.earth.kml._2.ResponseType var16 = var14.createResponseType();
    com.google.earth.kml._2.PlacemarkType var17 = var14.createPlacemarkType();
    com.google.earth.kml._2.ObjectFactory var18 = new com.google.earth.kml._2.ObjectFactory();
    com.google.earth.kml._2.KmlType var19 = new com.google.earth.kml._2.KmlType();
    javax.xml.bind.JAXBElement var20 = var18.createKml(var19);
    javax.xml.bind.JAXBElement var21 = var14.createKml(var19);
    javax.xml.bind.JAXBElement var22 = var2.createKml(var19);
    com.google.earth.kml._2.ResponseType var23 = var2.createResponseType();
    com.google.earth.kml._2.StatusType var24 = var23.getStatus();
    javax.xml.bind.JAXBElement var25 = var0.createResponse(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var9 + "' != '" + false+ "'", var9.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);

  }

  public void test430() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test430");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var2 = var0.getAddressLines();
    var0.setUsage("");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var9 = var0.getLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var10 = var0.getPostalServiceElements();
    java.util.Map var11 = var0.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var12 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var14 = var13.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var15 = var13.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var16 = var15.getCode();
    java.util.Map var17 = var15.getOtherAttributes();
    var15.setCode("G_GEO_UNKOWN_STATUS");
    var12.setEndorsementLineCode(var15);
    var0.setPostalServiceElements(var12);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var22 = var12.getAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var23 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode();
    java.lang.String var24 = var23.getCode();
    java.lang.String var25 = var23.getCode();
    var12.setBarcode(var23);
    java.lang.String var27 = var12.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);

  }

  public void test431() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test431");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    java.lang.String var4 = var3.getNumberSuffixSeparator();
    var3.setContent("geo.google.GeoException: geo.google.GeoException: ");
    java.lang.String var7 = var3.getNumberSuffixSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test432() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test432");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberFrom var1 = var0.getThoroughfareNumberFrom();
    java.lang.String var2 = var0.getNumberRangeOccurrence();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var3 = var0.getThoroughfareNumberTo();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test433() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test433");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var2 = var0.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var4 = var0.createPostOfficePostOfficeNumber();
    java.lang.String var5 = var4.getCode();
    var4.setContent("geo.google.GeoException: hi!");
    var4.setContent("geo.google.GeoException: , geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n],  UNKNOWN_LOCATION");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test434() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test434");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var1 = var0.getSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var2 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var3 = var2.getAny();
    var0.setSubPremise(var2);
    java.util.List var5 = var0.getSubPremiseNumberSuffix();
    java.util.Map var6 = var0.getOtherAttributes();
    java.util.List var7 = var0.getSubPremiseName();
    java.util.List var8 = var0.getSubPremiseName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);

  }

  public void test435() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test435");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAny();
    var1.setType("");
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var5 = var1.getMailStop();
    var1.setPremiseDependencyType("");
    java.lang.String var8 = var1.getPremiseDependency();
    java.util.List var9 = var1.getSubPremise();
    java.util.List var10 = var1.getPremiseNumberPrefix();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);

  }

  public void test436() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test436");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var2 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber var3 = var2.getPostalRouteNumber();
    java.util.List var4 = var2.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test437() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test437");


    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType();
    java.util.List var1 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var2 = var0.getPostalCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);

  }

  public void test438() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test438");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownName();
    var0.setCode("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var3 = var0.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test439() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test439");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode();
    java.lang.String var1 = var0.getType();
    var0.setContent("");
    var0.setContent("geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);

  }

  public void test440() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test440");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var2 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseName var3 = var0.createSubPremiseTypeSubPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var4 = var0.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var5 = var0.createSubPremiseTypeSubPremiseNumber();
    java.lang.String var6 = var5.getCode();
    java.util.Map var7 = var5.getOtherAttributes();
    var5.setPremiseNumberSeparator("geo.google.datamodel.GeoAddress@3a720269[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test441() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test441");


    geo.google.datamodel.GeoStatusCode var6 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var7 = new geo.google.GeoException("", var6);
    java.lang.String var8 = var7.toString();
    geo.google.datamodel.GeoStatusCode var12 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var13 = new geo.google.GeoException("", var12);
    geo.google.datamodel.GeoStatusCode var16 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var17 = new geo.google.GeoException("", var16);
    geo.google.GeoException var18 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var13, var16);
    var7.addSuppressed((java.lang.Throwable)var18);
    geo.google.datamodel.GeoStatusCode var21 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    boolean var23 = var21.equals((java.lang.Object)10L);
    java.lang.String var24 = var21.name();
    int var25 = var21.getCode();
    geo.google.GeoException var26 = new geo.google.GeoException("", (java.lang.Throwable)var7, var21);
    geo.google.GeoException var27 = new geo.google.GeoException("(default) Indicates to ignore an altitude specification", (java.lang.Throwable)var26);
    geo.google.datamodel.GeoStatusCode var31 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var32 = new geo.google.GeoException("", var31);
    geo.google.datamodel.GeoStatusCode var35 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var36 = new geo.google.GeoException("", var35);
    geo.google.GeoException var37 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var32, var35);
    geo.google.GeoException var38 = new geo.google.GeoException((java.lang.Throwable)var37);
    geo.google.datamodel.GeoStatusCode var39 = var37.getStatus();
    geo.google.GeoException var40 = new geo.google.GeoException("hi!", (java.lang.Throwable)var26, var39);
    geo.google.datamodel.GeoStatusCode var41 = var40.getStatus();
    geo.google.GeoException var42 = new geo.google.GeoException("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", (java.lang.Throwable)var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + "geo.google.GeoException: "+ "'", var8.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var24 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var24.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var25 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);

  }

  public void test442() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test442");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.lang.String var2 = var1.getPremiseThoroughfareConnector();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var3 = var1.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var5 = var4.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var6 = var4.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var7 = var4.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var8 = var4.createPremisePremiseLocation();
    java.lang.String var9 = var8.getCode();
    var1.setPremiseLocation(var8);
    var1.setType("geo.google.GeoException: , geo.google.GeoException: hi!,  geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);

  }

  public void test443() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test443");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    java.util.List var3 = var1.getAny();
    var1.setType("");
    var1.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var8 = var1.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var10 = var9.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var11 = var9.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var12 = var9.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var13 = var9.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var14 = var9.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var15 = var9.createFirmType();
    var1.setFirm(var15);
    java.util.List var17 = var15.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var19 = var18.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var20 = var18.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var21 = var18.createPostalCode();
    var15.setPostalCode(var21);
    var21.setType("hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var25 = var21.getPostTown();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);

  }

  public void test444() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test444");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var4 = var3.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var5 = var3.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var6 = var3.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var7 = var3.createLargeMailUserTypeLargeMailUserIdentifier();
    java.lang.String var8 = var7.getIndicator();
    var2.setLargeMailUserIdentifier(var7);
    java.lang.String var10 = var7.getType();
    java.lang.String var11 = var7.getContent();
    java.lang.String var12 = var7.getCode();
    java.lang.String var13 = var7.getIndicator();
    java.lang.String var14 = var7.getIndicator();
    java.util.Map var15 = var7.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);

  }

  public void test445() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test445");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var3 = var0.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var4 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var5 = var0.createAddressLinesType();
    oasis.names.tc.ciq.xsdschema.xal._2.BuildingNameType var6 = var0.createBuildingNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var7 = var0.createPostalRouteTypePostalRouteName();
    var7.setType("geo.google.datamodel.GeoAddress@68f5ddd7[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test446() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test446");


    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var1 = var0.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var2 = var0.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var3 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var4 = var3.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var5 = var3.createPostBoxPostBoxNumberExtension();
    var0.setPostBoxNumberExtension(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var7 = var0.getPostBoxNumberExtension();
    java.util.List var8 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var9 = var0.getPostBoxNumberExtension();
    java.lang.String var10 = var9.getNumberExtensionSeparator();
    java.util.Map var11 = var9.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);

  }

  public void test447() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test447");


    geo.google.datamodel.GeoStatusCode var1 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    boolean var3 = var1.equals((java.lang.Object)10L);
    java.lang.String var4 = var1.name();
    int var5 = var1.getCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var7 = var6.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var8 = var6.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var9 = var6.createAddressDetailsCountry();
    boolean var10 = var1.equals((java.lang.Object)var9);
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var11 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    var11.setIndicator("geo.google.GeoException: geo.google.GeoException: ");
    var9.setAdministrativeArea(var11);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var15 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var16 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var15.setThoroughfarePostDirection(var16);
    java.util.List var18 = var15.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var19 = var15.getThoroughfareLeadingType();
    java.util.List var20 = var15.getThoroughfareNumberOrThoroughfareNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var21 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var22 = var21.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var23 = var21.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var24 = var21.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var25 = var21.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var26 = var25.getPostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var27 = var25.getDependentLocalityNumber();
    var15.setDependentLocality(var25);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var29 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var30 = var29.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var31 = var29.createPostOffice();
    java.util.List var32 = var31.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var33 = var31.getPostOfficeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var34 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var35 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var36 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var35.setThoroughfarePostDirection(var36);
    java.util.List var38 = var35.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var39 = var35.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var40 = var35.getPostalCode();
    var34.setThoroughfare(var35);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var42 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.lang.String var43 = var42.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var44 = var42.getFirm();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var45 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var46 = var45.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var47 = var45.createPostBoxPostBoxNumberExtension();
    var42.setPostBoxNumberExtension(var47);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var49 = var42.getPostBoxNumberExtension();
    java.util.List var50 = var42.getAny();
    var34.setPostBox(var42);
    var31.setPostBox(var42);
    var25.setPostOffice(var31);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var54 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var55 = var54.getPostTown();
    java.util.Map var56 = var54.getOtherAttributes();
    java.util.List var57 = var54.getPostalCodeNumberExtension();
    var25.setPostalCode(var54);
    var11.setPostalCode(var54);
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var60 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var61 = var60.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var62 = var60.getPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var63 = var60.getPostOffice();
    java.util.List var64 = var60.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var65 = var60.getThoroughfare();
    var11.setLocality(var60);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var3 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var4.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var5 == (-1));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var61);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var62);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var64);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var65);

  }

  public void test448() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test448");


    com.google.earth.kml._2.PlacemarkType var0 = new com.google.earth.kml._2.PlacemarkType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var1 = var0.getAddressDetails();
    java.lang.String var2 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var3 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var4 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var5 = var4.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var6 = var4.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var7 = var4.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var8 = var4.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var9 = var4.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var10 = var4.createLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var11 = var10.getPremise();
    var10.setType("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var14 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var15 = var14.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var16 = var14.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var17 = var16.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var18 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var19 = var18.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var20 = var18.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var21 = var18.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var22 = var18.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var23 = var18.createLargeMailUserTypeLargeMailUserIdentifier();
    var16.setLargeMailUserIdentifier(var23);
    java.lang.String var25 = var16.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var26 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var26.setIndicator("G_GEO_UNKOWN_STATUS");
    var16.setPostBox(var26);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var30 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var31 = var30.getAddressLine();
    var16.setPostBox(var30);
    var10.setLargeMailUser(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var34 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var35 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var34.setThoroughfarePostDirection(var35);
    java.util.List var37 = var34.getThoroughfareNumberSuffix();
    var34.setDependentThoroughfaresIndicator("hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var40 = var34.getDependentLocality();
    var10.setThoroughfare(var34);
    var3.setThoroughfare(var34);
    var0.setAddressDetails(var3);
    com.google.earth.kml._2.PlacemarkType var44 = new com.google.earth.kml._2.PlacemarkType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var45 = var44.getAddressDetails();
    com.google.earth.kml._2.PlacemarkType var46 = new com.google.earth.kml._2.PlacemarkType();
    var46.setAddress("geo.google.GeoException: ");
    com.google.earth.kml._2.PointType var49 = new com.google.earth.kml._2.PointType();
    var49.setTessellate((java.lang.Boolean)true);
    var49.setExtrude((java.lang.Boolean)false);
    var46.setPoint(var49);
    var49.setTessellate((java.lang.Boolean)false);
    var44.setPoint(var49);
    var0.setPoint(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);

  }

  public void test449() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test449");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var2 = var0.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice.PostOfficeNumber var3 = var0.createPostOfficePostOfficeNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var4 = var0.createAddressLinesType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberTo var5 = var0.createThoroughfareThoroughfareNumberRangeThoroughfareNumberTo();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test450() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test450");


    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix();
    java.util.Map var1 = var0.getOtherAttributes();
    var0.setType("hi!");
    var0.setType("hi!");
    java.lang.String var6 = var0.getNumberSuffixSeparator();
    java.lang.String var7 = var0.getNumberSuffixSeparator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test451() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test451");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange();
    var0.setNumberRangeOccurrence("geo.google.GeoException: geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.ThoroughfareNumberRange.ThoroughfareNumberFrom var3 = var0.getThoroughfareNumberFrom();
    var0.setSeparator("");
    var0.setCode("Uknown Status");
    var0.setIndicatorOccurrence("(default) Indicates to ignore an altitude specification");
    var0.setSeparator("geo.google.datamodel.GeoAddress@324ed527[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);

  }

  public void test452() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test452");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var5 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    java.util.List var6 = var5.getAddressLine();
    java.util.List var7 = var5.getAny();
    var4.setPostBox(var5);
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var9 = var4.getPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var10 = var4.getDependentLocalityNumber();
    java.util.List var11 = var4.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);

  }

  public void test453() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test453");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var4 = var0.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressIdentifier var5 = var0.createAddressDetailsPostalServiceElementsAddressIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var6 = var0.createLocality();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var7 = var6.getPremise();
    java.lang.String var8 = var6.getType();
    java.util.List var9 = var6.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var11 = var10.createPremise();
    java.util.List var12 = var11.getAddressLine();
    java.util.List var13 = var11.getAny();
    var11.setType("");
    var11.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var18 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var19 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType();
    var18.setThoroughfarePostDirection(var19);
    java.util.List var21 = var18.getThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var22 = var18.getThoroughfareLeadingType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var23 = var18.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var24 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var25 = var24.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var26 = var24.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var27 = var24.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var28 = var24.createThoroughfare();
    java.util.List var29 = var28.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var30 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var31 = var30.getPostTown();
    var28.setPostalCode(var30);
    java.util.List var33 = var30.getAny();
    var18.setPostalCode(var30);
    var11.setPostalCode(var30);
    var6.setPostalCode(var30);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var37 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var38 = var37.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var39 = var37.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var40 = var37.createPostalRouteType();
    java.lang.String var41 = var40.getType();
    java.lang.String var42 = var40.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var43 = var40.getPostBox();
    var6.setPostalRoute(var40);
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var45 = var40.getPostBox();
    java.util.Map var46 = var40.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);

  }

  public void test454() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test454");


    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      org.w3c.dom.Document var1 = geo.google.utils.XmlUtils.parse("geo.google.datamodel.GeoAddress@16896f61[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type org.xml.sax.SAXParseException");
    } catch (org.xml.sax.SAXParseException e) {
      // Expected exception.
    }

  }

  public void test455() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test455");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    java.lang.String var2 = var1.getNumberSuffixSeparator();
    java.lang.String var3 = var1.getContent();
    java.util.Map var4 = var1.getOtherAttributes();
    java.lang.String var5 = var1.getCode();
    java.lang.String var6 = var1.getNumberSuffixSeparator();
    java.lang.String var7 = var1.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test456() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test456");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var1 = var0.getSubPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var2 = var0.getPostalCode();
    java.util.List var3 = var0.getSubPremiseNumberPrefix();
    java.lang.String var4 = var0.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var5 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var6 = var5.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var7 = var5.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var8 = var5.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var9 = var5.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var10 = var5.createLargeMailUserTypeLargeMailUserIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var11 = var5.createMailStopType();
    var0.setMailStop(var11);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var14 = var13.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var15 = var13.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var16 = var13.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var17 = var13.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var18 = var13.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var19 = var13.createMailStopTypeMailStopNumber();
    var11.setMailStopNumber(var19);
    java.util.List var21 = var11.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var22 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var23 = var22.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var24 = var22.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var25 = var24.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var26 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var27 = var26.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var28 = var26.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var29 = var26.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var30 = var26.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var31 = var26.createLargeMailUserTypeLargeMailUserIdentifier();
    var24.setLargeMailUserIdentifier(var31);
    java.lang.String var33 = var24.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var34 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var34.setIndicator("G_GEO_UNKOWN_STATUS");
    var24.setPostBox(var34);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var38 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var39 = var38.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var40 = var38.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var41 = var38.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var42 = var38.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var43 = var38.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var44 = var38.createFirmType();
    var34.setFirm(var44);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var46 = var44.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var47 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType();
    var44.setMailStop(var47);
    java.lang.String var49 = var47.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var50 = new oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName();
    var47.setMailStopName(var50);
    java.lang.String var52 = var50.getType();
    java.lang.String var53 = var50.getCode();
    var11.setMailStopName(var50);
    java.lang.String var55 = var50.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var41);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);

  }

  public void test457() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test457");


    geo.google.datamodel.GeoCoordinate var7 = new geo.google.datamodel.GeoCoordinate();
    double var8 = var7.getLongitude();
    geo.google.datamodel.GeoCoordinate var9 = new geo.google.datamodel.GeoCoordinate();
    double var10 = var9.getLongitude();
    double var11 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var7, var9);
    geo.google.datamodel.GeoCoordinate var19 = new geo.google.datamodel.GeoCoordinate();
    double var20 = var19.getLongitude();
    geo.google.datamodel.GeoCoordinate var21 = new geo.google.datamodel.GeoCoordinate();
    double var22 = var21.getLongitude();
    double var23 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var19, var21);
    double var24 = var21.getLatitude();
    var21.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var28 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var29 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var21, var28);
    geo.google.datamodel.GeoUsAddress var30 = new geo.google.datamodel.GeoUsAddress("G_GEO_UNKOWN_STATUS", "geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", var7, var28);
    geo.google.datamodel.GeoAddressAccuracy var32 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var33 = var32.getName();
    int var34 = var32.getCode();
    java.lang.String var35 = var32.toString();
    var30.setAccuracy(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "UNKNOWN_LOCATION"+ "'", var33.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var35 + "' != '" + "UNKNOWN_LOCATION"+ "'", var35.equals("UNKNOWN_LOCATION"));

  }

  public void test458() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test458");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseName var3 = var0.createPremisePremiseName();
    var3.setContent("");
    java.lang.String var6 = var3.getCode();
    var3.setType("G_GEO_UNKOWN_STATUS");
    var3.setCode("geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var3.setType("geo.google.datamodel.GeoAddress@4244bb8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var13 = var3.getTypeOccurrence();
    java.lang.String var14 = var3.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var14 + "' != '" + ""+ "'", var14.equals(""));

  }

  public void test459() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test459");


    geo.google.GeoException var1 = new geo.google.GeoException("hi!");
    geo.google.datamodel.GeoStatusCode var4 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var5 = new geo.google.GeoException("", var4);
    java.lang.String var6 = var5.toString();
    geo.google.datamodel.GeoStatusCode var10 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var11 = new geo.google.GeoException("", var10);
    geo.google.datamodel.GeoStatusCode var14 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var15 = new geo.google.GeoException("", var14);
    geo.google.GeoException var16 = new geo.google.GeoException("G_GEO_UNKOWN_STATUS", (java.lang.Throwable)var11, var14);
    var5.addSuppressed((java.lang.Throwable)var16);
    var1.addSuppressed((java.lang.Throwable)var5);
    geo.google.GeoException var19 = new geo.google.GeoException((java.lang.Throwable)var5);
    java.lang.Throwable[] var20 = var5.getSuppressed();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var6 + "' != '" + "geo.google.GeoException: "+ "'", var6.equals("geo.google.GeoException: "));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);

  }

  public void test460() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test460");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var2 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var3 = var0.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var4 = var0.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var5 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var6 = var0.createMailStopTypeMailStopNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality.LocalityName var7 = var0.createLocalityLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var8 = var0.createSubPremiseTypeSubPremiseNumberPrefix();
    java.util.Map var9 = var8.getOtherAttributes();
    java.lang.String var10 = var8.getNumberPrefixSeparator();
    var8.setType("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test461() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test461");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber();
    var0.setPremiseNumberSeparator("G_GEO_UNKOWN_STATUS");
    java.lang.String var3 = var0.getPremiseNumberSeparator();
    java.util.Map var4 = var0.getOtherAttributes();
    java.lang.String var5 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "G_GEO_UNKOWN_STATUS"+ "'", var3.equals("G_GEO_UNKOWN_STATUS"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);

  }

  public void test462() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test462");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var2 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberExtension var3 = var0.createPostBoxPostBoxNumberExtension();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var4 = var0.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberSuffix var5 = var0.createPostBoxPostBoxNumberSuffix();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test463() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test463");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var2 = var0.createPostOffice();
    java.util.List var3 = var2.getAny();
    var2.setType("hi!");
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var6 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType();
    java.util.List var7 = var6.getAddressLine();
    var2.setPostalRoute(var6);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteNumber var9 = var6.getPostalRouteNumber();
    java.lang.String var10 = var6.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var11 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var13 = var12.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var14 = var12.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var15 = var12.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var16 = var12.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var17 = var12.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var18 = var12.createFirmType();
    var11.setFirm(var18);
    var11.setType("Uknown Status");
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var22 = var11.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber var23 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumber();
    var11.setPostBoxNumber(var23);
    var6.setPostBox(var11);
    java.util.List var26 = var6.getPostalRouteName();
    java.util.List var27 = var6.getPostalRouteName();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);

  }

  public void test464() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test464");


    geo.google.datamodel.GeoAltitude var0 = new geo.google.datamodel.GeoAltitude();
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var1 = var0.getMode();
    java.lang.String var3 = var1.getDescription("");
    java.lang.String var4 = var1.name();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var3 + "' != '" + "(default) Indicates to ignore an altitude specification"+ "'", var3.equals("(default) Indicates to ignore an altitude specification"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var4 + "' != '" + "CLAMP_TO_GROUND"+ "'", var4.equals("CLAMP_TO_GROUND"));

  }

  public void test465() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test465");


    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var2 = var1.getCode();
    java.lang.String var3 = var1.getCode();
    var0.setThoroughfareTrailingType(var1);
    java.util.List var5 = var0.getAddressLine();
    java.util.List var6 = var0.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var7 = var0.getThoroughfareTrailingType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare var8 = new oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare.DependentThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareTrailingTypeType();
    java.lang.String var10 = var9.getCode();
    java.lang.String var11 = var9.getCode();
    var8.setThoroughfareTrailingType(var9);
    java.lang.String var13 = var9.getContent();
    var9.setCode("G_GEO_UNKOWN_STATUS");
    var0.setThoroughfareTrailingType(var9);
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePreDirectionType var17 = var0.getThoroughfarePreDirection();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);

  }

  public void test466() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test466");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    java.lang.String var2 = var1.getNumberSuffixSeparator();
    java.lang.String var3 = var1.getContent();
    java.util.Map var4 = var1.getOtherAttributes();
    java.lang.String var5 = var1.getCode();
    java.lang.String var6 = var1.getNumberSuffixSeparator();
    var1.setType("geo.google.datamodel.GeoAddress@1dd53212[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var9 = var1.getCode();
    java.util.Map var10 = var1.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);

  }

  public void test467() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test467");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var5 = var0.createLargeMailUserTypeLargeMailUserIdentifier();
    var5.setContent("geo.google.GeoException: ");
    java.lang.String var8 = var5.getIndicator();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test468() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test468");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var3 = var0.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var4 = var0.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    var4.setType("geo.google.GeoException: hi!, geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.GeoException:  ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test469() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test469");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var1 = var0.createPremise();
    java.util.List var2 = var1.getAddressLine();
    java.util.List var3 = var1.getAny();
    var1.setType("");
    var1.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var8 = var1.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var10 = var9.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var11 = var9.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var12 = var9.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var13 = var9.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var14 = var9.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var15 = var9.createFirmType();
    var1.setFirm(var15);
    java.util.List var17 = var1.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var18 = var1.getPremise();
    java.lang.String var19 = var1.getPremiseDependency();
    java.util.List var20 = var1.getPremiseNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);

  }

  public void test470() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test470");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var3 = var0.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var4 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var5 = var4.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var6 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var7 = var6.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var8 = var6.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var9 = var6.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var10 = var9.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var11 = var9.getPostOffice();
    java.lang.String var12 = var9.getUsageType();
    java.util.List var13 = var9.getAddressLine();
    var4.setSubAdministrativeArea(var9);
    java.lang.String var15 = var4.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var16 = var4.getPostalCode();
    var3.setAdministrativeArea(var4);
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var18 = var3.getAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var19 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var20 = var19.getSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var21 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var22 = var21.getAny();
    var19.setSubPremise(var21);
    java.util.List var24 = var19.getSubPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var25 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var26 = var25.createPremise();
    java.util.List var27 = var26.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var28 = var26.getFirm();
    var26.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var31 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var32 = var31.createPremise();
    java.lang.String var33 = var32.getPremiseThoroughfareConnector();
    var26.setPremise(var32);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var35 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var36 = var35.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var37 = var35.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var38 = var35.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var39 = var38.getType();
    java.util.List var40 = var38.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var41 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var42 = var41.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var43 = var41.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var44 = var41.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var45 = var41.createThoroughfare();
    java.util.List var46 = var45.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var47 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var48 = var47.getPostTown();
    var45.setPostalCode(var47);
    var38.setPostalCode(var47);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var51 = var38.getPostalCode();
    var26.setPostalCode(var51);
    var19.setPostalCode(var51);
    var18.setPostalCode(var51);
    java.util.List var55 = var51.getPostalCodeNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var24);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var55);

  }

  public void test471() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test471");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var2 = var0.createSubPremiseTypeSubPremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var3 = var0.createSubPremiseTypeSubPremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var4 = var0.createAddressDetailsPostalServiceElementsKeyLineCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var5 = var0.createSubPremiseTypeSubPremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityName var6 = var0.createDependentLocalityTypeDependentLocalityName();
    java.lang.String var7 = var6.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);

  }

  public void test472() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test472");


    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberPrefix var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberPrefix();
    java.lang.String var1 = var0.getNumberPrefixSeparator();
    var0.setCode("geo.google.datamodel.GeoAddress@3c53f765[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=hi!\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setType("geo.google.datamodel.GeoAddress@25d14add[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var6 = var0.getValue();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test473() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test473");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var4 = new oasis.names.tc.ciq.xsdschema.xal._2.PostOffice();
    var3.setPostOffice(var4);
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var6 = var3.getLocality();
    var3.setType("geo.google.datamodel.GeoAddress@62c859b5[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var3.setType("geo.google.datamodel.GeoAddress@123ed715[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.List var11 = var3.getAny();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);

  }

  public void test474() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test474");


    geo.google.datamodel.GeoCoordinate var14 = new geo.google.datamodel.GeoCoordinate();
    double var15 = var14.getLongitude();
    geo.google.datamodel.GeoCoordinate var16 = new geo.google.datamodel.GeoCoordinate();
    double var17 = var16.getLongitude();
    double var18 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var14, var16);
    double var19 = var16.getLatitude();
    var16.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var23 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var24 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var16, var23);
    geo.google.datamodel.GeoAddressAccuracy var26 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    java.lang.String var27 = var26.getName();
    geo.google.datamodel.GeoUsAddress var28 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: hi!", "(default) Indicates to ignore an altitude specification", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "Uknown Status", "geo.google.GeoException: ", "", "UNKNOWN_LOCATION", var16, var26);
    var28.setPostalCode("(default) Indicates to ignore an altitude specification");
    var28.setAddressLine2("geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var33 = var28.getAddressLine1();
    var28.setCountry("geo.google.datamodel.GeoUsAddress@18a6d06f[\n  _addressLine1=geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _addressLine2=geo.google.datamodel.GeoAddress@ff140d8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _state=Uknown Status\n  _postalCode=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _country=geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _coordinate=geo.google.datamodel.GeoCoordinate@6fbe340d[_latitude=-1.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@304b7acb[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    var28.setCountry("geo.google.datamodel.GeoAddress@68a6cad6[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var15 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var17 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var18 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var19 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var27 + "' != '" + "UNKNOWN_LOCATION"+ "'", var27.equals("UNKNOWN_LOCATION"));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var33 + "' != '" + "geo.google.GeoException: hi!"+ "'", var33.equals("geo.google.GeoException: hi!"));

  }

  public void test475() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test475");


    geo.google.mapping.XmlToUsAddressFunctor var0 = geo.google.mapping.XmlToUsAddressFunctor.getInstance();
    // The following exception was thrown during execution.
    // This behavior will recorded for regression testing.
    try {
      java.util.List var2 = var0.execute("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
      fail("Expected exception of type geo.google.GeoException");
    } catch (geo.google.GeoException e) {
      // Expected exception.
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var0);

  }

  public void test476() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test476");


    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberPrefix var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberPrefix();
    java.lang.String var1 = var0.getNumberPrefixSeparator();
    java.lang.String var2 = var0.getCode();
    java.util.Map var3 = var0.getOtherAttributes();
    java.lang.String var4 = var0.getValue();
    var0.setType("geo.google.datamodel.GeoUsAddress@7d645dcd[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=(default) Indicates to ignore an altitude specification\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@484a7e0b[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@12992941[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test477() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test477");


    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange.PremiseNumberRangeFrom();
    java.util.List var1 = var0.getPremiseNumber();
    java.util.List var2 = var0.getAddressLine();
    java.util.List var3 = var0.getPremiseNumberSuffix();
    java.util.List var4 = var0.getAddressLine();
    java.util.List var5 = var0.getAddressLine();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);

  }

  public void test478() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test478");


    oasis.names.tc.ciq.xsdschema.xal._2.XAL var0 = new oasis.names.tc.ciq.xsdschema.xal._2.XAL();
    java.lang.String var1 = var0.getVersion();
    java.util.Map var2 = var0.getOtherAttributes();
    java.util.List var3 = var0.getAny();
    java.util.List var4 = var0.getAny();
    var0.setVersion("geo.google.GeoException: , geo.google.GeoException: hi!,  UNKNOWN_LOCATION");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test479() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test479");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.getMailStop();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var2 = var0.getFirm();
    java.util.List var3 = var0.getSubPremiseNumber();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);

  }

  public void test480() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test480");


    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber var0 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumber();
    var0.setNumberTypeOccurrence("hi!");
    java.lang.String var3 = var0.getContent();
    java.util.Map var4 = var0.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test481() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test481");


    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityName();
    java.lang.String var1 = var0.getCode();
    java.lang.String var2 = var0.getCode();
    var0.setCode("hi!");
    var0.setContent("geo.google.datamodel.GeoAddress@573daff4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.util.Map var7 = var0.getOtherAttributes();
    var0.setCode("geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n], Uknown Status geo.google.datamodel.GeoAddress@9d8c8f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);

  }

  public void test482() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test482");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode();
    java.lang.String var1 = var0.getType();
    var0.setContent("");
    java.lang.String var4 = var0.getType();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test483() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test483");


    geo.google.datamodel.GeoAltitude var1 = new geo.google.datamodel.GeoAltitude(10.0d);
    var1.setAltitude((-1.0d));
    java.lang.String var4 = var1.toString();
    geo.google.datamodel.GeoCoordinate var5 = new geo.google.datamodel.GeoCoordinate();
    double var6 = var5.getLongitude();
    geo.google.datamodel.GeoCoordinate var7 = new geo.google.datamodel.GeoCoordinate();
    double var8 = var7.getLongitude();
    double var9 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var5, var7);
    geo.google.datamodel.GeoCoordinate var10 = new geo.google.datamodel.GeoCoordinate();
    double var11 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInMiles(var5, var10);
    geo.google.datamodel.GeoStatusCode var14 = geo.google.datamodel.GeoStatusCode.getStatusCode(1);
    geo.google.GeoException var15 = new geo.google.GeoException("", var14);
    boolean var16 = var5.equals((java.lang.Object)var14);
    geo.google.datamodel.GeoAltitude var18 = new geo.google.datamodel.GeoAltitude(0.0d);
    var5.setAltitude(var18);
    java.lang.String var20 = var18.toString();
    geo.google.datamodel.GeoAltitude.GeoAltitudeMode var21 = var18.getMode();
    var1.setMode(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var6 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var9 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var16 == false);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);

  }

  public void test484() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test484");


    oasis.names.tc.ciq.xsdschema.xal._2.Department.DepartmentName var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Department.DepartmentName();
    java.lang.String var1 = var0.getType();
    var0.setType("geo.google.datamodel.GeoAddress@6c4c5429[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var0.setType("geo.google.datamodel.GeoAddress@357d260d[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=UNKNOWN_LOCATION\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);

  }

  public void test485() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test485");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var2 = var0.getAddressLines();
    var0.setUsage("");
    var0.setCode("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var7 = var0.getPostalServiceElements();
    var0.setCurrentStatus("geo.google.GeoException: geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var11 = var10.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var12 = var10.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var13 = var10.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberPrefix var14 = var10.createThoroughfareNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLinesType var15 = var10.createAddressLinesType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var16 = var10.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var17 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var18 = var17.getIndicator();
    java.util.Map var19 = var17.getOtherAttributes();
    var16.setAdministrativeArea(var17);
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var21 = var16.getThoroughfare();
    var0.setCountry(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var23 = var0.getPostalServiceElements();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);

  }

  public void test486() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test486");


    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumberExtension var0 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostalCodeNumberExtension();
    java.lang.String var1 = var0.getCode();
    java.lang.String var2 = var0.getCode();
    java.lang.String var3 = var0.getType();
    java.util.Map var4 = var0.getOtherAttributes();
    var0.setNumberExtensionSeparator("geo.google.GeoException: ");
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);

  }

  public void test487() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test487");


    com.google.earth.kml._2.PointType var0 = new com.google.earth.kml._2.PointType();
    var0.setTessellate((java.lang.Boolean)true);
    var0.setExtrude((java.lang.Boolean)false);
    java.lang.Boolean var5 = var0.isExtrude();
    var0.setCoordinates("Uknown Status");
    java.lang.Boolean var8 = var0.isExtrude();
    var0.setExtrude((java.lang.Boolean)false);
    java.lang.Boolean var11 = var0.isTessellate();
    java.lang.Boolean var12 = var0.isTessellate();
    var0.setTessellate((java.lang.Boolean)true);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var5 + "' != '" + false+ "'", var5.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var8 + "' != '" + false+ "'", var8.equals(false));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var11 + "' != '" + true+ "'", var11.equals(true));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var12 + "' != '" + true+ "'", var12.equals(true));

  }

  public void test488() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test488");


    geo.google.datamodel.GeoCoordinate var7 = new geo.google.datamodel.GeoCoordinate();
    double var8 = var7.getLongitude();
    geo.google.datamodel.GeoCoordinate var9 = new geo.google.datamodel.GeoCoordinate();
    double var10 = var9.getLongitude();
    double var11 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var7, var9);
    geo.google.datamodel.GeoCoordinate var19 = new geo.google.datamodel.GeoCoordinate();
    double var20 = var19.getLongitude();
    geo.google.datamodel.GeoCoordinate var21 = new geo.google.datamodel.GeoCoordinate();
    double var22 = var21.getLongitude();
    double var23 = geo.google.datamodel.GeoUtils.haversineDistanceBetweenInKm(var19, var21);
    double var24 = var21.getLatitude();
    var21.setLatitude(0.0d);
    geo.google.datamodel.GeoAddressAccuracy var28 = geo.google.datamodel.GeoAddressAccuracy.getAccuracyByCode(100);
    geo.google.datamodel.GeoUsAddress var29 = new geo.google.datamodel.GeoUsAddress("geo.google.GeoException: ", "geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.GeoException: hi!", "Uknown Status", "", "UNKNOWN_LOCATION", "", var21, var28);
    geo.google.datamodel.GeoUsAddress var30 = new geo.google.datamodel.GeoUsAddress("G_GEO_UNKOWN_STATUS", "geo.google.datamodel.GeoAddress@365f2a4c[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@3174278e[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", "geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]", var7, var28);
    java.lang.String var31 = var7.toString();
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var8 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var10 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var11 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var20 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var22 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var23 == 0.0d);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue(var24 == (-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);

  }

  public void test489() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test489");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SupplementaryPostalServiceData();
    java.lang.String var1 = var0.getCode();
    var0.setType("geo.google.datamodel.GeoUsAddress@6e5fed59[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5bd7a6ab[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@2aff53a8[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var4 = var0.getCode();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);

  }

  public void test490() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test490");


    com.google.earth.kml._2.PlacemarkType var0 = new com.google.earth.kml._2.PlacemarkType();
    var0.setAddress("geo.google.GeoException: ");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var3 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    java.lang.String var4 = var3.getValidToDate();
    var3.setAddressDetailsKey("hi!");
    var0.setAddressDetails(var3);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var8 = var0.getAddressDetails();
    var0.setId("geo.google.datamodel.GeoAddress@51a12706[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var11 = var0.getAddressDetails();
    com.google.earth.kml._2.PointType var12 = var0.getPoint();
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);

  }

  public void test491() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test491");


    oasis.names.tc.ciq.xsdschema.xal._2.Locality var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var1.createPremise();
    java.util.List var3 = var2.getAddressLine();
    java.util.List var4 = var2.getAny();
    var2.setType("");
    var2.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var9 = var2.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var10 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var11 = var10.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var12 = var10.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var13 = var10.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var14 = var10.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var15 = var10.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var16 = var10.createFirmType();
    var2.setFirm(var16);
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var18 = var2.getMailStop();
    var2.setType("hi!");
    var0.setPremise(var2);
    java.util.Map var22 = var0.getOtherAttributes();
    var0.setUsageType("geo.google.datamodel.GeoAddress@4244bb8[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var25 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var26 = var25.createPremise();
    java.util.List var27 = var26.getAddressLine();
    java.util.List var28 = var26.getAny();
    var26.setType("");
    var26.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var33 = var26.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var34 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var35 = var34.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var36 = var34.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var37 = var34.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var38 = var34.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var39 = var34.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var40 = var34.createFirmType();
    var26.setFirm(var40);
    java.util.List var42 = var26.getBuildingName();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var43 = var26.getFirm();
    var0.setPremise(var26);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var45 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var46 = var45.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var47 = var45.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var48 = var45.createAdministrativeAreaSubAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressLine var49 = var45.createAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var50 = var45.createDependentLocalityType();
    var0.setDependentLocality(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var38);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var42);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);

  }

  public void test492() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test492");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var2 = var0.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var3 = var0.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var4 = var0.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseNumberRange var5 = var0.createPremisePremiseNumberRange();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumber var6 = var0.createPremiseNumber();
    java.lang.String var7 = var6.getNumberType();
    java.lang.String var8 = var6.getContent();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);

  }

  public void test493() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test493");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var1 = var0.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var2 = var0.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var3 = var0.createPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var4 = var0.createAdministrativeArea();
    java.util.List var5 = var4.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var6 = new oasis.names.tc.ciq.xsdschema.xal._2.Locality();
    java.lang.String var7 = var6.getIndicator();
    var4.setLocality(var6);
    java.util.List var9 = var6.getLocalityName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var10 = var6.getPostBox();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);

  }

  public void test494() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test494");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var1 = var0.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var2 = var0.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var3 = var0.createAddressDetailsPostalServiceElementsAddressLatitude();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox.PostBoxNumberPrefix var4 = var0.createPostBoxPostBoxNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var5 = var0.createSubPremiseType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var6 = var0.createPostalCodePostTown();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test495() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test495");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var2 = var0.createSubPremiseTypeSubPremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var3 = var0.createSubPremiseTypeSubPremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.KeyLineCode var4 = var0.createAddressDetailsPostalServiceElementsKeyLineCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseLocation var5 = var0.createSubPremiseTypeSubPremiseLocation();
    java.lang.String var6 = var5.getCode();
    var5.setContent("geo.google.datamodel.GeoAddress@bb4d8b3[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);

  }

  public void test496() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test496");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var1 = var0.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var2 = var0.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var3 = var0.createAddressDetailsCountry();
    java.util.List var4 = var3.getAddressLine();
    java.util.List var5 = var3.getAddressLine();
    java.util.Map var6 = var3.getOtherAttributes();
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var6);

  }

  public void test497() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test497");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Address var1 = var0.getAddress();
    var0.setAccuracy((java.lang.Integer)1);
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var4 = var0.getLocality();
    var0.setAccuracy((java.lang.Integer)1);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var7 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType.PostalRouteName var8 = var7.createPostalRouteTypePostalRouteName();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var9 = var7.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country var10 = var7.createAddressDetailsCountry();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var11 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    java.lang.String var12 = var11.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var13 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var14 = var13.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var15 = var13.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var16 = var13.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var17 = var16.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var18 = var16.getPostOffice();
    java.lang.String var19 = var16.getUsageType();
    java.util.List var20 = var16.getAddressLine();
    var11.setSubAdministrativeArea(var16);
    java.lang.String var22 = var11.getIndicator();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var23 = var11.getPostalCode();
    var10.setAdministrativeArea(var11);
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var25 = var10.getAdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var26 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var27 = var26.getSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var28 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var29 = var28.getAny();
    var26.setSubPremise(var28);
    java.util.List var31 = var26.getSubPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var32 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var33 = var32.createPremise();
    java.util.List var34 = var33.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var35 = var33.getFirm();
    var33.setPremiseThoroughfareConnector("G_GEO_UNKOWN_STATUS");
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var38 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var39 = var38.createPremise();
    java.lang.String var40 = var39.getPremiseThoroughfareConnector();
    var33.setPremise(var39);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var42 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var43 = var42.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var44 = var42.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var45 = var42.createAdministrativeAreaSubAdministrativeArea();
    java.lang.String var46 = var45.getType();
    java.util.List var47 = var45.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var48 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var49 = var48.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var50 = var48.createPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown.PostTownSuffix var51 = var48.createPostalCodePostTownPostTownSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var52 = var48.createThoroughfare();
    java.util.List var53 = var52.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var54 = new oasis.names.tc.ciq.xsdschema.xal._2.PostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode.PostTown var55 = var54.getPostTown();
    var52.setPostalCode(var54);
    var45.setPostalCode(var54);
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var58 = var45.getPostalCode();
    var33.setPostalCode(var58);
    var26.setPostalCode(var58);
    var25.setPostalCode(var58);
    var0.setAdministrativeArea(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var40);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var43);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var46);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var49);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var55);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var58);

  }

  public void test498() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test498");


    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements var0 = new oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var1 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var2 = var1.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.EndorsementLineCode var3 = var1.createAddressDetailsPostalServiceElementsEndorsementLineCode();
    java.lang.String var4 = var3.getCode();
    java.util.Map var5 = var3.getOtherAttributes();
    var3.setCode("G_GEO_UNKOWN_STATUS");
    var0.setEndorsementLineCode(var3);
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitude var9 = var0.getAddressLatitude();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var10 = var0.getAddressLatitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var11 = var0.getBarcode();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var12 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var13 = var12.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.Country.CountryNameCode var14 = var12.createAddressDetailsCountryCountryNameCode();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLatitudeDirection var15 = var12.createAddressDetailsPostalServiceElementsAddressLatitudeDirection();
    java.lang.String var16 = var15.getContent();
    java.util.Map var17 = var15.getOtherAttributes();
    var15.setContent("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    var15.setCode("geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    java.lang.String var22 = var15.getContent();
    var0.setAddressLatitudeDirection(var15);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var24 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var25 = var24.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var26 = var24.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var27 = var24.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var28 = var24.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.Barcode var29 = var24.createAddressDetailsPostalServiceElementsBarcode();
    var29.setType("geo.google.GeoException: ");
    java.lang.String var32 = var29.getContent();
    java.lang.String var33 = var29.getContent();
    java.util.Map var34 = var29.getOtherAttributes();
    var0.setBarcode(var29);
    var29.setContent("geo.google.datamodel.GeoAddress@3c53f765[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var9);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var16);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var17);
    
    // Regression assertion (captures the current behavior of the code)
    assertTrue("'" + var22 + "' != '" + "geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"+ "'", var22.equals("geo.google.datamodel.GeoAddress@3e691d5f[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]"));
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var26);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var28);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var32);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);

  }

  public void test499() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test499");


    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var0 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.createMailStopType();
    oasis.names.tc.ciq.xsdschema.xal._2.CountryName var2 = var0.createCountryName();
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea.SubAdministrativeArea var3 = var0.createAdministrativeAreaSubAdministrativeArea();
    java.util.List var4 = var3.getAny();
    var3.setType("(default) Indicates to ignore an altitude specification");
    oasis.names.tc.ciq.xsdschema.xal._2.Locality var7 = var3.getLocality();
    var3.setUsageType("G_GEO_UNKOWN_STATUS");
    java.util.List var10 = var3.getSubAdministrativeAreaName();
    java.util.List var11 = var3.getSubAdministrativeAreaName();
    var3.setUsageType("geo.google.datamodel.GeoUsAddress@728c3b08[\n  _addressLine1=geo.google.GeoException: hi!\n  _addressLine2=(default) Indicates to ignore an altitude specification\n  _city=geo.google.datamodel.GeoAddress@753425c4[\n  _coordinate=<null>\n  _addressDetails=<null>\n  _addressLine=\n  _accuracy=UNKNOWN_LOCATION\n]\n  _county=Uknown Status\n  _state=geo.google.GeoException: \n  _postalCode=\n  _country=UNKNOWN_LOCATION\n  _coordinate=geo.google.datamodel.GeoCoordinate@5477c4f8[_latitude=0.0,_longitude=-1.0,_altitude=geo.google.datamodel.GeoAltitude@324a11b[_altitude=0.0,_mode=CLAMP_TO_GROUND]]\n  _accuracy=UNKNOWN_LOCATION\n]");
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var4);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);

  }

  public void test500() throws Throwable {

    if (debug) System.out.printf("%nRandoopTest5.test500");


    oasis.names.tc.ciq.xsdschema.xal._2.Department var0 = new oasis.names.tc.ciq.xsdschema.xal._2.Department();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var1 = var0.getMailStop();
    java.util.List var2 = var0.getAny();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var3 = var0.getPostalCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType var4 = new oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType();
    java.util.List var5 = var4.getSubPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var6 = var4.getPostalCode();
    java.util.List var7 = var4.getSubPremiseNumberPrefix();
    java.lang.String var8 = var4.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var9 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var10 = var9.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var11 = var9.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var12 = var9.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var13 = var9.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var14 = var9.createLargeMailUserTypeLargeMailUserIdentifier();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var15 = var9.createMailStopType();
    var4.setMailStop(var15);
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var17 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var18 = var17.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.SubPremiseType.SubPremiseNumberPrefix var19 = var17.createSubPremiseTypeSubPremiseNumberPrefix();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalRouteType var20 = var17.createPostalRouteType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType var21 = var17.createDependentLocalityType();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.AddressLongitudeDirection var22 = var17.createAddressDetailsPostalServiceElementsAddressLongitudeDirection();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopNumber var23 = var17.createMailStopTypeMailStopNumber();
    var15.setMailStopNumber(var23);
    java.util.List var25 = var15.getAny();
    var0.setMailStop(var15);
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType var27 = var0.getMailStop();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var28 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var29 = var28.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var30 = var28.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var31 = var30.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var32 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var33 = var32.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var34 = var32.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.PremiseNumberSuffix var35 = var32.createPremiseNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise.PremiseLocation var36 = var32.createPremisePremiseLocation();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var37 = var32.createLargeMailUserTypeLargeMailUserIdentifier();
    var30.setLargeMailUserIdentifier(var37);
    java.lang.String var39 = var30.getType();
    oasis.names.tc.ciq.xsdschema.xal._2.PostBox var40 = new oasis.names.tc.ciq.xsdschema.xal._2.PostBox();
    var40.setIndicator("G_GEO_UNKOWN_STATUS");
    var30.setPostBox(var40);
    java.util.Map var44 = var30.getOtherAttributes();
    oasis.names.tc.ciq.xsdschema.xal._2.Thoroughfare var45 = var30.getThoroughfare();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var46 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var47 = var46.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var48 = var46.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var49 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var50 = var49.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var51 = var49.createPremise();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareLeadingTypeType var52 = var49.createThoroughfareLeadingTypeType();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType.LargeMailUserIdentifier var53 = var49.createLargeMailUserTypeLargeMailUserIdentifier();
    java.lang.String var54 = var53.getIndicator();
    var48.setLargeMailUserIdentifier(var53);
    java.lang.String var56 = var53.getType();
    java.lang.String var57 = var53.getIndicator();
    java.lang.String var58 = var53.getCode();
    var53.setIndicator("Uknown Status");
    var30.setLargeMailUserIdentifier(var53);
    oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea var62 = new oasis.names.tc.ciq.xsdschema.xal._2.AdministrativeArea();
    oasis.names.tc.ciq.xsdschema.xal._2.PostOffice var63 = var62.getPostOffice();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var64 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.Premise var65 = var64.createPremise();
    java.util.List var66 = var65.getAddressLine();
    java.util.List var67 = var65.getAny();
    var65.setType("");
    var65.setPremiseThoroughfareConnector("geo.google.GeoException: ");
    java.util.List var72 = var65.getPremiseName();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var73 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNumberSuffix var74 = var73.createThoroughfareNumberSuffix();
    oasis.names.tc.ciq.xsdschema.xal._2.LargeMailUserType var75 = var73.createLargeMailUserType();
    oasis.names.tc.ciq.xsdschema.xal._2.DependentLocalityType.DependentLocalityNumber var76 = var73.createDependentLocalityTypeDependentLocalityNumber();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfarePostDirectionType var77 = var73.createThoroughfarePostDirectionType();
    oasis.names.tc.ciq.xsdschema.xal._2.ThoroughfareNameType var78 = var73.createThoroughfareNameType();
    oasis.names.tc.ciq.xsdschema.xal._2.FirmType var79 = var73.createFirmType();
    var65.setFirm(var79);
    java.util.List var81 = var79.getAddressLine();
    oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory var82 = new oasis.names.tc.ciq.xsdschema.xal._2.ObjectFactory();
    oasis.names.tc.ciq.xsdschema.xal._2.AddressDetails.PostalServiceElements.SortingCode var83 = var82.createAddressDetailsPostalServiceElementsSortingCode();
    oasis.names.tc.ciq.xsdschema.xal._2.MailStopType.MailStopName var84 = var82.createMailStopTypeMailStopName();
    oasis.names.tc.ciq.xsdschema.xal._2.PostalCode var85 = var82.createPostalCode();
    var79.setPostalCode(var85);
    java.util.List var87 = var85.getAddressLine();
    var62.setPostalCode(var85);
    var30.setPostalCode(var85);
    var0.setPostalCode(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var1);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var2);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var3);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var5);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var6);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var7);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var8);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var10);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var11);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var12);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var13);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var14);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var15);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var18);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var19);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var20);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var21);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var22);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var23);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var25);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var27);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var29);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var30);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var31);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var33);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var34);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var35);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var36);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var37);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var39);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var44);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var45);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var47);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var48);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var50);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var51);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var52);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var53);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var54);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var56);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var57);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var58);
    
    // Regression assertion (captures the current behavior of the code)
    assertNull(var63);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var65);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var66);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var67);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var72);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var74);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var75);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var76);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var77);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var78);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var79);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var81);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var83);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var84);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var85);
    
    // Regression assertion (captures the current behavior of the code)
    assertNotNull(var87);

  }

}
