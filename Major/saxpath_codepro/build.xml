<project name="tullibee" default="compile" basedir=".">

<!-- ##############################################
      Path to Major and Mutation options 
      Use -Dmutation="=mml-file" to set path to mml-file
     ############################################## -->
    <property name="mutation" value=":ALL"/>
    <property name="mutator" value="-XMutator${mutation}"/>
    <property name="major" value="../bin/javac"/>

  <!-- The directories for compilation targets -->
  <property name="build.home"              value="bin"/>
  <property name="build.classes"           value="${build.home}/classes"/>
  <property name="build.tests"             value="${build.home}/tests"/>
  	
  <!-- The base directories for sources -->
  <property name="source.java"             value="src/main/java"/>
  <property name="test.java"               value="src/test/java"/>
  <property name="source.resources"        value="src/main/resources"/>
  <property name="test.resources"          value="src/test/resources"/>

<!-- Target to clean up -->
    <target name="clean" description="Clean">
        <delete dir="bin"/>
        <delete>
            <fileset dir="." includes="*.csv"/>
            <fileset dir="." includes="*.log"/>
	    </delete>
    </target>

<!-- Target to initialize build -->
    <target name="init">
    <mkdir dir="${build.home}"/>
    <mkdir dir="${build.classes}"/>
    <mkdir dir="${build.tests}"/>
    <mkdir dir="${source.java}"/>
    <mkdir dir="${source.resources}"/>
    <mkdir dir="${test.java}"/>
    <mkdir dir="${test.resources}"/>
    </target>

<!-- Target to compile the project -->
    <target name="compile" depends="init" description="Compile">
        <javac includeantruntime="true" 
               srcdir="${source.java}"
              destdir="${build.classes}"
                debug="yes"
	         fork="yes"
             encoding="windows-1252"
	   executable="${major}">
            <compilerarg value="${mutator}"/>
	    <classpath>
	      <fileset dir="lib">
		<include name="**/*.jar"/>
	      </fileset>
	    </classpath>
        </javac>
    <copy todir="${build.classes}">
        <fileset dir="${source.java}" excludes="**/*.java"/>
        <fileset dir="${source.resources}" includes="**"/>
    </copy>
    </target>

<!-- Target to compile the test suite -->
    <target name="compile.tests" depends="compile" description="Compile all tests">
        <javac includeantruntime="true" 
               srcdir="${test.java}"
              destdir="${build.tests}"
                debug="yes"
	         fork="yes"
             encoding="windows-1252"
	   executable="${major}">
	    <classpath>
	      <fileset dir="lib">
		<include name="**/*.jar"/>
	      </fileset>
		<pathelement path="${build.classes}"/>
	    </classpath>
        </javac>
    <copy todir="${build.tests}">
        <fileset dir="${test.java}" excludes="**/*.java"/>
        <fileset dir="${test.resources}"/>
    </copy>
    </target>

<!-- The adapted mutation test target -->
    <target name="mutation.test" description="Run mutation analysis for all unit test cases">
        <echo message="Running mutation analysis ..."/>
         <junit printsummary="false" 
        	showoutput="true" 
        	mutationAnalysis="true"
                resultFile="results.csv" 
                killDetailsFile="killed.csv">
            <classpath>
	      <pathelement path="${build.classes}"/>
              <pathelement path="${build.tests}"/>
	      <fileset dir="lib">
		<include name="**/*.jar"/>
	      </fileset>
	    </classpath>
	    <batchtest fork="false">
                <fileset dir="${test.java}">
                    <include name="**/*Test*.java"/>
		    <exclude name="**/helpers/*Test*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

<!-- The original test target -->
    <target name="test" description="Run all unit test cases">
        <echo message="Running unit tests ..."/>
        <junit printsummary="true" 
        	showoutput="true" 
                haltonfailure="false">
            <formatter type="plain" usefile="false"/>
            <classpath>
	      <pathelement path="${build.classes}"/>
              <pathelement path="${build.tests}"/>
	      <fileset dir="lib">
		<include name="**/*.jar"/>
	      </fileset>
	    </classpath>
	    <batchtest fork="no">
                <fileset dir="${test.java}">
                    <include name="**/*Test*.java"/>
		    <exclude name="**/helpers/*Test*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
</project>
